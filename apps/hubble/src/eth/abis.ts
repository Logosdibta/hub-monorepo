export const IdRegistry = {
  abi: [
    {
      inputs: [
        {
          internalType: 'address',
          name: '_forwarder',
          type: 'address',
        },
      ],
      stateMutability: 'nonpayable',
      type: 'constructor',
    },
    {
      inputs: [],
      name: 'Escrow',
      type: 'error',
    },
    {
      inputs: [],
      name: 'HasId',
      type: 'error',
    },
    {
      inputs: [],
      name: 'HasNoId',
      type: 'error',
    },
    {
      inputs: [],
      name: 'Invitable',
      type: 'error',
    },
    {
      inputs: [],
      name: 'NoRecovery',
      type: 'error',
    },
    {
      inputs: [],
      name: 'Registrable',
      type: 'error',
    },
    {
      inputs: [],
      name: 'Unauthorized',
      type: 'error',
    },
    {
      anonymous: false,
      inputs: [
        {
          indexed: true,
          internalType: 'address',
          name: 'by',
          type: 'address',
        },
        {
          indexed: true,
          internalType: 'uint256',
          name: 'id',
          type: 'uint256',
        },
      ],
      name: 'CancelRecovery',
      type: 'event',
    },
    {
      anonymous: false,
      inputs: [
        {
          indexed: true,
          internalType: 'uint256',
          name: 'id',
          type: 'uint256',
        },
        {
          indexed: false,
          internalType: 'string',
          name: 'url',
          type: 'string',
        },
      ],
      name: 'ChangeHome',
      type: 'event',
    },
    {
      anonymous: false,
      inputs: [
        {
          indexed: true,
          internalType: 'uint256',
          name: 'id',
          type: 'uint256',
        },
        {
          indexed: true,
          internalType: 'address',
          name: 'recovery',
          type: 'address',
        },
      ],
      name: 'ChangeRecoveryAddress',
      type: 'event',
    },
    {
      anonymous: false,
      inputs: [
        {
          indexed: true,
          internalType: 'address',
          name: 'trustedCaller',
          type: 'address',
        },
      ],
      name: 'ChangeTrustedCaller',
      type: 'event',
    },
    {
      anonymous: false,
      inputs: [],
      name: 'DisableTrustedOnly',
      type: 'event',
    },
    {
      anonymous: false,
      inputs: [
        {
          indexed: true,
          internalType: 'address',
          name: 'previousOwner',
          type: 'address',
        },
        {
          indexed: true,
          internalType: 'address',
          name: 'newOwner',
          type: 'address',
        },
      ],
      name: 'OwnershipTransferred',
      type: 'event',
    },
    {
      anonymous: false,
      inputs: [
        {
          indexed: true,
          internalType: 'address',
          name: 'to',
          type: 'address',
        },
        {
          indexed: true,
          internalType: 'uint256',
          name: 'id',
          type: 'uint256',
        },
        {
          indexed: false,
          internalType: 'address',
          name: 'recovery',
          type: 'address',
        },
        {
          indexed: false,
          internalType: 'string',
          name: 'url',
          type: 'string',
        },
      ],
      name: 'Register',
      type: 'event',
    },
    {
      anonymous: false,
      inputs: [
        {
          indexed: true,
          internalType: 'address',
          name: 'from',
          type: 'address',
        },
        {
          indexed: true,
          internalType: 'address',
          name: 'to',
          type: 'address',
        },
        {
          indexed: true,
          internalType: 'uint256',
          name: 'id',
          type: 'uint256',
        },
      ],
      name: 'RequestRecovery',
      type: 'event',
    },
    {
      anonymous: false,
      inputs: [
        {
          indexed: true,
          internalType: 'address',
          name: 'from',
          type: 'address',
        },
        {
          indexed: true,
          internalType: 'address',
          name: 'to',
          type: 'address',
        },
        {
          indexed: true,
          internalType: 'uint256',
          name: 'id',
          type: 'uint256',
        },
      ],
      name: 'Transfer',
      type: 'event',
    },
    {
      inputs: [
        {
          internalType: 'address',
          name: 'from',
          type: 'address',
        },
      ],
      name: 'cancelRecovery',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function',
    },
    {
      inputs: [
        {
          internalType: 'string',
          name: 'url',
          type: 'string',
        },
      ],
      name: 'changeHome',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function',
    },
    {
      inputs: [
        {
          internalType: 'address',
          name: 'recovery',
          type: 'address',
        },
      ],
      name: 'changeRecoveryAddress',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function',
    },
    {
      inputs: [
        {
          internalType: 'address',
          name: '_trustedCaller',
          type: 'address',
        },
      ],
      name: 'changeTrustedCaller',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function',
    },
    {
      inputs: [
        {
          internalType: 'address',
          name: 'from',
          type: 'address',
        },
      ],
      name: 'completeRecovery',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function',
    },
    {
      inputs: [],
      name: 'completeTransferOwnership',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function',
    },
    {
      inputs: [],
      name: 'disableTrustedOnly',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function',
    },
    {
      inputs: [
        {
          internalType: 'address',
          name: '',
          type: 'address',
        },
      ],
      name: 'idOf',
      outputs: [
        {
          internalType: 'uint256',
          name: '',
          type: 'uint256',
        },
      ],
      stateMutability: 'view',
      type: 'function',
    },
    {
      inputs: [
        {
          internalType: 'address',
          name: 'forwarder',
          type: 'address',
        },
      ],
      name: 'isTrustedForwarder',
      outputs: [
        {
          internalType: 'bool',
          name: '',
          type: 'bool',
        },
      ],
      stateMutability: 'view',
      type: 'function',
    },
    {
      inputs: [],
      name: 'owner',
      outputs: [
        {
          internalType: 'address',
          name: '',
          type: 'address',
        },
      ],
      stateMutability: 'view',
      type: 'function',
    },
    {
      inputs: [
        {
          internalType: 'address',
          name: 'to',
          type: 'address',
        },
        {
          internalType: 'address',
          name: 'recovery',
          type: 'address',
        },
        {
          internalType: 'string',
          name: 'url',
          type: 'string',
        },
      ],
      name: 'register',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function',
    },
    {
      inputs: [],
      name: 'renounceOwnership',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function',
    },
    {
      inputs: [
        {
          internalType: 'address',
          name: 'from',
          type: 'address',
        },
        {
          internalType: 'address',
          name: 'to',
          type: 'address',
        },
      ],
      name: 'requestRecovery',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function',
    },
    {
      inputs: [
        {
          internalType: 'address',
          name: 'newOwner',
          type: 'address',
        },
      ],
      name: 'requestTransferOwnership',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function',
    },
    {
      inputs: [
        {
          internalType: 'address',
          name: 'to',
          type: 'address',
        },
      ],
      name: 'transfer',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function',
    },
    {
      inputs: [
        {
          internalType: 'address',
          name: '',
          type: 'address',
        },
      ],
      name: 'transferOwnership',
      outputs: [],
      stateMutability: 'view',
      type: 'function',
    },
    {
      inputs: [
        {
          internalType: 'address',
          name: 'to',
          type: 'address',
        },
        {
          internalType: 'address',
          name: 'recovery',
          type: 'address',
        },
        {
          internalType: 'string',
          name: 'url',
          type: 'string',
        },
      ],
      name: 'trustedRegister',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function',
    },
  ],
  bytecode:
    '',
} as const;

export const NameRegistry = {
  abi: [
    {
      inputs: [
        {
          internalType: 'address',
          name: '_forwarder',
          type: 'address',
        },
      ],
      stateMutability: 'nonpayable',
      type: 'constructor',
    },
    {
      inputs: [],
      name: 'CallFailed',
      type: 'error',
    },
    {
      inputs: [],
      name: 'CommitReplay',
      type: 'error',
    },
    {
      inputs: [],
      name: 'Escrow',
      type: 'error',
    },
    {
      inputs: [],
      name: 'Expired',
      type: 'error',
    },
    {
      inputs: [],
      name: 'InsufficientFunds',
      type: 'error',
    },
    {
      inputs: [],
      name: 'InvalidCommit',
      type: 'error',
    },
    {
      inputs: [],
      name: 'InvalidName',
      type: 'error',
    },
    {
      inputs: [],
      name: 'InvalidRecovery',
      type: 'error',
    },
    {
      inputs: [],
      name: 'Invitable',
      type: 'error',
    },
    {
      inputs: [],
      name: 'NoRecovery',
      type: 'error',
    },
    {
      inputs: [],
      name: 'NotAdmin',
      type: 'error',
    },
    {
      inputs: [],
      name: 'NotBiddable',
      type: 'error',
    },
    {
      inputs: [],
      name: 'NotInvitable',
      type: 'error',
    },
    {
      inputs: [],
      name: 'NotModerator',
      type: 'error',
    },
    {
      inputs: [],
      name: 'NotOperator',
      type: 'error',
    },
    {
      inputs: [],
      name: 'NotRenewable',
      type: 'error',
    },
    {
      inputs: [],
      name: 'NotTreasurer',
      type: 'error',
    },
    {
      inputs: [],
      name: 'Registered',
      type: 'error',
    },
    {
      inputs: [],
      name: 'Registrable',
      type: 'error',
    },
    {
      inputs: [],
      name: 'Unauthorized',
      type: 'error',
    },
    {
      anonymous: false,
      inputs: [
        {
          indexed: false,
          internalType: 'address',
          name: 'previousAdmin',
          type: 'address',
        },
        {
          indexed: false,
          internalType: 'address',
          name: 'newAdmin',
          type: 'address',
        },
      ],
      name: 'AdminChanged',
      type: 'event',
    },
    {
      anonymous: false,
      inputs: [
        {
          indexed: true,
          internalType: 'address',
          name: 'owner',
          type: 'address',
        },
        {
          indexed: true,
          internalType: 'address',
          name: 'approved',
          type: 'address',
        },
        {
          indexed: true,
          internalType: 'uint256',
          name: 'tokenId',
          type: 'uint256',
        },
      ],
      name: 'Approval',
      type: 'event',
    },
    {
      anonymous: false,
      inputs: [
        {
          indexed: true,
          internalType: 'address',
          name: 'owner',
          type: 'address',
        },
        {
          indexed: true,
          internalType: 'address',
          name: 'operator',
          type: 'address',
        },
        {
          indexed: false,
          internalType: 'bool',
          name: 'approved',
          type: 'bool',
        },
      ],
      name: 'ApprovalForAll',
      type: 'event',
    },
    {
      anonymous: false,
      inputs: [
        {
          indexed: true,
          internalType: 'address',
          name: 'beacon',
          type: 'address',
        },
      ],
      name: 'BeaconUpgraded',
      type: 'event',
    },
    {
      anonymous: false,
      inputs: [
        {
          indexed: true,
          internalType: 'address',
          name: 'by',
          type: 'address',
        },
        {
          indexed: true,
          internalType: 'uint256',
          name: 'tokenId',
          type: 'uint256',
        },
      ],
      name: 'CancelRecovery',
      type: 'event',
    },
    {
      anonymous: false,
      inputs: [
        {
          indexed: false,
          internalType: 'uint256',
          name: 'fee',
          type: 'uint256',
        },
      ],
      name: 'ChangeFee',
      type: 'event',
    },
    {
      anonymous: false,
      inputs: [
        {
          indexed: true,
          internalType: 'address',
          name: 'pool',
          type: 'address',
        },
      ],
      name: 'ChangePool',
      type: 'event',
    },
    {
      anonymous: false,
      inputs: [
        {
          indexed: true,
          internalType: 'uint256',
          name: 'tokenId',
          type: 'uint256',
        },
        {
          indexed: true,
          internalType: 'address',
          name: 'recovery',
          type: 'address',
        },
      ],
      name: 'ChangeRecoveryAddress',
      type: 'event',
    },
    {
      anonymous: false,
      inputs: [
        {
          indexed: true,
          internalType: 'address',
          name: 'trustedCaller',
          type: 'address',
        },
      ],
      name: 'ChangeTrustedCaller',
      type: 'event',
    },
    {
      anonymous: false,
      inputs: [
        {
          indexed: true,
          internalType: 'address',
          name: 'vault',
          type: 'address',
        },
      ],
      name: 'ChangeVault',
      type: 'event',
    },
    {
      anonymous: false,
      inputs: [],
      name: 'DisableTrustedOnly',
      type: 'event',
    },
    {
      anonymous: false,
      inputs: [
        {
          indexed: false,
          internalType: 'uint8',
          name: 'version',
          type: 'uint8',
        },
      ],
      name: 'Initialized',
      type: 'event',
    },
    {
      anonymous: false,
      inputs: [
        {
          indexed: true,
          internalType: 'uint256',
          name: 'inviterId',
          type: 'uint256',
        },
        {
          indexed: true,
          internalType: 'uint256',
          name: 'inviteeId',
          type: 'uint256',
        },
        {
          indexed: true,
          internalType: 'bytes16',
          name: 'fname',
          type: 'bytes16',
        },
      ],
      name: 'Invite',
      type: 'event',
    },
    {
      anonymous: false,
      inputs: [
        {
          indexed: false,
          internalType: 'address',
          name: 'account',
          type: 'address',
        },
      ],
      name: 'Paused',
      type: 'event',
    },
    {
      anonymous: false,
      inputs: [
        {
          indexed: true,
          internalType: 'uint256',
          name: 'tokenId',
          type: 'uint256',
        },
        {
          indexed: false,
          internalType: 'uint256',
          name: 'expiry',
          type: 'uint256',
        },
      ],
      name: 'Renew',
      type: 'event',
    },
    {
      anonymous: false,
      inputs: [
        {
          indexed: true,
          internalType: 'address',
          name: 'from',
          type: 'address',
        },
        {
          indexed: true,
          internalType: 'address',
          name: 'to',
          type: 'address',
        },
        {
          indexed: true,
          internalType: 'uint256',
          name: 'tokenId',
          type: 'uint256',
        },
      ],
      name: 'RequestRecovery',
      type: 'event',
    },
    {
      anonymous: false,
      inputs: [
        {
          indexed: true,
          internalType: 'bytes32',
          name: 'role',
          type: 'bytes32',
        },
        {
          indexed: true,
          internalType: 'bytes32',
          name: 'previousAdminRole',
          type: 'bytes32',
        },
        {
          indexed: true,
          internalType: 'bytes32',
          name: 'newAdminRole',
          type: 'bytes32',
        },
      ],
      name: 'RoleAdminChanged',
      type: 'event',
    },
    {
      anonymous: false,
      inputs: [
        {
          indexed: true,
          internalType: 'bytes32',
          name: 'role',
          type: 'bytes32',
        },
        {
          indexed: true,
          internalType: 'address',
          name: 'account',
          type: 'address',
        },
        {
          indexed: true,
          internalType: 'address',
          name: 'sender',
          type: 'address',
        },
      ],
      name: 'RoleGranted',
      type: 'event',
    },
    {
      anonymous: false,
      inputs: [
        {
          indexed: true,
          internalType: 'bytes32',
          name: 'role',
          type: 'bytes32',
        },
        {
          indexed: true,
          internalType: 'address',
          name: 'account',
          type: 'address',
        },
        {
          indexed: true,
          internalType: 'address',
          name: 'sender',
          type: 'address',
        },
      ],
      name: 'RoleRevoked',
      type: 'event',
    },
    {
      anonymous: false,
      inputs: [
        {
          indexed: true,
          internalType: 'address',
          name: 'from',
          type: 'address',
        },
        {
          indexed: true,
          internalType: 'address',
          name: 'to',
          type: 'address',
        },
        {
          indexed: true,
          internalType: 'uint256',
          name: 'tokenId',
          type: 'uint256',
        },
      ],
      name: 'Transfer',
      type: 'event',
    },
    {
      anonymous: false,
      inputs: [
        {
          indexed: false,
          internalType: 'address',
          name: 'account',
          type: 'address',
        },
      ],
      name: 'Unpaused',
      type: 'event',
    },
    {
      anonymous: false,
      inputs: [
        {
          indexed: true,
          internalType: 'address',
          name: 'implementation',
          type: 'address',
        },
      ],
      name: 'Upgraded',
      type: 'event',
    },
    {
      inputs: [],
      name: 'DEFAULT_ADMIN_ROLE',
      outputs: [
        {
          internalType: 'bytes32',
          name: '',
          type: 'bytes32',
        },
      ],
      stateMutability: 'view',
      type: 'function',
    },
    {
      inputs: [
        {
          internalType: 'address',
          name: 'to',
          type: 'address',
        },
        {
          internalType: 'uint256',
          name: 'tokenId',
          type: 'uint256',
        },
      ],
      name: 'approve',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function',
    },
    {
      inputs: [
        {
          internalType: 'address',
          name: 'owner',
          type: 'address',
        },
      ],
      name: 'balanceOf',
      outputs: [
        {
          internalType: 'uint256',
          name: '',
          type: 'uint256',
        },
      ],
      stateMutability: 'view',
      type: 'function',
    },
    {
      inputs: [
        {
          internalType: 'address',
          name: 'to',
          type: 'address',
        },
        {
          internalType: 'uint256',
          name: 'tokenId',
          type: 'uint256',
        },
        {
          internalType: 'address',
          name: 'recovery',
          type: 'address',
        },
      ],
      name: 'bid',
      outputs: [],
      stateMutability: 'payable',
      type: 'function',
    },
    {
      inputs: [
        {
          internalType: 'uint256',
          name: 'tokenId',
          type: 'uint256',
        },
      ],
      name: 'cancelRecovery',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function',
    },
    {
      inputs: [
        {
          internalType: 'uint256',
          name: '_fee',
          type: 'uint256',
        },
      ],
      name: 'changeFee',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function',
    },
    {
      inputs: [
        {
          internalType: 'address',
          name: '_pool',
          type: 'address',
        },
      ],
      name: 'changePool',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function',
    },
    {
      inputs: [
        {
          internalType: 'uint256',
          name: 'tokenId',
          type: 'uint256',
        },
        {
          internalType: 'address',
          name: 'recovery',
          type: 'address',
        },
      ],
      name: 'changeRecoveryAddress',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function',
    },
    {
      inputs: [
        {
          internalType: 'address',
          name: '_trustedCaller',
          type: 'address',
        },
      ],
      name: 'changeTrustedCaller',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function',
    },
    {
      inputs: [
        {
          internalType: 'address',
          name: '_vault',
          type: 'address',
        },
      ],
      name: 'changeVault',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function',
    },
    {
      inputs: [
        {
          internalType: 'uint256',
          name: 'tokenId',
          type: 'uint256',
        },
      ],
      name: 'completeRecovery',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function',
    },
    {
      inputs: [],
      name: 'disableTrustedOnly',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function',
    },
    {
      inputs: [
        {
          internalType: 'uint256',
          name: '',
          type: 'uint256',
        },
      ],
      name: 'expiryOf',
      outputs: [
        {
          internalType: 'uint256',
          name: '',
          type: 'uint256',
        },
      ],
      stateMutability: 'view',
      type: 'function',
    },
    {
      inputs: [],
      name: 'fee',
      outputs: [
        {
          internalType: 'uint256',
          name: '',
          type: 'uint256',
        },
      ],
      stateMutability: 'view',
      type: 'function',
    },
    {
      inputs: [
        {
          internalType: 'bytes16',
          name: 'fname',
          type: 'bytes16',
        },
        {
          internalType: 'address',
          name: 'to',
          type: 'address',
        },
        {
          internalType: 'bytes32',
          name: 'secret',
          type: 'bytes32',
        },
        {
          internalType: 'address',
          name: 'recovery',
          type: 'address',
        },
      ],
      name: 'generateCommit',
      outputs: [
        {
          internalType: 'bytes32',
          name: 'commit',
          type: 'bytes32',
        },
      ],
      stateMutability: 'pure',
      type: 'function',
    },
    {
      inputs: [
        {
          internalType: 'uint256',
          name: 'tokenId',
          type: 'uint256',
        },
      ],
      name: 'getApproved',
      outputs: [
        {
          internalType: 'address',
          name: '',
          type: 'address',
        },
      ],
      stateMutability: 'view',
      type: 'function',
    },
    {
      inputs: [
        {
          internalType: 'bytes32',
          name: 'role',
          type: 'bytes32',
        },
      ],
      name: 'getRoleAdmin',
      outputs: [
        {
          internalType: 'bytes32',
          name: '',
          type: 'bytes32',
        },
      ],
      stateMutability: 'view',
      type: 'function',
    },
    {
      inputs: [
        {
          internalType: 'bytes32',
          name: 'role',
          type: 'bytes32',
        },
        {
          internalType: 'address',
          name: 'account',
          type: 'address',
        },
      ],
      name: 'grantRole',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function',
    },
    {
      inputs: [
        {
          internalType: 'bytes32',
          name: 'role',
          type: 'bytes32',
        },
        {
          internalType: 'address',
          name: 'account',
          type: 'address',
        },
      ],
      name: 'hasRole',
      outputs: [
        {
          internalType: 'bool',
          name: '',
          type: 'bool',
        },
      ],
      stateMutability: 'view',
      type: 'function',
    },
    {
      inputs: [
        {
          internalType: 'string',
          name: '_tokenName',
          type: 'string',
        },
        {
          internalType: 'string',
          name: '_tokenSymbol',
          type: 'string',
        },
        {
          internalType: 'address',
          name: '_vault',
          type: 'address',
        },
        {
          internalType: 'address',
          name: '_pool',
          type: 'address',
        },
      ],
      name: 'initialize',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function',
    },
    {
      inputs: [
        {
          internalType: 'address',
          name: 'owner',
          type: 'address',
        },
        {
          internalType: 'address',
          name: 'operator',
          type: 'address',
        },
      ],
      name: 'isApprovedForAll',
      outputs: [
        {
          internalType: 'bool',
          name: '',
          type: 'bool',
        },
      ],
      stateMutability: 'view',
      type: 'function',
    },
    {
      inputs: [
        {
          internalType: 'address',
          name: 'forwarder',
          type: 'address',
        },
      ],
      name: 'isTrustedForwarder',
      outputs: [
        {
          internalType: 'bool',
          name: '',
          type: 'bool',
        },
      ],
      stateMutability: 'view',
      type: 'function',
    },
    {
      inputs: [
        {
          internalType: 'bytes32',
          name: 'commit',
          type: 'bytes32',
        },
      ],
      name: 'makeCommit',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function',
    },
    {
      inputs: [],
      name: 'name',
      outputs: [
        {
          internalType: 'string',
          name: '',
          type: 'string',
        },
      ],
      stateMutability: 'view',
      type: 'function',
    },
    {
      inputs: [
        {
          internalType: 'uint256',
          name: 'tokenId',
          type: 'uint256',
        },
      ],
      name: 'ownerOf',
      outputs: [
        {
          internalType: 'address',
          name: '',
          type: 'address',
        },
      ],
      stateMutability: 'view',
      type: 'function',
    },
    {
      inputs: [],
      name: 'pause',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function',
    },
    {
      inputs: [],
      name: 'paused',
      outputs: [
        {
          internalType: 'bool',
          name: '',
          type: 'bool',
        },
      ],
      stateMutability: 'view',
      type: 'function',
    },
    {
      inputs: [],
      name: 'pool',
      outputs: [
        {
          internalType: 'address',
          name: '',
          type: 'address',
        },
      ],
      stateMutability: 'view',
      type: 'function',
    },
    {
      inputs: [],
      name: 'proxiableUUID',
      outputs: [
        {
          internalType: 'bytes32',
          name: '',
          type: 'bytes32',
        },
      ],
      stateMutability: 'view',
      type: 'function',
    },
    {
      inputs: [
        {
          internalType: 'uint256',
          name: 'tokenId',
          type: 'uint256',
        },
      ],
      name: 'reclaim',
      outputs: [],
      stateMutability: 'payable',
      type: 'function',
    },
    {
      inputs: [
        {
          internalType: 'uint256',
          name: '',
          type: 'uint256',
        },
      ],
      name: 'recoveryClockOf',
      outputs: [
        {
          internalType: 'uint256',
          name: '',
          type: 'uint256',
        },
      ],
      stateMutability: 'view',
      type: 'function',
    },
    {
      inputs: [
        {
          internalType: 'uint256',
          name: '',
          type: 'uint256',
        },
      ],
      name: 'recoveryDestinationOf',
      outputs: [
        {
          internalType: 'address',
          name: '',
          type: 'address',
        },
      ],
      stateMutability: 'view',
      type: 'function',
    },
    {
      inputs: [
        {
          internalType: 'uint256',
          name: '',
          type: 'uint256',
        },
      ],
      name: 'recoveryOf',
      outputs: [
        {
          internalType: 'address',
          name: '',
          type: 'address',
        },
      ],
      stateMutability: 'view',
      type: 'function',
    },
    {
      inputs: [
        {
          internalType: 'bytes16',
          name: 'fname',
          type: 'bytes16',
        },
        {
          internalType: 'address',
          name: 'to',
          type: 'address',
        },
        {
          internalType: 'bytes32',
          name: 'secret',
          type: 'bytes32',
        },
        {
          internalType: 'address',
          name: 'recovery',
          type: 'address',
        },
      ],
      name: 'register',
      outputs: [],
      stateMutability: 'payable',
      type: 'function',
    },
    {
      inputs: [
        {
          internalType: 'uint256',
          name: 'tokenId',
          type: 'uint256',
        },
      ],
      name: 'renew',
      outputs: [],
      stateMutability: 'payable',
      type: 'function',
    },
    {
      inputs: [
        {
          internalType: 'bytes32',
          name: 'role',
          type: 'bytes32',
        },
        {
          internalType: 'address',
          name: 'account',
          type: 'address',
        },
      ],
      name: 'renounceRole',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function',
    },
    {
      inputs: [
        {
          internalType: 'uint256',
          name: 'tokenId',
          type: 'uint256',
        },
        {
          internalType: 'address',
          name: 'to',
          type: 'address',
        },
      ],
      name: 'requestRecovery',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function',
    },
    {
      inputs: [
        {
          internalType: 'bytes32',
          name: 'role',
          type: 'bytes32',
        },
        {
          internalType: 'address',
          name: 'account',
          type: 'address',
        },
      ],
      name: 'revokeRole',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function',
    },
    {
      inputs: [
        {
          internalType: 'address',
          name: 'from',
          type: 'address',
        },
        {
          internalType: 'address',
          name: 'to',
          type: 'address',
        },
        {
          internalType: 'uint256',
          name: 'tokenId',
          type: 'uint256',
        },
      ],
      name: 'safeTransferFrom',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function',
    },
    {
      inputs: [
        {
          internalType: 'address',
          name: 'from',
          type: 'address',
        },
        {
          internalType: 'address',
          name: 'to',
          type: 'address',
        },
        {
          internalType: 'uint256',
          name: 'tokenId',
          type: 'uint256',
        },
        {
          internalType: 'bytes',
          name: 'data',
          type: 'bytes',
        },
      ],
      name: 'safeTransferFrom',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function',
    },
    {
      inputs: [
        {
          internalType: 'address',
          name: 'operator',
          type: 'address',
        },
        {
          internalType: 'bool',
          name: 'approved',
          type: 'bool',
        },
      ],
      name: 'setApprovalForAll',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function',
    },
    {
      inputs: [
        {
          internalType: 'bytes4',
          name: 'interfaceId',
          type: 'bytes4',
        },
      ],
      name: 'supportsInterface',
      outputs: [
        {
          internalType: 'bool',
          name: '',
          type: 'bool',
        },
      ],
      stateMutability: 'view',
      type: 'function',
    },
    {
      inputs: [],
      name: 'symbol',
      outputs: [
        {
          internalType: 'string',
          name: '',
          type: 'string',
        },
      ],
      stateMutability: 'view',
      type: 'function',
    },
    {
      inputs: [
        {
          internalType: 'bytes32',
          name: '',
          type: 'bytes32',
        },
      ],
      name: 'timestampOf',
      outputs: [
        {
          internalType: 'uint256',
          name: '',
          type: 'uint256',
        },
      ],
      stateMutability: 'view',
      type: 'function',
    },
    {
      inputs: [
        {
          internalType: 'uint256',
          name: 'tokenId',
          type: 'uint256',
        },
      ],
      name: 'tokenURI',
      outputs: [
        {
          internalType: 'string',
          name: '',
          type: 'string',
        },
      ],
      stateMutability: 'pure',
      type: 'function',
    },
    {
      inputs: [
        {
          internalType: 'address',
          name: 'from',
          type: 'address',
        },
        {
          internalType: 'address',
          name: 'to',
          type: 'address',
        },
        {
          internalType: 'uint256',
          name: 'tokenId',
          type: 'uint256',
        },
      ],
      name: 'transferFrom',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function',
    },
    {
      inputs: [],
      name: 'trustedCaller',
      outputs: [
        {
          internalType: 'address',
          name: '',
          type: 'address',
        },
      ],
      stateMutability: 'view',
      type: 'function',
    },
    {
      inputs: [],
      name: 'trustedOnly',
      outputs: [
        {
          internalType: 'uint256',
          name: '',
          type: 'uint256',
        },
      ],
      stateMutability: 'view',
      type: 'function',
    },
    {
      inputs: [
        {
          internalType: 'bytes16',
          name: 'fname',
          type: 'bytes16',
        },
        {
          internalType: 'address',
          name: 'to',
          type: 'address',
        },
        {
          internalType: 'address',
          name: 'recovery',
          type: 'address',
        },
        {
          internalType: 'uint256',
          name: 'inviter',
          type: 'uint256',
        },
        {
          internalType: 'uint256',
          name: 'invitee',
          type: 'uint256',
        },
      ],
      name: 'trustedRegister',
      outputs: [],
      stateMutability: 'payable',
      type: 'function',
    },
    {
      inputs: [],
      name: 'unpause',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function',
    },
    {
      inputs: [
        {
          internalType: 'address',
          name: 'newImplementation',
          type: 'address',
        },
      ],
      name: 'upgradeTo',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function',
    },
    {
      inputs: [
        {
          internalType: 'address',
          name: 'newImplementation',
          type: 'address',
        },
        {
          internalType: 'bytes',
          name: 'data',
          type: 'bytes',
        },
      ],
      name: 'upgradeToAndCall',
      outputs: [],
      stateMutability: 'payable',
      type: 'function',
    },
    {
      inputs: [],
      name: 'vault',
      outputs: [
        {
          internalType: 'address',
          name: '',
          type: 'address',
        },
      ],
      stateMutability: 'view',
      type: 'function',
    },
    {
      inputs: [
        {
          internalType: 'uint256',
          name: 'amount',
          type: 'uint256',
        },
      ],
      name: 'withdraw',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function',
    },
  ],
  bytecode:
    '0x60c06040523060a0523480156200001557600080fd5b506040516200555f3803806200555f833981016040819052620000389162000118565b6001600160a01b0381166080526200004f62000056565b506200014a565b600054610100900460ff1615620000c35760405162461bcd60e51b815260206004820152602760248201527f496e697469616c697a61626c653a20636f6e747261637420697320696e697469604482015266616c697a696e6760c81b606482015260840160405180910390fd5b60005460ff908116101562000116576000805460ff191660ff9081179091556040519081527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b565b6000602082840312156200012b57600080fd5b81516001600160a01b03811681146200014357600080fd5b9392505050565b60805160a0516153cc62000193600039600081816111d101528181611267015281816118050152818161189b015261199201526000818161063e0152613a6901526153cc6000f3fe6080604052600436106103555760003560e01c80636352211e116101bb5780639950e7ee116100f7578063c87b56dd11610095578063ddca3f431161006f578063ddca3f43146109de578063e985e9c5146109f5578063fa1a1b2514610a3e578063fbfa77cf14610a7557600080fd5b8063c87b56dd14610967578063cb17e04a14610987578063d547741f146109be57600080fd5b8063a22cb465116100d1578063a22cb465146108cb578063ac817ccc146108eb578063b88d4fde14610919578063baef73e91461093957600080fd5b80639950e7ee146108765780639fc999e414610896578063a217fddf146108b657600080fd5b806376fa0b8a11610164578063881b19561161013e578063881b1956146107db5780638f15b414146107fb57806391d148541461081b57806395d89b411461086157600080fd5b806376fa0b8a146107785780638456cb59146107a657806385fb8449146107bb57600080fd5b80636b2ddd4e116101955780636b2ddd4e1461072c5780636e9bde491461074357806370a082311461075857600080fd5b80636352211e146106cc5780636473b35e146106ec5780636a1db1bf1461070c57600080fd5b806336568abe116102955780634f1ef286116102335780635baa75091161020d5780635baa75091461066e5780635c975abb146106815780635e7510001461069957806360e232a9146106ac57600080fd5b80634f1ef286146105f957806352d1902d1461060c578063572b6c051461062157600080fd5b80633f4ba83a1161026f5780633f4ba83a1461059157806342842e0e146105a65780634339bc30146105c6578063464ac22c146105e657600080fd5b806336568abe1461053e5780633659cfe61461055e5780633f09a95a1461057e57600080fd5b806316f0115b11610302578063268f0760116102dc578063268f0760146104ca5780632dabbeed146104eb5780632e1a7d4d146104fe5780632f2ff15d1461051e57600080fd5b806316f0115b1461044b57806323b872dd1461046c578063248a9ca31461048c57600080fd5b8063095ea7b311610333578063095ea7b3146103e95780630c97fc361461040b57806310de26761461042b57600080fd5b806301ffc9a71461035a57806306fdde031461038f578063081812fc146103b1575b600080fd5b34801561036657600080fd5b5061037a6103753660046149a0565b610a96565b60405190151581526020015b60405180910390f35b34801561039b57600080fd5b506103a4610aa7565b6040516103869190614a0d565b3480156103bd57600080fd5b506103d16103cc366004614a20565b610b39565b6040516001600160a01b039091168152602001610386565b3480156103f557600080fd5b50610409610404366004614a55565b610b60565b005b34801561041757600080fd5b50610409610426366004614a20565b610ca8565b34801561043757600080fd5b50610409610446366004614a20565b610d45565b34801561045757600080fd5b50610197546103d1906001600160a01b031681565b34801561047857600080fd5b50610409610487366004614a7f565b610e5e565b34801561049857600080fd5b506104bc6104a7366004614a20565b600090815260c9602052604090206001015490565b604051908152602001610386565b3480156104d657600080fd5b50610192546103d1906001600160a01b031681565b6104096104f9366004614a20565b610ed4565b34801561050a57600080fd5b50610409610519366004614a20565b610fda565b34801561052a57600080fd5b50610409610539366004614abb565b61110a565b34801561054a57600080fd5b50610409610559366004614abb565b61112f565b34801561056a57600080fd5b50610409610579366004614ae7565b6111c7565b61040961058c366004614b32565b611364565b34801561059d57600080fd5b506104096114ba565b3480156105b257600080fd5b506104096105c1366004614a7f565b61152c565b3480156105d257600080fd5b506104096105e1366004614ae7565b611547565b6104096105f4366004614b87565b611607565b610409610607366004614c90565b6117fb565b34801561061857600080fd5b506104bc611985565b34801561062d57600080fd5b5061037a61063c366004614ae7565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0390811691161490565b61040961067c366004614a20565b611a4a565b34801561068d57600080fd5b5060fb5460ff1661037a565b6104096106a7366004614cde565b611c41565b3480156106b857600080fd5b506104096106c7366004614ae7565b611e36565b3480156106d857600080fd5b506103d16106e7366004614a20565b611ef6565b3480156106f857600080fd5b50610409610707366004614abb565b611f5c565b34801561071857600080fd5b50610409610727366004614a20565b61208f565b34801561073857600080fd5b506104bc6101935481565b34801561074f57600080fd5b50610409612133565b34801561076457600080fd5b506104bc610773366004614ae7565b6121cc565b34801561078457600080fd5b506104bc610793366004614a20565b6101946020526000908152604090205481565b3480156107b257600080fd5b50610409612266565b3480156107c757600080fd5b506104096107d6366004614a20565b6122d6565b3480156107e757600080fd5b506104096107f6366004614ae7565b612433565b34801561080757600080fd5b50610409610816366004614d63565b6124f3565b34801561082757600080fd5b5061037a610836366004614abb565b600091825260c9602090815260408084206001600160a01b0393909316845291905290205460ff1690565b34801561086d57600080fd5b506103a46127d8565b34801561088257600080fd5b50610409610891366004614abb565b6127e7565b3480156108a257600080fd5b506104bc6108b1366004614b87565b6128da565b3480156108c257600080fd5b506104bc600081565b3480156108d757600080fd5b506104096108e6366004614df3565b612955565b3480156108f757600080fd5b506104bc610906366004614a20565b6101996020526000908152604090205481565b34801561092557600080fd5b50610409610934366004614e2f565b612967565b34801561094557600080fd5b506104bc610954366004614a20565b6101956020526000908152604090205481565b34801561097357600080fd5b506103a4610982366004614a20565b6129d8565b34801561099357600080fd5b506103d16109a2366004614a20565b61019a602052600090815260409020546001600160a01b031681565b3480156109ca57600080fd5b506104096109d9366004614abb565b612b30565b3480156109ea57600080fd5b506104bc6101915481565b348015610a0157600080fd5b5061037a610a10366004614e97565b6001600160a01b039182166000908152606a6020908152604080832093909416825291909152205460ff1690565b348015610a4a57600080fd5b506103d1610a59366004614a20565b610198602052600090815260409020546001600160a01b031681565b348015610a8157600080fd5b50610196546103d1906001600160a01b031681565b6000610aa182612b55565b92915050565b606060658054610ab690614ec1565b80601f0160208091040260200160405190810160405280929190818152602001828054610ae290614ec1565b8015610b2f5780601f10610b0457610100808354040283529160200191610b2f565b820191906000526020600020905b815481529060010190602001808311610b1257829003601f168201915b5050505050905090565b6000610b4482612c38565b506000908152606960205260409020546001600160a01b031690565b6000610b6b82612c9c565b9050806001600160a01b0316836001600160a01b031603610bf95760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e6560448201527f720000000000000000000000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b806001600160a01b0316610c0b612d01565b6001600160a01b03161480610c275750610c2781610a10612d01565b610c995760405162461bcd60e51b815260206004820152603e60248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f60448201527f6b656e206f776e6572206e6f7220617070726f76656420666f7220616c6c00006064820152608401610bf0565b610ca38383612d10565b505050565b61019354600103610ce5576040517f40adbefd00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008181526101946020526040902054610258014211610d31576040517f4002db2900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600090815261019460205260409020429055565b6000610d4f612d01565b9050610d5a82612c9c565b6001600160a01b0316816001600160a01b031614158015610d965750600082815261019860205260409020546001600160a01b03828116911614155b15610dcd576040517f82b4290000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600082815261019960205260408120549003610e15576040517fc993b99300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600082815261019960205260408082208290555183916001600160a01b038416917f6181d4215ebc71e962cc193554c17f05a825da06230fdf9ece45081f09cb206f9190a35050565b600081815261019560205260409020548015801590610e8c5750600082815261019560205260409020544210155b15610ec3576040517f203d82d800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610ece848484612d8b565b50505050565b3360009081527f3092a9721ab951abc46661db103a5d03d04480b09446fa131eb59820635cf144602052604090205460ff16610f3c576040517feaa45d6a00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000818152610195602052604081205490819003610f86576040517f7cb40a3900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610fa5610f9283612c9c565b610197546001600160a01b031684612e15565b610fb262278d0082614f43565b4210610fd657610fc562278d0042614f56565b600083815261019560205260409020555b5050565b3360009081527f75522faebd8252265a4c98687d4b5f5b6c3a71858d7f8312047425dcd4725046602052604090205460ff16611042576040517f5647892800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8047101561107c576040517f356680b700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610196546040516000916001600160a01b03169083908381818185875af1925050503d80600081146110ca576040519150601f19603f3d011682016040523d82523d6000602084013e6110cf565b606091505b5050905080610fd6576040517f3204506f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600082815260c9602052604090206001015461112581613000565b610ca38383613011565b611137612d01565b6001600160a01b0316816001600160a01b0316146111bd5760405162461bcd60e51b815260206004820152602f60248201527f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560448201527f20726f6c657320666f722073656c6600000000000000000000000000000000006064820152608401610bf0565b610fd682826130b4565b6001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001630036112655760405162461bcd60e51b815260206004820152602c60248201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060448201527f64656c656761746563616c6c00000000000000000000000000000000000000006064820152608401610bf0565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166112c07f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc546001600160a01b031690565b6001600160a01b03161461133c5760405162461bcd60e51b815260206004820152602c60248201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060448201527f6163746976652070726f787900000000000000000000000000000000000000006064820152608401610bf0565b61134581613155565b60408051600080825260208201909252611361918391906131b7565b50565b610193546000036113a1576040517f516a601900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610192546001600160a01b031633146113e6576040517f82b4290000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6113ef85613357565b7fffffffffffffffffffffffffffffffff00000000000000000000000000000000851661141c85826134e3565b6000818152610195602090815260408083206301e1338042019055610198909152808220805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b038816179055517fffffffffffffffffffffffffffffffff00000000000000000000000000000000881691849186917fed994b8dfbd359de8b535931832fe533e23820fbb73ce69d8dde9bd677989f3991a4505050505050565b3360009081527fc99cfc74cbb51adc7ca8731c432a51a31a086a1789003f0b773be6e802362bf4602052604090205460ff16611522576040517f7c214f0400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61152a613646565b565b610ca383838360405180602001604052806000815250612967565b3360009081527f56eafcfe4e056e5ee1febf92b17728968883505f0e8dc799e4f43119d826ca85602052604090205460ff166115af576040517f7bfa4b9f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610197805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0383169081179091556040517f79025dab199855650264c602de305dcf5c292b8e5b4470ef271724a79d0343f490600090a250565b6000611615858585856128da565b6101915490915034811115611656576040517f356680b700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008281526101946020526040812054908190036116a0576040517fb7b3378700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b603c81014210156116dd576040517fb7b3378700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b7fffffffffffffffffffffffffffffffff00000000000000000000000000000000871661170a87826134e3565b60008481526101946020908152604080832083905583835261019582528083206301e13380420190556101989091529020805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b038716179055348381039084146117f057604051600090339083908381818185875af1925050503d80600081146117ae576040519150601f19603f3d011682016040523d82523d6000602084013e6117b3565b606091505b50509050806117ee576040517f3204506f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b505b505050505050505050565b6001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001630036118995760405162461bcd60e51b815260206004820152602c60248201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060448201527f64656c656761746563616c6c00000000000000000000000000000000000000006064820152608401610bf0565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166118f47f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc546001600160a01b031690565b6001600160a01b0316146119705760405162461bcd60e51b815260206004820152602c60248201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060448201527f6163746976652070726f787900000000000000000000000000000000000000006064820152608401610bf0565b61197982613155565b610fd6828260016131b7565b6000306001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614611a255760405162461bcd60e51b815260206004820152603860248201527f555550535570677261646561626c653a206d757374206e6f742062652063616c60448201527f6c6564207468726f7567682064656c656761746563616c6c00000000000000006064820152608401610bf0565b507f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc90565b611a5261369e565b6101915434811115611a90576040517f356680b700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000828152610195602052604081205490819003611ada576040517f7cb40a3900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b62278d0081014210611b18576040517f566e239b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b80421015611b52576040517f28d4030000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b611b606301e1338042614f56565b60008481526101956020526040908190208290555184917fbf5b84fa6df1868d005e90d05ee12a6c49025be6f38d2807f183743676744c1691611ba591815260200190565b60405180910390a234828103908314610ece57604051600090339083908381818185875af1925050503d8060008114611bfa576040519150601f19603f3d011682016040523d82523d6000602084013e611bff565b606091505b5050905080611c3a576040517f3204506f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5050505050565b6000828152610195602052604081205490819003611c8b576040517f7cb40a3900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b62278d00810142811115611ccb576040517f2720243f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600080651f9465b8ab8e83420302905061019154611d04611cf4670c7d713b49da0000846136f1565b683635c9adc5dea0000090613722565b0191505080341015611d42576040517f356680b700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b611d55611d4e86612c9c565b8787612e15565b6000858152610195602090815260408083206301e13380420190556101989091529020805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b03861617905534818103908214611e2d57604051600090339083908381818185875af1925050503d8060008114611deb576040519150601f19603f3d011682016040523d82523d6000602084013e611df0565b606091505b5050905080611e2b576040517f3204506f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b505b50505050505050565b3360009081527f56eafcfe4e056e5ee1febf92b17728968883505f0e8dc799e4f43119d826ca85602052604090205460ff16611e9e576040517f7bfa4b9f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610196805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0383169081179091556040517f646d70535c6b451b92021874a72abd441f122ba1c0b8f24d074352bd169fad3f90600090a250565b600081815261019560205260408120548015801590611f155750804210155b15611f4c576040517f203d82d800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b611f5583612c9c565b9392505050565b611f6461369e565b6001600160a01b038116611fa4576040517ff7eb744d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600082815261019860205260409020546001600160a01b0316611fc5612d01565b6001600160a01b031614612005576040517f82b4290000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008281526101996020908152604080832042905561019a9091529020805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b038316908117909155829061205682611ef6565b6001600160a01b03167ffab80e8bf242ed27bf595552dfdddbdd794f201d6dfcd8df7347f82f8e1f1f9b60405160405180910390a45050565b3360009081527f75522faebd8252265a4c98687d4b5f5b6c3a71858d7f8312047425dcd4725046602052604090205460ff166120f7576040517f5647892800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6101918190556040518181527ffba1d84f2e30311f1380f2355f294fbedd53264c2504378e2c4b2133dea166709060200160405180910390a150565b3360009081527f56eafcfe4e056e5ee1febf92b17728968883505f0e8dc799e4f43119d826ca85602052604090205460ff1661219b576040517f7bfa4b9f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60006101938190556040517f03732e5295a5bd18e6ef95b03b41aa8bcadae292a7ef40468144c7a727dfa8b59190a1565b60006001600160a01b03821661224a5760405162461bcd60e51b815260206004820152602960248201527f4552433732313a2061646472657373207a65726f206973206e6f74206120766160448201527f6c6964206f776e657200000000000000000000000000000000000000000000006064820152608401610bf0565b506001600160a01b031660009081526068602052604090205490565b3360009081527fc99cfc74cbb51adc7ca8731c432a51a31a086a1789003f0b773be6e802362bf4602052604090205460ff166122ce576040517f7c214f0400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61152a613737565b60008181526101956020526040902054421061231e576040517f203d82d800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600081815261019860205260409020546001600160a01b031661233f612d01565b6001600160a01b03161461237f576040517f82b4290000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008181526101996020526040812054908190036123c9576040517fc993b99300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6203f4808101421015612408576040517f22f607f600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610fd661241483611ef6565b600084815261019a60205260409020546001600160a01b031684612e15565b3360009081527f56eafcfe4e056e5ee1febf92b17728968883505f0e8dc799e4f43119d826ca85602052604090205460ff1661249b576040517f7bfa4b9f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610192805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0383169081179091556040517f255ba3357fefe42b361c216b6e0bc5541f1e6ea4c6178d4a45ad8dd7ec28139d90600090a250565b600054610100900460ff16158080156125135750600054600160ff909116105b8061252d5750303b15801561252d575060005460ff166001145b61259f5760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201527f647920696e697469616c697a65640000000000000000000000000000000000006064820152608401610bf0565b6000805460ff1916600117905580156125df57600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff166101001790555b61265287878080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525050604080516020601f8b01819004810282018101909252898152925089915088908190840183828082843760009201919091525061377592505050565b61265a6137fc565b612662613881565b61266a613881565b61267c6000612677612d01565b6138fe565b610196805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0385169081179091556040517f646d70535c6b451b92021874a72abd441f122ba1c0b8f24d074352bd169fad3f90600090a2610197805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0384169081179091556040517f79025dab199855650264c602de305dcf5c292b8e5b4470ef271724a79d0343f490600090a2662386f26fc100006101918190556040519081527ffba1d84f2e30311f1380f2355f294fbedd53264c2504378e2c4b2133dea166709060200160405180910390a16001610193558015611e2d57600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a150505050505050565b606060668054610ab690614ec1565b6127ef61369e565b6127f7612d01565b6001600160a01b031661280983611ef6565b6001600160a01b031614612849576040517f82b4290000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600082815261019860209081526040808320805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b038616179055610199909152902054156128a057600082815261019960205260408120555b6040516001600160a01b0382169083907f8e700b803af43e14651431cd73c9fe7d11b131ad797576a70b893ce5766f65c390600090a35050565b60006128e585613357565b604080517fffffffffffffffffffffffffffffffff00000000000000000000000000000000871660208201526001600160a01b038087169282019290925290831660608201526080810184905260a001604051602081830303815290604052805190602001209050949350505050565b610fd6612960612d01565b8383613908565b6000828152610195602052604090205480158015906129955750600083815261019560205260409020544210155b156129cc576040517f203d82d800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b611c3a858585856139d6565b60606000826129e681613357565b600f5b8181601081106129fb576129fb614f69565b1a15612a0957809250612a12565b600019016129e9565b506000612a20836001614f56565b67ffffffffffffffff811115612a3857612a38614bd4565b6040519080825280601f01601f191660200182016040528015612a62576020820181803683370190505b50905060005b838111612ace57828160108110612a8157612a81614f69565b1a60f81b828281518110612a9757612a97614f69565b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350600101612a68565b506040518060400160405280601b81526020017f687474703a2f2f7777772e6661726361737465722e78797a2f752f000000000081525081604051602001612b17929190614f98565b6040516020818303038152906040529350505050919050565b600082815260c96020526040902060010154612b4b81613000565b610ca383836130b4565b60007fffffffff0000000000000000000000000000000000000000000000000000000082167f80ac58cd000000000000000000000000000000000000000000000000000000001480612be857507fffffffff0000000000000000000000000000000000000000000000000000000082167f5b5e139f00000000000000000000000000000000000000000000000000000000145b80610aa157507f01ffc9a7000000000000000000000000000000000000000000000000000000007fffffffff00000000000000000000000000000000000000000000000000000000831614610aa1565b6000818152606760205260409020546001600160a01b03166113615760405162461bcd60e51b815260206004820152601860248201527f4552433732313a20696e76616c696420746f6b656e20494400000000000000006044820152606401610bf0565b6000818152606760205260408120546001600160a01b031680610aa15760405162461bcd60e51b815260206004820152601860248201527f4552433732313a20696e76616c696420746f6b656e20494400000000000000006044820152606401610bf0565b6000612d0b613a65565b905090565b6000818152606960205260409020805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0384169081179091558190612d5282612c9c565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b612d9c612d96612d01565b82613ac7565b612e0e5760405162461bcd60e51b815260206004820152602e60248201527f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6560448201527f72206e6f7220617070726f7665640000000000000000000000000000000000006064820152608401610bf0565b610ca38383835b826001600160a01b0316612e2882612c9c565b6001600160a01b031614612ea45760405162461bcd60e51b815260206004820152602560248201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060448201527f6f776e65720000000000000000000000000000000000000000000000000000006064820152608401610bf0565b6001600160a01b038216612f1f5760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f2061646460448201527f72657373000000000000000000000000000000000000000000000000000000006064820152608401610bf0565b612f2a838383613b46565b612f35600082612d10565b6001600160a01b0383166000908152606860205260408120805460019290612f5e908490614f43565b90915550506001600160a01b0382166000908152606860205260408120805460019290612f8c908490614f56565b9091555050600081815260676020526040808220805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0386811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4610ca3838383613b4e565b6113618161300c612d01565b613ba2565b600082815260c9602090815260408083206001600160a01b038516845290915290205460ff16610fd657600082815260c9602090815260408083206001600160a01b03851684529091529020805460ff19166001179055613070612d01565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b600082815260c9602090815260408083206001600160a01b038516845290915290205460ff1615610fd657600082815260c9602090815260408083206001600160a01b03851684529091529020805460ff19169055613111612d01565b6001600160a01b0316816001600160a01b0316837ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b60405160405180910390a45050565b6131817fa49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c21775610836612d01565b611361576040517f7bfa4b9f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b7f4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd91435460ff16156131ea57610ca383613c22565b826001600160a01b03166352d1902d6040518163ffffffff1660e01b8152600401602060405180830381865afa925050508015613244575060408051601f3d908101601f1916820190925261324191810190614fef565b60015b6132b65760405162461bcd60e51b815260206004820152602e60248201527f45524331393637557067726164653a206e657720696d706c656d656e7461746960448201527f6f6e206973206e6f7420555550530000000000000000000000000000000000006064820152608401610bf0565b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc811461334b5760405162461bcd60e51b815260206004820152602960248201527f45524331393637557067726164653a20756e737570706f727465642070726f7860448201527f6961626c655555494400000000000000000000000000000000000000000000006064820152608401610bf0565b50610ca3838383613ced565b6010600082811a602d03613397576040517f430f13b300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b82811015610ece5760008482601081106133b6576133b6614f69565b6001909301921a905082156134055760ff811615613400576040517f430f13b300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6134dd565b60618160ff161015801561341d5750607a8160ff1611155b15613428575061339a565b60308160ff1610158015613440575060398160ff1611155b1561344b575061339a565b8060ff16602d0361345c575061339a565b8060ff166000036134ab57816001036134a1576040517f430f13b300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600192505061339a565b6040517f430f13b300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5061339a565b6001600160a01b0382166135395760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f20616464726573736044820152606401610bf0565b6000818152606760205260409020546001600160a01b03161561359e5760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e746564000000006044820152606401610bf0565b6135aa60008383613b46565b6001600160a01b03821660009081526068602052604081208054600192906135d3908490614f56565b9091555050600081815260676020526040808220805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b03861690811790915590518392907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a4610fd660008383613b4e565b61364e613d12565b60fb805460ff191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa613681612d01565b6040516001600160a01b03909116815260200160405180910390a1565b60fb5460ff161561152a5760405162461bcd60e51b815260206004820152601060248201527f5061757361626c653a20706175736564000000000000000000000000000000006044820152606401610bf0565b6000611f55670de0b6b3a76400008361370986613d64565b6137139190615008565b61371d91906150c4565b613f8e565b6000611f558383670de0b6b3a76400006141b3565b61373f61369e565b60fb805460ff191660011790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258613681612d01565b600054610100900460ff166137f25760405162461bcd60e51b815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201527f6e697469616c697a696e670000000000000000000000000000000000000000006064820152608401610bf0565b610fd682826141d2565b600054610100900460ff166138795760405162461bcd60e51b815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201527f6e697469616c697a696e670000000000000000000000000000000000000000006064820152608401610bf0565b61152a614268565b600054610100900460ff1661152a5760405162461bcd60e51b815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201527f6e697469616c697a696e670000000000000000000000000000000000000000006064820152608401610bf0565b610fd68282613011565b816001600160a01b0316836001600160a01b0316036139695760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c6572000000000000006044820152606401610bf0565b6001600160a01b038381166000818152606a6020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b6139e76139e1612d01565b83613ac7565b613a595760405162461bcd60e51b815260206004820152602e60248201527f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6560448201527f72206e6f7220617070726f7665640000000000000000000000000000000000006064820152608401610bf0565b610ece848484846142f1565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03163303613ac257507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffec36013560601c90565b503390565b600080613ad383612c9c565b9050806001600160a01b0316846001600160a01b03161480613b1a57506001600160a01b038082166000908152606a602090815260408083209388168352929052205460ff165b80613b3e5750836001600160a01b0316613b3384610b39565b6001600160a01b0316145b949350505050565b610ca361369e565b6000818152610199602052604090205415613b7457600081815261019960205260408120555b600090815261019860205260409020805473ffffffffffffffffffffffffffffffffffffffff191690555050565b600082815260c9602090815260408083206001600160a01b038516845290915290205460ff16610fd657613be0816001600160a01b0316601461437a565b613beb83602061437a565b604051602001613bfc929190615135565b60408051601f198184030181529082905262461bcd60e51b8252610bf091600401614a0d565b6001600160a01b0381163b613c9f5760405162461bcd60e51b815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201527f6f74206120636f6e7472616374000000000000000000000000000000000000006064820152608401610bf0565b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0392909216919091179055565b613cf6836145a3565b600082511180613d035750805b15610ca357610ece83836145e3565b60fb5460ff1661152a5760405162461bcd60e51b815260206004820152601460248201527f5061757361626c653a206e6f74207061757365640000000000000000000000006044820152606401610bf0565b6000808213613db55760405162461bcd60e51b815260206004820152600960248201527f554e444546494e454400000000000000000000000000000000000000000000006044820152606401610bf0565b60006060613dc2846146ee565b03609f8181039490941b90931c6c465772b2bbbb5f824b15207a3081018102606090811d6d0388eaa27412d5aca026815d636e018202811d6d0df99ac502031bf953eff472fdcc018202811d6d13cdffb29d51d99322bdff5f2211018202811d6d0a0f742023def783a307a986912e018202811d6d01920d8043ca89b5239253284e42018202811d6c0b7a86d7375468fac667a0a527016c29508e458543d8aa4df2abee7883018302821d6d0139601a2efabe717e604cbb4894018302821d6d02247f7a7b6594320649aa03aba1018302821d7fffffffffffffffffffffffffffffffffffffff73c0c716a594e00d54e3c4cbc9018302821d7ffffffffffffffffffffffffffffffffffffffdc7b88c420e53a9890533129f6f01830290911d7fffffffffffffffffffffffffffffffffffffff465fda27eb4d63ded474e5f832019091027ffffffffffffffff5f6af8f7b3396644f18e157960000000000000000000000000105711340daa0d5f769dba1915cef59f0815a5506027d0267a36c0c95b3975ab3ee5b203a7614a3f75373f047d803ae7b6687f2b393909302929092017d57115e47018c7177eebf7cd370a3356a1b7863008a5ae8028c72b88642840160ae1d92915050565b60007ffffffffffffffffffffffffffffffffffffffffffffffffdb731c958f34d94c18213613fbf57506000919050565b680755bf798b4a1bf1e582126140175760405162461bcd60e51b815260206004820152600c60248201527f4558505f4f564552464c4f5700000000000000000000000000000000000000006044820152606401610bf0565b6503782dace9d9604e83901b059150600060606bb17217f7d1cf79abc9e3b39884821b056b80000000000000000000000001901d6bb17217f7d1cf79abc9e3b39881029093037fffffffffffffffffffffffffffffffffffffffdbf3ccf1604d263450f02a550481018102606090811d6d0277594991cfc85f6e2461837cd9018202811d7fffffffffffffffffffffffffffffffffffffe5adedaa1cb095af9e4da10e363c018202811d6db1bbb201f443cf962f1a1d3db4a5018202811d7ffffffffffffffffffffffffffffffffffffd38dc772608b0ae56cce01296c0eb018202811d6e05180bb14799ab47a8a8cb2a527d57016d02d16720577bd19bf614176fe9ea6c10fe68e7fd37d0007b713f765084018402831d9081019084017ffffffffffffffffffffffffffffffffffffffe2c69812cf03b0763fd454a8f7e010290911d6e0587f503bb6ea29d25fcb7401964500190910279d835ebba824c98fb31b83b2ca45c000000000000000000000000010574029d9dc38563c32e5c2f6dc192ee70ef65f9978af30260c3939093039290921c92915050565b8282028115158415858304851417166141cb57600080fd5b0492915050565b600054610100900460ff1661424f5760405162461bcd60e51b815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201527f6e697469616c697a696e670000000000000000000000000000000000000000006064820152608401610bf0565b606561425b8382615204565b506066610ca38282615204565b600054610100900460ff166142e55760405162461bcd60e51b815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201527f6e697469616c697a696e670000000000000000000000000000000000000000006064820152608401610bf0565b60fb805460ff19169055565b6142fc848484612e15565b614308848484846147aa565b610ece5760405162461bcd60e51b815260206004820152603260248201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560448201527f63656976657220696d706c656d656e74657200000000000000000000000000006064820152608401610bf0565b606060006143898360026152c4565b614394906002614f56565b67ffffffffffffffff8111156143ac576143ac614bd4565b6040519080825280601f01601f1916602001820160405280156143d6576020820181803683370190505b5090507f30000000000000000000000000000000000000000000000000000000000000008160008151811061440d5761440d614f69565b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053507f78000000000000000000000000000000000000000000000000000000000000008160018151811061447057614470614f69565b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a90535060006144ac8460026152c4565b6144b7906001614f56565b90505b6001811115614554577f303132333435363738396162636465660000000000000000000000000000000085600f16601081106144f8576144f8614f69565b1a60f81b82828151811061450e5761450e614f69565b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a90535060049490941c9361454d816152e3565b90506144ba565b508315611f555760405162461bcd60e51b815260206004820181905260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e746044820152606401610bf0565b6145ac81613c22565b6040516001600160a01b038216907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a250565b60606001600160a01b0383163b6146625760405162461bcd60e51b815260206004820152602660248201527f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f60448201527f6e747261637400000000000000000000000000000000000000000000000000006064820152608401610bf0565b600080846001600160a01b03168460405161467d91906152fa565b600060405180830381855af49150503d80600081146146b8576040519150601f19603f3d011682016040523d82523d6000602084013e6146bd565b606091505b50915091506146e5828260405180606001604052806027815260200161537060279139614939565b95945050505050565b600080821161473f5760405162461bcd60e51b815260206004820152600960248201527f554e444546494e454400000000000000000000000000000000000000000000006044820152606401610bf0565b5060016fffffffffffffffffffffffffffffffff821160071b82811c67ffffffffffffffff1060061b1782811c63ffffffff1060051b1782811c61ffff1060041b1782811c60ff10600390811b90911783811c600f1060021b1783811c909110821b1791821c111790565b60006001600160a01b0384163b1561492e57836001600160a01b031663150b7a026147d3612d01565b8786866040518563ffffffff1660e01b81526004016147f59493929190615316565b6020604051808303816000875af1925050508015614830575060408051601f3d908101601f1916820190925261482d91810190615352565b60015b6148e3573d80801561485e576040519150601f19603f3d011682016040523d82523d6000602084013e614863565b606091505b5080516000036148db5760405162461bcd60e51b815260206004820152603260248201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560448201527f63656976657220696d706c656d656e74657200000000000000000000000000006064820152608401610bf0565b805181602001fd5b7fffffffff00000000000000000000000000000000000000000000000000000000167f150b7a0200000000000000000000000000000000000000000000000000000000149050613b3e565b506001949350505050565b60608315614948575081611f55565b8251156149585782518084602001fd5b8160405162461bcd60e51b8152600401610bf09190614a0d565b7fffffffff000000000000000000000000000000000000000000000000000000008116811461136157600080fd5b6000602082840312156149b257600080fd5b8135611f5581614972565b60005b838110156149d85781810151838201526020016149c0565b50506000910152565b600081518084526149f98160208601602086016149bd565b601f01601f19169290920160200192915050565b602081526000611f5560208301846149e1565b600060208284031215614a3257600080fd5b5035919050565b80356001600160a01b0381168114614a5057600080fd5b919050565b60008060408385031215614a6857600080fd5b614a7183614a39565b946020939093013593505050565b600080600060608486031215614a9457600080fd5b614a9d84614a39565b9250614aab60208501614a39565b9150604084013590509250925092565b60008060408385031215614ace57600080fd5b82359150614ade60208401614a39565b90509250929050565b600060208284031215614af957600080fd5b611f5582614a39565b80357fffffffffffffffffffffffffffffffff0000000000000000000000000000000081168114614a5057600080fd5b600080600080600060a08688031215614b4a57600080fd5b614b5386614b02565b9450614b6160208701614a39565b9350614b6f60408701614a39565b94979396509394606081013594506080013592915050565b60008060008060808587031215614b9d57600080fd5b614ba685614b02565b9350614bb460208601614a39565b925060408501359150614bc960608601614a39565b905092959194509250565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600082601f830112614c1457600080fd5b813567ffffffffffffffff80821115614c2f57614c2f614bd4565b604051601f8301601f19908116603f01168101908282118183101715614c5757614c57614bd4565b81604052838152866020858801011115614c7057600080fd5b836020870160208301376000602085830101528094505050505092915050565b60008060408385031215614ca357600080fd5b614cac83614a39565b9150602083013567ffffffffffffffff811115614cc857600080fd5b614cd485828601614c03565b9150509250929050565b600080600060608486031215614cf357600080fd5b614cfc84614a39565b925060208401359150614d1160408501614a39565b90509250925092565b60008083601f840112614d2c57600080fd5b50813567ffffffffffffffff811115614d4457600080fd5b602083019150836020828501011115614d5c57600080fd5b9250929050565b60008060008060008060808789031215614d7c57600080fd5b863567ffffffffffffffff80821115614d9457600080fd5b614da08a838b01614d1a565b90985096506020890135915080821115614db957600080fd5b50614dc689828a01614d1a565b9095509350614dd9905060408801614a39565b9150614de760608801614a39565b90509295509295509295565b60008060408385031215614e0657600080fd5b614e0f83614a39565b915060208301358015158114614e2457600080fd5b809150509250929050565b60008060008060808587031215614e4557600080fd5b614e4e85614a39565b9350614e5c60208601614a39565b925060408501359150606085013567ffffffffffffffff811115614e7f57600080fd5b614e8b87828801614c03565b91505092959194509250565b60008060408385031215614eaa57600080fd5b614eb383614a39565b9150614ade60208401614a39565b600181811c90821680614ed557607f821691505b602082108103614f0e577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b81810381811115610aa157610aa1614f14565b80820180821115610aa157610aa1614f14565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60008351614faa8184602088016149bd565b835190830190614fbe8183602088016149bd565b7f2e6a736f6e0000000000000000000000000000000000000000000000000000009101908152600501949350505050565b60006020828403121561500157600080fd5b5051919050565b60007f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff60008413600084138583048511828216161561504957615049614f14565b7f8000000000000000000000000000000000000000000000000000000000000000600087128682058812818416161561508457615084614f14565b600087129250878205871284841616156150a0576150a0614f14565b878505871281841616156150b6576150b6614f14565b505050929093029392505050565b6000826150fa577f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b60001983147f80000000000000000000000000000000000000000000000000000000000000008314161561513057615130614f14565b500590565b7f416363657373436f6e74726f6c3a206163636f756e742000000000000000000081526000835161516d8160178501602088016149bd565b7f206973206d697373696e6720726f6c652000000000000000000000000000000060179184019182015283516151aa8160288401602088016149bd565b01602801949350505050565b601f821115610ca357600081815260208120601f850160051c810160208610156151dd5750805b601f850160051c820191505b818110156151fc578281556001016151e9565b505050505050565b815167ffffffffffffffff81111561521e5761521e614bd4565b6152328161522c8454614ec1565b846151b6565b602080601f831160018114615267576000841561524f5750858301515b600019600386901b1c1916600185901b1785556151fc565b600085815260208120601f198616915b8281101561529657888601518255948401946001909101908401615277565b50858210156152b45787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b60008160001904831182151516156152de576152de614f14565b500290565b6000816152f2576152f2614f14565b506000190190565b6000825161530c8184602087016149bd565b9190910192915050565b60006001600160a01b0380871683528086166020840152508360408301526080606083015261534860808301846149e1565b9695505050505050565b60006020828403121561536457600080fd5b8151611f558161497256fe416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a26469706673582212201bc50654aaa9327b0743f4153b73854ff6461884d1531dac408b1bf6f5f44c7164736f6c634300081000330000000000000000000000007a95fa73250dc53556d264522150a940d4c50238',
} as const;

export const StorageRegistry = {
  abi: [
    {
      inputs: [
        {
          internalType: 'contract AggregatorV3Interface',
          name: '_priceFeed',
          type: 'address',
        },
        {
          internalType: 'contract AggregatorV3Interface',
          name: '_uptimeFeed',
          type: 'address',
        },
        {
          internalType: 'uint256',
          name: '_initialDeprecationPeriod',
          type: 'uint256',
        },
        {
          internalType: 'uint256',
          name: '_initialUsdUnitPrice',
          type: 'uint256',
        },
        {
          internalType: 'uint256',
          name: '_initialMaxUnits',
          type: 'uint256',
        },
        {
          internalType: 'uint256',
          name: '_initialPriceFeedCacheDuration',
          type: 'uint256',
        },
        {
          internalType: 'uint256',
          name: '_initialUptimeFeedGracePeriod',
          type: 'uint256',
        },
      ],
      stateMutability: 'nonpayable',
      type: 'constructor',
    },
    {
      inputs: [],
      name: 'CallFailed',
      type: 'error',
    },
    {
      inputs: [],
      name: 'ContractDeprecated',
      type: 'error',
    },
    {
      inputs: [],
      name: 'ExceedsCapacity',
      type: 'error',
    },
    {
      inputs: [],
      name: 'GracePeriodNotOver',
      type: 'error',
    },
    {
      inputs: [],
      name: 'IncompleteRound',
      type: 'error',
    },
    {
      inputs: [],
      name: 'InsufficientFunds',
      type: 'error',
    },
    {
      inputs: [],
      name: 'InvalidAmount',
      type: 'error',
    },
    {
      inputs: [],
      name: 'InvalidBatchInput',
      type: 'error',
    },
    {
      inputs: [],
      name: 'InvalidDeprecationTimestamp',
      type: 'error',
    },
    {
      inputs: [],
      name: 'InvalidPayment',
      type: 'error',
    },
    {
      inputs: [],
      name: 'InvalidPrice',
      type: 'error',
    },
    {
      inputs: [],
      name: 'SequencerDown',
      type: 'error',
    },
    {
      inputs: [],
      name: 'StaleAnswer',
      type: 'error',
    },
    {
      anonymous: false,
      inputs: [
        {
          indexed: true,
          internalType: 'address',
          name: 'previousOwner',
          type: 'address',
        },
        {
          indexed: true,
          internalType: 'address',
          name: 'newOwner',
          type: 'address',
        },
      ],
      name: 'OwnershipTransferStarted',
      type: 'event',
    },
    {
      anonymous: false,
      inputs: [
        {
          indexed: true,
          internalType: 'address',
          name: 'previousOwner',
          type: 'address',
        },
        {
          indexed: true,
          internalType: 'address',
          name: 'newOwner',
          type: 'address',
        },
      ],
      name: 'OwnershipTransferred',
      type: 'event',
    },
    {
      anonymous: false,
      inputs: [
        {
          indexed: true,
          internalType: 'address',
          name: 'payer',
          type: 'address',
        },
        {
          indexed: true,
          internalType: 'uint256',
          name: 'fid',
          type: 'uint256',
        },
        {
          indexed: false,
          internalType: 'uint256',
          name: 'units',
          type: 'uint256',
        },
      ],
      name: 'Rent',
      type: 'event',
    },
    {
      anonymous: false,
      inputs: [
        {
          indexed: false,
          internalType: 'uint256',
          name: 'oldDuration',
          type: 'uint256',
        },
        {
          indexed: false,
          internalType: 'uint256',
          name: 'newDuration',
          type: 'uint256',
        },
      ],
      name: 'SetCacheDuration',
      type: 'event',
    },
    {
      anonymous: false,
      inputs: [
        {
          indexed: false,
          internalType: 'uint256',
          name: 'oldTimestamp',
          type: 'uint256',
        },
        {
          indexed: false,
          internalType: 'uint256',
          name: 'newTimestamp',
          type: 'uint256',
        },
      ],
      name: 'SetDeprecationTimestamp',
      type: 'event',
    },
    {
      anonymous: false,
      inputs: [
        {
          indexed: false,
          internalType: 'uint256',
          name: 'oldPeriod',
          type: 'uint256',
        },
        {
          indexed: false,
          internalType: 'uint256',
          name: 'newPeriod',
          type: 'uint256',
        },
      ],
      name: 'SetGracePeriod',
      type: 'event',
    },
    {
      anonymous: false,
      inputs: [
        {
          indexed: false,
          internalType: 'uint256',
          name: 'oldMax',
          type: 'uint256',
        },
        {
          indexed: false,
          internalType: 'uint256',
          name: 'newMax',
          type: 'uint256',
        },
      ],
      name: 'SetMaxUnits',
      type: 'event',
    },
    {
      anonymous: false,
      inputs: [
        {
          indexed: false,
          internalType: 'uint256',
          name: 'oldPrice',
          type: 'uint256',
        },
        {
          indexed: false,
          internalType: 'uint256',
          name: 'newPrice',
          type: 'uint256',
        },
      ],
      name: 'SetPrice',
      type: 'event',
    },
    {
      anonymous: false,
      inputs: [
        {
          indexed: true,
          internalType: 'address',
          name: 'to',
          type: 'address',
        },
        {
          indexed: false,
          internalType: 'uint256',
          name: 'amount',
          type: 'uint256',
        },
      ],
      name: 'Withdraw',
      type: 'event',
    },
    {
      inputs: [],
      name: 'VERSION',
      outputs: [
        {
          internalType: 'string',
          name: '',
          type: 'string',
        },
      ],
      stateMutability: 'view',
      type: 'function',
    },
    {
      inputs: [],
      name: 'acceptOwnership',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function',
    },
    {
      inputs: [
        {
          internalType: 'uint256[]',
          name: 'fids',
          type: 'uint256[]',
        },
        {
          internalType: 'uint256',
          name: 'units',
          type: 'uint256',
        },
      ],
      name: 'batchCredit',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function',
    },
    {
      inputs: [
        {
          internalType: 'uint256[]',
          name: 'fids',
          type: 'uint256[]',
        },
        {
          internalType: 'uint256[]',
          name: 'units',
          type: 'uint256[]',
        },
      ],
      name: 'batchRent',
      outputs: [],
      stateMutability: 'payable',
      type: 'function',
    },
    {
      inputs: [
        {
          internalType: 'uint256',
          name: 'fid',
          type: 'uint256',
        },
        {
          internalType: 'uint256',
          name: 'units',
          type: 'uint256',
        },
      ],
      name: 'credit',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function',
    },
    {
      inputs: [],
      name: 'deprecationTimestamp',
      outputs: [
        {
          internalType: 'uint256',
          name: '',
          type: 'uint256',
        },
      ],
      stateMutability: 'view',
      type: 'function',
    },
    {
      inputs: [],
      name: 'ethUsdPrice',
      outputs: [
        {
          internalType: 'uint256',
          name: '',
          type: 'uint256',
        },
      ],
      stateMutability: 'view',
      type: 'function',
    },
    {
      inputs: [],
      name: 'lastPriceFeedUpdate',
      outputs: [
        {
          internalType: 'uint256',
          name: '',
          type: 'uint256',
        },
      ],
      stateMutability: 'view',
      type: 'function',
    },
    {
      inputs: [],
      name: 'maxUnits',
      outputs: [
        {
          internalType: 'uint256',
          name: '',
          type: 'uint256',
        },
      ],
      stateMutability: 'view',
      type: 'function',
    },
    {
      inputs: [],
      name: 'owner',
      outputs: [
        {
          internalType: 'address',
          name: '',
          type: 'address',
        },
      ],
      stateMutability: 'view',
      type: 'function',
    },
    {
      inputs: [],
      name: 'pendingOwner',
      outputs: [
        {
          internalType: 'address',
          name: '',
          type: 'address',
        },
      ],
      stateMutability: 'view',
      type: 'function',
    },
    {
      inputs: [
        {
          internalType: 'uint256',
          name: 'units',
          type: 'uint256',
        },
      ],
      name: 'price',
      outputs: [
        {
          internalType: 'uint256',
          name: '',
          type: 'uint256',
        },
      ],
      stateMutability: 'view',
      type: 'function',
    },
    {
      inputs: [],
      name: 'priceFeed',
      outputs: [
        {
          internalType: 'contract AggregatorV3Interface',
          name: '',
          type: 'address',
        },
      ],
      stateMutability: 'view',
      type: 'function',
    },
    {
      inputs: [],
      name: 'priceFeedCacheDuration',
      outputs: [
        {
          internalType: 'uint256',
          name: '',
          type: 'uint256',
        },
      ],
      stateMutability: 'view',
      type: 'function',
    },
    {
      inputs: [],
      name: 'refreshPrice',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function',
    },
    {
      inputs: [],
      name: 'renounceOwnership',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function',
    },
    {
      inputs: [
        {
          internalType: 'uint256',
          name: 'fid',
          type: 'uint256',
        },
        {
          internalType: 'uint256',
          name: 'units',
          type: 'uint256',
        },
      ],
      name: 'rent',
      outputs: [],
      stateMutability: 'payable',
      type: 'function',
    },
    {
      inputs: [],
      name: 'rentedUnits',
      outputs: [
        {
          internalType: 'uint256',
          name: '',
          type: 'uint256',
        },
      ],
      stateMutability: 'view',
      type: 'function',
    },
    {
      inputs: [
        {
          internalType: 'uint256',
          name: 'duration',
          type: 'uint256',
        },
      ],
      name: 'setCacheDuration',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function',
    },
    {
      inputs: [
        {
          internalType: 'uint256',
          name: 'timestamp',
          type: 'uint256',
        },
      ],
      name: 'setDeprecationTimestamp',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function',
    },
    {
      inputs: [
        {
          internalType: 'uint256',
          name: 'period',
          type: 'uint256',
        },
      ],
      name: 'setGracePeriod',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function',
    },
    {
      inputs: [
        {
          internalType: 'uint256',
          name: 'max',
          type: 'uint256',
        },
      ],
      name: 'setMaxUnits',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function',
    },
    {
      inputs: [
        {
          internalType: 'uint256',
          name: 'usdPrice',
          type: 'uint256',
        },
      ],
      name: 'setPrice',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function',
    },
    {
      inputs: [
        {
          internalType: 'address',
          name: 'newOwner',
          type: 'address',
        },
      ],
      name: 'transferOwnership',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function',
    },
    {
      inputs: [],
      name: 'unitPrice',
      outputs: [
        {
          internalType: 'uint256',
          name: '',
          type: 'uint256',
        },
      ],
      stateMutability: 'view',
      type: 'function',
    },
    {
      inputs: [],
      name: 'uptimeFeed',
      outputs: [
        {
          internalType: 'contract AggregatorV3Interface',
          name: '',
          type: 'address',
        },
      ],
      stateMutability: 'view',
      type: 'function',
    },
    {
      inputs: [],
      name: 'uptimeFeedGracePeriod',
      outputs: [
        {
          internalType: 'uint256',
          name: '',
          type: 'uint256',
        },
      ],
      stateMutability: 'view',
      type: 'function',
    },
    {
      inputs: [],
      name: 'usdUnitPrice',
      outputs: [
        {
          internalType: 'uint256',
          name: '',
          type: 'uint256',
        },
      ],
      stateMutability: 'view',
      type: 'function',
    },
    {
      inputs: [
        {
          internalType: 'address',
          name: 'to',
          type: 'address',
        },
        {
          internalType: 'uint256',
          name: 'amount',
          type: 'uint256',
        },
      ],
      name: 'withdraw',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function',
    },
  ],
  bytecode: {
    object:
      '0x60c06040523480156200001157600080fd5b5060405162001e4e38038062001e4e833981016040819052620000349162000356565b6200003f336200008e565b6001600160a01b03808816608052861660a0526200005e8542620003d3565b60025560038490556004839055600582905560068190556200007f620000b8565b50505050505050505062000472565b600180546001600160a01b0319169055620000b581620002e9602090811b6200111217901c565b50565b600080600080600080600060a0516001600160a01b031663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa15801562000104573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200012a919062000407565b9450945094509450945083600014620001555760405162032b3d60e81b815260040160405180910390fd5b816000036200017757604051638ad52bdd60e01b815260040160405180910390fd5b846001600160501b0316816001600160501b03161015620001ab57604051630e09c18960e31b815260040160405180910390fd5b6000620001b984426200045c565b9050600654811015620001df5760405163d15f73b560e01b815260040160405180910390fd5b6000806000806080516001600160a01b031663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa15801562000226573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200024c919062000407565b94509450509350935060008313620002765760405162bfc92160e01b815260040160405180910390fd5b816000036200029857604051638ad52bdd60e01b815260040160405180910390fd5b836001600160501b0316816001600160501b03161015620002cc57604051630e09c18960e31b815260040160405180910390fd5b50506008805442600955908290559a909950975050505050505050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80516001600160a01b03811681146200035157600080fd5b919050565b600080600080600080600060e0888a0312156200037257600080fd5b6200037d8862000339565b96506200038d6020890162000339565b604089015160608a015160808b015160a08c015160c0909c01519a9d939c50919a90999198509650945092505050565b634e487b7160e01b600052601160045260246000fd5b80820180821115620003e957620003e9620003bd565b92915050565b80516001600160501b03811681146200035157600080fd5b600080600080600060a086880312156200042057600080fd5b6200042b86620003ef565b94506020860151935060408601519250606086015191506200045060808701620003ef565b90509295509295909350565b81810381811115620003e957620003e9620003bd565b60805160a0516119a8620004a660003960008181610286015261123301526000818161033501526113e201526119a86000f3fe6080604052600436106101c25760003560e01c80638d567f86116100f7578063c2e46fe011610095578063f2f6596011610064578063f2f65960146104c9578063f2fde38b146104e9578063f3fef3a314610509578063ffa1ad741461052957600080fd5b8063c2e46fe014610453578063d285e8fd14610469578063e30c397814610489578063e73faa2d146104b457600080fd5b80639478ab8c116100d15780639478ab8c146103ea578063a82c356e14610400578063ab7ccc1c14610413578063b3a90c671461043357600080fd5b80638d567f861461037f5780638da5cb5b1461039f57806391b7f5ed146103ca57600080fd5b80633c67a5b211610164578063715018a61161013e578063715018a61461030e578063741bef1a14610323578063783a112b1461035757806379ba50971461036a57600080fd5b80633c67a5b2146102cd57806340df0ba0146102e25780637078cc1c146102f857600080fd5b806326a49e37116101a057806326a49e37146102285780632751c4fd146102485780632c39d6701461025e5780633b56125c1461027457600080fd5b806306517a29146101c7578063128d34ac146101f0578063194e995114610206575b600080fd5b3480156101d357600080fd5b506101dd60045481565b6040519081526020015b60405180910390f35b3480156101fc57600080fd5b506101dd60095481565b34801561021257600080fd5b5061022661022136600461161c565b61057f565b005b34801561023457600080fd5b506101dd61024336600461161c565b6105c8565b34801561025457600080fd5b506101dd60075481565b34801561026a57600080fd5b506101dd60025481565b34801561028057600080fd5b506102a87f000000000000000000000000000000000000000000000000000000000000000081565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020016101e7565b3480156102d957600080fd5b506102266105df565b3480156102ee57600080fd5b506101dd60035481565b34801561030457600080fd5b506101dd60065481565b34801561031a57600080fd5b506102266105f3565b34801561032f57600080fd5b506102a87f000000000000000000000000000000000000000000000000000000000000000081565b610226610365366004611635565b610607565b34801561037657600080fd5b506102266107f2565b34801561038b57600080fd5b5061022661039a36600461161c565b6108ac565b3480156103ab57600080fd5b5060005473ffffffffffffffffffffffffffffffffffffffff166102a8565b3480156103d657600080fd5b506102266103e536600461161c565b61092f565b3480156103f657600080fd5b506101dd60085481565b61022661040e3660046116a3565b610978565b34801561041f57600080fd5b5061022661042e366004611635565b610c3e565b34801561043f57600080fd5b5061022661044e36600461170f565b610d56565b34801561045f57600080fd5b506101dd60055481565b34801561047557600080fd5b5061022661048436600461161c565b610e93565b34801561049557600080fd5b5060015473ffffffffffffffffffffffffffffffffffffffff166102a8565b3480156104c057600080fd5b506101dd610edc565b3480156104d557600080fd5b506102266104e436600461161c565b610eed565b3480156104f557600080fd5b50610226610504366004611784565b610f36565b34801561051557600080fd5b5061022661052436600461179f565b610fe6565b34801561053557600080fd5b506105726040518060400160405280600a81526020017f323032332e30362e30310000000000000000000000000000000000000000000081525081565b6040516101e791906117c9565b610587611187565b60055460408051918252602082018390527fba21d40bb8770d5fa02e1971806473e12480167182e829c0fc86addb21e2b77d910160405180910390a1600555565b60006105d982600354600854611208565b92915050565b6105e7611187565b6105ef611226565b5050565b6105fb611187565b610605600061155a565b565b6002544210610642576040517fd17e0deb00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600061064d8261158b565b905081600003610689576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b803410156106c3576040517f3c6b4b2800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600454826007546106d49190611864565b111561070c576040517f2aa2ed7200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b816007600082825461071e9190611864565b9091555050604051828152839033907faabd75b90fb7114eb9587a54f00ce5ebe8cb4a70627f3a6c26e506ffd771fe2f9060200160405180910390a3803411156107ed5760003361076f8334611877565b604051600081818185875af1925050503d80600081146107ab576040519150601f19603f3d011682016040523d82523d6000602084013e6107b0565b606091505b50509050806107eb576040517f3204506f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b505b505050565b600154339073ffffffffffffffffffffffffffffffffffffffff1681146108a0576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602960248201527f4f776e61626c6532537465703a2063616c6c6572206973206e6f74207468652060448201527f6e6577206f776e6572000000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b6108a98161155a565b50565b6108b4611187565b428110156108ee576040517f4d9c314900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60025460408051918252602082018390527f27e030644fe653b53e98fbd0ca5004392da63705b0806619a43324647715bc6b910160405180910390a1600255565b610937611187565b60035460408051918252602082018390527ff9317dc3bc6dda0e00e43855c2c30847aeafb8dcea9d2ce86e9ce7a83d549f01910160405180910390a1600355565b60025442106109b3576040517fd17e0deb00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8215806109be575080155b156109f5576040517f0a514b9900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b828114610a2e576040517f0a514b9900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6003546000610a3b6115a1565b90506000805b86811015610b67576000868683818110610a5d57610a5d61188a565b90506020020135905080600003610a745750610b57565b60045481600754610a859190611864565b1115610abd576040517f2aa2ed7200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610ac8818686611208565b610ad29084611864565b92508060076000828254610ae69190611864565b909155508990508883818110610afe57610afe61188a565b905060200201353373ffffffffffffffffffffffffffffffffffffffff167faabd75b90fb7114eb9587a54f00ce5ebe8cb4a70627f3a6c26e506ffd771fe2f83604051610b4d91815260200190565b60405180910390a3505b610b60816118b9565b9050610a41565b5080341015610ba2576040517f3c6b4b2800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b80341115610c3557600033610bb78334611877565b604051600081818185875af1925050503d8060008114610bf3576040519150601f19603f3d011682016040523d82523d6000602084013e610bf8565b606091505b5050905080610c33576040517f3204506f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b505b50505050505050565b610c46611187565b6002544210610c81576040517fd17e0deb00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b80600003610cbb576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60045481600754610ccc9190611864565b1115610d04576040517f2aa2ed7200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8060076000828254610d169190611864565b9091555050604051818152829033907faabd75b90fb7114eb9587a54f00ce5ebe8cb4a70627f3a6c26e506ffd771fe2f9060200160405180910390a35050565b610d5e611187565b6002544210610d99576040517fd17e0deb00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000610da582846118f1565b905060045481600754610db89190611864565b1115610df0576040517f2aa2ed7200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8060076000828254610e029190611864565b90915550600090505b83811015610e8c57848482818110610e2557610e2561188a565b905060200201353373ffffffffffffffffffffffffffffffffffffffff167faabd75b90fb7114eb9587a54f00ce5ebe8cb4a70627f3a6c26e506ffd771fe2f85604051610e7491815260200190565b60405180910390a3610e85816118b9565b9050610e0b565b5050505050565b610e9b611187565b60045460408051918252602082018390527fa75b962aa425276de62bec76aeb43cacc12d2b132498ae1115500c23dc35fbe4910160405180910390a1600455565b6000610ee860016105c8565b905090565b610ef5611187565b60065460408051918252602082018390527f31c130faaf861e1e61ca087cc48c410d9099885350e9beb4dad1175cb77a6545910160405180910390a1600655565b610f3e611187565b6001805473ffffffffffffffffffffffffffffffffffffffff83167fffffffffffffffffffffffff00000000000000000000000000000000000000009091168117909155610fa160005473ffffffffffffffffffffffffffffffffffffffff1690565b73ffffffffffffffffffffffffffffffffffffffff167f38d16b8cac22d99fc7c124b9cd0de2d3fa1faef420bfe791d8c362d765e2270060405160405180910390a350565b610fee611187565b80471015611028576040517f356680b700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8173ffffffffffffffffffffffffffffffffffffffff167f884edad9ce6fa2440d8a54cc123490eb96d2768479d49ff9c7366125a94243648260405161107091815260200190565b60405180910390a260008273ffffffffffffffffffffffffffffffffffffffff168260405160006040518083038185875af1925050503d80600081146110d2576040519150601f19603f3d011682016040523d82523d6000602084013e6110d7565b606091505b50509050806107ed576040517f3204506f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000805473ffffffffffffffffffffffffffffffffffffffff8381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60005473ffffffffffffffffffffffffffffffffffffffff163314610605576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610897565b600061121e8261121885876118f1565b906115d2565b949350505050565b60008060008060008060007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa15801561129c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112c09190611922565b9450945094509450945083600014611304576040517f032b3d0000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8160000361133e576040517f8ad52bdd00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8469ffffffffffffffffffff168169ffffffffffffffffffff161015611390576040517f704e0c4800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600061139c8442611877565b90506006548110156113da576040517fd15f73b500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000806000807f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa15801561144b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061146f9190611922565b945094505093509350600083136114b1576040517ebfc92100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b816000036114eb576040517f8ad52bdd00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8369ffffffffffffffffffff168169ffffffffffffffffffff16101561153d576040517f704e0c4800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b50506008805442600955908290559a909950975050505050505050565b600180547fffffffffffffffffffffffff00000000000000000000000000000000000000001690556108a981611112565b60006105d98260035461159c6115a1565b611208565b6000600554600954426115b49190611877565b11156115cb5760006115c4611226565b5092915050565b5060085490565b60006115e783670de0b6b3a7640000846115ee565b9392505050565b82820281151584158583048514171661160657600080fd5b6001826001830304018115150290509392505050565b60006020828403121561162e57600080fd5b5035919050565b6000806040838503121561164857600080fd5b50508035926020909101359150565b60008083601f84011261166957600080fd5b50813567ffffffffffffffff81111561168157600080fd5b6020830191508360208260051b850101111561169c57600080fd5b9250929050565b600080600080604085870312156116b957600080fd5b843567ffffffffffffffff808211156116d157600080fd5b6116dd88838901611657565b909650945060208701359150808211156116f657600080fd5b5061170387828801611657565b95989497509550505050565b60008060006040848603121561172457600080fd5b833567ffffffffffffffff81111561173b57600080fd5b61174786828701611657565b909790965060209590950135949350505050565b803573ffffffffffffffffffffffffffffffffffffffff8116811461177f57600080fd5b919050565b60006020828403121561179657600080fd5b6115e78261175b565b600080604083850312156117b257600080fd5b6117bb8361175b565b946020939093013593505050565b600060208083528351808285015260005b818110156117f6578581018301518582016040015282016117da565b5060006040828601015260407fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f8301168501019250505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b808201808211156105d9576105d9611835565b818103818111156105d9576105d9611835565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036118ea576118ea611835565b5060010190565b80820281158282048414176105d9576105d9611835565b805169ffffffffffffffffffff8116811461177f57600080fd5b600080600080600060a0868803121561193a57600080fd5b61194386611908565b945060208601519350604086015192506060860151915061196660808701611908565b9050929550929590935056fea2646970667358221220c5c3ef4f5b0459c2820781d2a3a62742210efe64a44beb846c89a1abea5315f764736f6c63430008120033',
    sourceMap:
      '308:17353:59:-:0;;;7416:713;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;936:32:39;719:10:49;936:18:39;:32::i;:::-;-1:-1:-1;;;;;7754:22:59;;::::1;;::::0;7786:24;::::1;;::::0;7843:43:::1;7861:25:::0;7843:15:::1;:43;:::i;:::-;7820:20;:66:::0;7896:12:::1;:35:::0;;;7941:8:::1;:27:::0;;;7978:22:::1;:55:::0;;;8043:21:::1;:53:::0;;;8107:15:::1;:13;:15::i;:::-;;;7416:713:::0;;;;;;;308:17353;;1501:153:40;1590:13;1583:20;;-1:-1:-1;;;;;;1583:20:40;;;1613:34;1638:8;1613:24;;;;;;;:34;;:::i;:::-;1501:153;:::o;12201:1333:59:-;12244:19;12265:16;12363:20;12397:18;12429:23;12466;12503:28;12544:10;;-1:-1:-1;;;;;12544:26:59;;:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;12349:223;;;;;;;;;;12586:11;12601:1;12586:16;12582:44;;12611:15;;-1:-1:-1;;;12611:15:59;;;;;;;;;;;12582:44;12640:15;12659:1;12640:20;12636:50;;12669:17;;-1:-1:-1;;;12669:17:59;;;;;;;;;;;12636:50;12724:13;-1:-1:-1;;;;;12700:37:59;:21;-1:-1:-1;;;;;12700:37:59;;12696:63;;;12746:13;;-1:-1:-1;;;12746:13:59;;;;;;;;;;;12696:63;12861:19;12883:33;12901:15;12883;:33;:::i;:::-;12861:55;;12944:21;;12930:11;:35;12926:68;;;12974:20;;-1:-1:-1;;;12974:20:59;;;;;;;;;;;12926:68;13066:19;13087:13;13103:22;13127:27;13170:9;;-1:-1:-1;;;;;13170:25:59;;:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;13065:132;;;;;;;;;13221:1;13211:6;:11;13207:38;;13231:14;;-1:-1:-1;;;13231:14:59;;;;;;;;;;;13207:38;13259:14;13277:1;13259:19;13255:49;;13287:17;;-1:-1:-1;;;13287:17:59;;;;;;;;;;;13255:49;13341:12;-1:-1:-1;;;;;13318:35:59;:20;-1:-1:-1;;;;;13318:35:59;;13314:61;;;13362:13;;-1:-1:-1;;;13362:13:59;;;;;;;;;;;13314:61;-1:-1:-1;;13400:11:59;;;13480:15;13458:19;:37;13505:22;;;;13400:11;13440:6;;-1:-1:-1;12201:1333:59;-1:-1:-1;;;;;;;;12201:1333:59:o;2433:187:39:-;2506:16;2525:6;;-1:-1:-1;;;;;2541:17:39;;;-1:-1:-1;;;;;;2541:17:39;;;;;;2573:40;;2525:6;;;;;;;2573:40;;2506:16;2573:40;2496:124;2433:187;:::o;14:200:79:-;116:13;;-1:-1:-1;;;;;158:31:79;;148:42;;138:70;;204:1;201;194:12;138:70;14:200;;;:::o;219:704::-;399:6;407;415;423;431;439;447;500:3;488:9;479:7;475:23;471:33;468:53;;;517:1;514;507:12;468:53;540:63;593:9;540:63;:::i;:::-;530:73;;622:72;690:2;679:9;675:18;622:72;:::i;:::-;734:2;719:18;;713:25;778:2;763:18;;757:25;822:3;807:19;;801:26;867:3;852:19;;846:26;912:3;897:19;;;891:26;219:704;;612:82;;-1:-1:-1;713:25:79;;757;;801:26;;-1:-1:-1;846:26:79;-1:-1:-1;891:26:79;-1:-1:-1;219:704:79;-1:-1:-1;;;219:704:79:o;928:127::-;989:10;984:3;980:20;977:1;970:31;1020:4;1017:1;1010:15;1044:4;1041:1;1034:15;1060:125;1125:9;;;1146:10;;;1143:36;;;1159:18;;:::i;:::-;1060:125;;;;:::o;1190:175::-;1268:13;;-1:-1:-1;;;;;1310:30:79;;1300:41;;1290:69;;1355:1;1352;1345:12;1370:473;1473:6;1481;1489;1497;1505;1558:3;1546:9;1537:7;1533:23;1529:33;1526:53;;;1575:1;1572;1565:12;1526:53;1598:39;1627:9;1598:39;:::i;:::-;1588:49;;1677:2;1666:9;1662:18;1656:25;1646:35;;1721:2;1710:9;1706:18;1700:25;1690:35;;1765:2;1754:9;1750:18;1744:25;1734:35;;1788:49;1832:3;1821:9;1817:19;1788:49;:::i;:::-;1778:59;;1370:473;;;;;;;;:::o;1848:128::-;1915:9;;;1936:11;;;1933:37;;;1950:18;;:::i;1848:128::-;308:17353:59;;;;;;;;;;;;;;;;;;;;;;;;;;;;',
    linkReferences: {},
  },
  deployedBytecode: {
    object:
      '0x6080604052600436106101c25760003560e01c80638d567f86116100f7578063c2e46fe011610095578063f2f6596011610064578063f2f65960146104c9578063f2fde38b146104e9578063f3fef3a314610509578063ffa1ad741461052957600080fd5b8063c2e46fe014610453578063d285e8fd14610469578063e30c397814610489578063e73faa2d146104b457600080fd5b80639478ab8c116100d15780639478ab8c146103ea578063a82c356e14610400578063ab7ccc1c14610413578063b3a90c671461043357600080fd5b80638d567f861461037f5780638da5cb5b1461039f57806391b7f5ed146103ca57600080fd5b80633c67a5b211610164578063715018a61161013e578063715018a61461030e578063741bef1a14610323578063783a112b1461035757806379ba50971461036a57600080fd5b80633c67a5b2146102cd57806340df0ba0146102e25780637078cc1c146102f857600080fd5b806326a49e37116101a057806326a49e37146102285780632751c4fd146102485780632c39d6701461025e5780633b56125c1461027457600080fd5b806306517a29146101c7578063128d34ac146101f0578063194e995114610206575b600080fd5b3480156101d357600080fd5b506101dd60045481565b6040519081526020015b60405180910390f35b3480156101fc57600080fd5b506101dd60095481565b34801561021257600080fd5b5061022661022136600461161c565b61057f565b005b34801561023457600080fd5b506101dd61024336600461161c565b6105c8565b34801561025457600080fd5b506101dd60075481565b34801561026a57600080fd5b506101dd60025481565b34801561028057600080fd5b506102a87f000000000000000000000000000000000000000000000000000000000000000081565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020016101e7565b3480156102d957600080fd5b506102266105df565b3480156102ee57600080fd5b506101dd60035481565b34801561030457600080fd5b506101dd60065481565b34801561031a57600080fd5b506102266105f3565b34801561032f57600080fd5b506102a87f000000000000000000000000000000000000000000000000000000000000000081565b610226610365366004611635565b610607565b34801561037657600080fd5b506102266107f2565b34801561038b57600080fd5b5061022661039a36600461161c565b6108ac565b3480156103ab57600080fd5b5060005473ffffffffffffffffffffffffffffffffffffffff166102a8565b3480156103d657600080fd5b506102266103e536600461161c565b61092f565b3480156103f657600080fd5b506101dd60085481565b61022661040e3660046116a3565b610978565b34801561041f57600080fd5b5061022661042e366004611635565b610c3e565b34801561043f57600080fd5b5061022661044e36600461170f565b610d56565b34801561045f57600080fd5b506101dd60055481565b34801561047557600080fd5b5061022661048436600461161c565b610e93565b34801561049557600080fd5b5060015473ffffffffffffffffffffffffffffffffffffffff166102a8565b3480156104c057600080fd5b506101dd610edc565b3480156104d557600080fd5b506102266104e436600461161c565b610eed565b3480156104f557600080fd5b50610226610504366004611784565b610f36565b34801561051557600080fd5b5061022661052436600461179f565b610fe6565b34801561053557600080fd5b506105726040518060400160405280600a81526020017f323032332e30362e30310000000000000000000000000000000000000000000081525081565b6040516101e791906117c9565b610587611187565b60055460408051918252602082018390527fba21d40bb8770d5fa02e1971806473e12480167182e829c0fc86addb21e2b77d910160405180910390a1600555565b60006105d982600354600854611208565b92915050565b6105e7611187565b6105ef611226565b5050565b6105fb611187565b610605600061155a565b565b6002544210610642576040517fd17e0deb00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600061064d8261158b565b905081600003610689576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b803410156106c3576040517f3c6b4b2800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600454826007546106d49190611864565b111561070c576040517f2aa2ed7200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b816007600082825461071e9190611864565b9091555050604051828152839033907faabd75b90fb7114eb9587a54f00ce5ebe8cb4a70627f3a6c26e506ffd771fe2f9060200160405180910390a3803411156107ed5760003361076f8334611877565b604051600081818185875af1925050503d80600081146107ab576040519150601f19603f3d011682016040523d82523d6000602084013e6107b0565b606091505b50509050806107eb576040517f3204506f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b505b505050565b600154339073ffffffffffffffffffffffffffffffffffffffff1681146108a0576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602960248201527f4f776e61626c6532537465703a2063616c6c6572206973206e6f74207468652060448201527f6e6577206f776e6572000000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b6108a98161155a565b50565b6108b4611187565b428110156108ee576040517f4d9c314900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60025460408051918252602082018390527f27e030644fe653b53e98fbd0ca5004392da63705b0806619a43324647715bc6b910160405180910390a1600255565b610937611187565b60035460408051918252602082018390527ff9317dc3bc6dda0e00e43855c2c30847aeafb8dcea9d2ce86e9ce7a83d549f01910160405180910390a1600355565b60025442106109b3576040517fd17e0deb00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8215806109be575080155b156109f5576040517f0a514b9900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b828114610a2e576040517f0a514b9900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6003546000610a3b6115a1565b90506000805b86811015610b67576000868683818110610a5d57610a5d61188a565b90506020020135905080600003610a745750610b57565b60045481600754610a859190611864565b1115610abd576040517f2aa2ed7200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610ac8818686611208565b610ad29084611864565b92508060076000828254610ae69190611864565b909155508990508883818110610afe57610afe61188a565b905060200201353373ffffffffffffffffffffffffffffffffffffffff167faabd75b90fb7114eb9587a54f00ce5ebe8cb4a70627f3a6c26e506ffd771fe2f83604051610b4d91815260200190565b60405180910390a3505b610b60816118b9565b9050610a41565b5080341015610ba2576040517f3c6b4b2800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b80341115610c3557600033610bb78334611877565b604051600081818185875af1925050503d8060008114610bf3576040519150601f19603f3d011682016040523d82523d6000602084013e610bf8565b606091505b5050905080610c33576040517f3204506f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b505b50505050505050565b610c46611187565b6002544210610c81576040517fd17e0deb00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b80600003610cbb576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60045481600754610ccc9190611864565b1115610d04576040517f2aa2ed7200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8060076000828254610d169190611864565b9091555050604051818152829033907faabd75b90fb7114eb9587a54f00ce5ebe8cb4a70627f3a6c26e506ffd771fe2f9060200160405180910390a35050565b610d5e611187565b6002544210610d99576040517fd17e0deb00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000610da582846118f1565b905060045481600754610db89190611864565b1115610df0576040517f2aa2ed7200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8060076000828254610e029190611864565b90915550600090505b83811015610e8c57848482818110610e2557610e2561188a565b905060200201353373ffffffffffffffffffffffffffffffffffffffff167faabd75b90fb7114eb9587a54f00ce5ebe8cb4a70627f3a6c26e506ffd771fe2f85604051610e7491815260200190565b60405180910390a3610e85816118b9565b9050610e0b565b5050505050565b610e9b611187565b60045460408051918252602082018390527fa75b962aa425276de62bec76aeb43cacc12d2b132498ae1115500c23dc35fbe4910160405180910390a1600455565b6000610ee860016105c8565b905090565b610ef5611187565b60065460408051918252602082018390527f31c130faaf861e1e61ca087cc48c410d9099885350e9beb4dad1175cb77a6545910160405180910390a1600655565b610f3e611187565b6001805473ffffffffffffffffffffffffffffffffffffffff83167fffffffffffffffffffffffff00000000000000000000000000000000000000009091168117909155610fa160005473ffffffffffffffffffffffffffffffffffffffff1690565b73ffffffffffffffffffffffffffffffffffffffff167f38d16b8cac22d99fc7c124b9cd0de2d3fa1faef420bfe791d8c362d765e2270060405160405180910390a350565b610fee611187565b80471015611028576040517f356680b700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8173ffffffffffffffffffffffffffffffffffffffff167f884edad9ce6fa2440d8a54cc123490eb96d2768479d49ff9c7366125a94243648260405161107091815260200190565b60405180910390a260008273ffffffffffffffffffffffffffffffffffffffff168260405160006040518083038185875af1925050503d80600081146110d2576040519150601f19603f3d011682016040523d82523d6000602084013e6110d7565b606091505b50509050806107ed576040517f3204506f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000805473ffffffffffffffffffffffffffffffffffffffff8381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60005473ffffffffffffffffffffffffffffffffffffffff163314610605576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610897565b600061121e8261121885876118f1565b906115d2565b949350505050565b60008060008060008060007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa15801561129c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112c09190611922565b9450945094509450945083600014611304576040517f032b3d0000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8160000361133e576040517f8ad52bdd00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8469ffffffffffffffffffff168169ffffffffffffffffffff161015611390576040517f704e0c4800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600061139c8442611877565b90506006548110156113da576040517fd15f73b500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000806000807f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa15801561144b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061146f9190611922565b945094505093509350600083136114b1576040517ebfc92100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b816000036114eb576040517f8ad52bdd00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8369ffffffffffffffffffff168169ffffffffffffffffffff16101561153d576040517f704e0c4800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b50506008805442600955908290559a909950975050505050505050565b600180547fffffffffffffffffffffffff00000000000000000000000000000000000000001690556108a981611112565b60006105d98260035461159c6115a1565b611208565b6000600554600954426115b49190611877565b11156115cb5760006115c4611226565b5092915050565b5060085490565b60006115e783670de0b6b3a7640000846115ee565b9392505050565b82820281151584158583048514171661160657600080fd5b6001826001830304018115150290509392505050565b60006020828403121561162e57600080fd5b5035919050565b6000806040838503121561164857600080fd5b50508035926020909101359150565b60008083601f84011261166957600080fd5b50813567ffffffffffffffff81111561168157600080fd5b6020830191508360208260051b850101111561169c57600080fd5b9250929050565b600080600080604085870312156116b957600080fd5b843567ffffffffffffffff808211156116d157600080fd5b6116dd88838901611657565b909650945060208701359150808211156116f657600080fd5b5061170387828801611657565b95989497509550505050565b60008060006040848603121561172457600080fd5b833567ffffffffffffffff81111561173b57600080fd5b61174786828701611657565b909790965060209590950135949350505050565b803573ffffffffffffffffffffffffffffffffffffffff8116811461177f57600080fd5b919050565b60006020828403121561179657600080fd5b6115e78261175b565b600080604083850312156117b257600080fd5b6117bb8361175b565b946020939093013593505050565b600060208083528351808285015260005b818110156117f6578581018301518582016040015282016117da565b5060006040828601015260407fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f8301168501019250505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b808201808211156105d9576105d9611835565b818103818111156105d9576105d9611835565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036118ea576118ea611835565b5060010190565b80820281158282048414176105d9576105d9611835565b805169ffffffffffffffffffff8116811461177f57600080fd5b600080600080600060a0868803121561193a57600080fd5b61194386611908565b945060208601519350604086015192506060860151915061196660808701611908565b9050929550929590935056fea2646970667358221220c5c3ef4f5b0459c2820781d2a3a62742210efe64a44beb846c89a1abea5315f764736f6c63430008120033',
    sourceMap:
      '308:17353:59:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5635:23;;;;;;;;;;;;;;;;;;;160:25:79;;;148:2;133:18;5635:23:59;;;;;;;;6488:34;;;;;;;;;;;;;;;;16676:178;;;;;;;;;;-1:-1:-1;16676:178:59;;;;;:::i;:::-;;:::i;:::-;;11319:124;;;;;;;;;;-1:-1:-1;11319:124:59;;;;;:::i;:::-;;:::i;6289:26::-;;;;;;;;;;;;;;;;5343:35;;;;;;;;;;;;;;;;4974:49;;;;;;;;;;;;;;;;;;585:42:79;573:55;;;555:74;;543:2;528:18;4974:49:59;381:254:79;15484:75:59;;;;;;;;;;;;;:::i;5519:27::-;;;;;;;;;;;;;;;;5986:36;;;;;;;;;;;;;;;;1831:101:39;;;;;;;;;;;;;:::i;4855:48:59:-;;;;;;;;;;;;;;;8874:568;;;;;;:::i;:::-;;:::i;1734:206:40:-;;;;;;;;;;;;;:::i;16272:270:59:-;;;;;;;;;;-1:-1:-1;16272:270:59;;;;;:::i;:::-;;:::i;1201:85:39:-;;;;;;;;;;-1:-1:-1;1247:7:39;1273:6;;;1201:85;;15727:142:59;;;;;;;;;;-1:-1:-1;15727:142:59;;;;;:::i;:::-;;:::i;6382:26::-;;;;;;;;;;;;;;;;9785:963;;;;;;:::i;:::-;;:::i;14538:280::-;;;;;;;;;;-1:-1:-1;14538:280:59;;;;;:::i;:::-;;:::i;15023:374::-;;;;;;;;;;-1:-1:-1;15023:374:59;;;;;:::i;:::-;;:::i;5760:37::-;;;;;;;;;;;;;;;;16016:125;;;;;;;;;;-1:-1:-1;16016:125:59;;;;;:::i;:::-;;:::i;847:99:40:-;;;;;;;;;;-1:-1:-1;926:13:40;;;;847:99;;11040:85:59;;;;;;;;;;;;;:::i;16984:166::-;;;;;;;;;;-1:-1:-1;16984:166:59;;;;;:::i;:::-;;:::i;1139:178:40:-;;;;;;;;;;-1:-1:-1;1139:178:40;;;;;:::i;:::-;;:::i;17374:285:59:-;;;;;;;;;;-1:-1:-1;17374:285:59;;;;;:::i;:::-;;:::i;4563:45::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;16676:178::-;1094:13:39;:11;:13::i;:::-;16771:22:59::1;::::0;16754:50:::1;::::0;;4221:25:79;;;4277:2;4262:18;;4255:34;;;16754:50:59::1;::::0;4194:18:79;16754:50:59::1;;;;;;;16814:22;:33:::0;16676:178::o;11319:124::-;11370:7;11396:40;11403:5;11410:12;;11424:11;;11396:6;:40::i;:::-;11389:47;11319:124;-1:-1:-1;;11319:124:59:o;15484:75::-;1094:13:39;:11;:13::i;:::-;15537:15:59::1;:13;:15::i;:::-;;;15484:75::o:0;1831:101:39:-;1094:13;:11;:13::i;:::-;1895:30:::1;1922:1;1895:18;:30::i;:::-;1831:101::o:0;8874:568:59:-;8377:20;;8358:15;:39;8354:72;;8406:20;;;;;;;;;;;;;;8354:72;8961:18:::1;8982:13;8989:5;8982:6;:13::i;:::-;8961:34;;9009:5;9018:1;9009:10:::0;9005:38:::1;;9028:15;;;;;;;;;;;;;;9005:38;9069:10;9057:9;:22;9053:51;;;9088:16;;;;;;;;;;;;;;9053:51;9140:8;;9132:5;9118:11;;:19;;;;:::i;:::-;:30;9114:60;;;9157:17;;;;;;;;;;;;;;9114:60;9200:5;9185:11;;:20;;;;;;;:::i;:::-;::::0;;;-1:-1:-1;;9220:28:59::1;::::0;160:25:79;;;9237:3:59;;9225:10:::1;::::0;9220:28:::1;::::0;148:2:79;133:18;9220:28:59::1;;;;;;;9275:10;9263:9;:22;9259:177;;;9302:12;9327:10;9351:22;9363:10:::0;9351:9:::1;:22;:::i;:::-;9319:59;::::0;::::1;::::0;;;;;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9301:77;;;9397:7;9392:33;;9413:12;;;;;;;;;;;;;;9392:33;9287:149;9259:177;8951:491;8874:568:::0;;:::o;1734:206:40:-;926:13;;719:10:49;;1827:24:40;926:13;1827:24;;1819:78;;;;;;;5164:2:79;1819:78:40;;;5146:21:79;5203:2;5183:18;;;5176:30;5242:34;5222:18;;;5215:62;5313:11;5293:18;;;5286:39;5342:19;;1819:78:40;;;;;;;;;1907:26;1926:6;1907:18;:26::i;:::-;1770:170;1734:206::o;16272:270:59:-;1094:13:39;:11;:13::i;:::-;16369:15:59::1;16357:9;:27;16353:69;;;16393:29;;;;;;;;;;;;;;16353:69;16461:20;::::0;16437:56:::1;::::0;;4221:25:79;;;4277:2;4262:18;;4255:34;;;16437:56:59::1;::::0;4194:18:79;16437:56:59::1;;;;;;;16503:20;:32:::0;16272:270::o;15727:142::-;1094:13:39;:11;:13::i;:::-;15806:12:59::1;::::0;15797:32:::1;::::0;;4221:25:79;;;4277:2;4262:18;;4255:34;;;15797:32:59::1;::::0;4194:18:79;15797:32:59::1;;;;;;;15839:12;:23:::0;15727:142::o;9785:963::-;8377:20;;8358:15;:39;8354:72;;8406:20;;;;;;;;;;;;;;8354:72;9904:16;;;:37:::1;;-1:-1:-1::0;9924:17:59;;9904:37:::1;9900:69;;;9950:19;;;;;;;;;;;;;;9900:69;9983:27:::0;;::::1;9979:59;;10019:19;;;;;;;;;;;;;;9979:59;10069:12;::::0;10049:17:::1;10111:14;:12;:14::i;:::-;10091:34;;10136:17;10168:9:::0;10163:334:::1;10179:15:::0;;::::1;10163:334;;;10215:11;10229:5;;10235:1;10229:8;;;;;;;:::i;:::-;;;;;;;10215:22;;10255:3;10262:1;10255:8:::0;10251:22:::1;;10265:8;;;10251:22;10311:8;;10305:3;10291:11;;:17;;;;:::i;:::-;:28;10287:58;;;10328:17;;;;;;;;;;;;;;10287:58;10372:33;10379:3;10384:9;10395;10372:6;:33::i;:::-;10359:46;::::0;;::::1;:::i;:::-;;;10434:3;10419:11;;:18;;;;;;;:::i;:::-;::::0;;;-1:-1:-1;10473:4:59;;-1:-1:-1;10473:4:59;10478:1;10473:7;;::::1;;;;;:::i;:::-;;;;;;;10461:10;10456:30;;;10482:3;10456:30;;;;160:25:79::0;;148:2;133:18;;14:177;10456:30:59::1;;;;;;;;10201:296;10163:334;10196:3;::::0;::::1;:::i;:::-;;;10163:334;;;;10523:9;10511;:21;10507:50;;;10541:16;;;;;;;;;;;;;;10507:50;10583:9;10571;:21;10567:175;;;10609:12;10634:10;10658:21;10670:9:::0;10658::::1;:21;:::i;:::-;10626:58;::::0;::::1;::::0;;;;;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10608:76;;;10703:7;10698:33;;10719:12;;;;;;;;;;;;;;10698:33;10594:148;10567:175;9890:858;;;9785:963:::0;;;;:::o;14538:280::-;1094:13:39;:11;:13::i;:::-;8377:20:59::1;;8358:15;:39;8354:72;;8406:20;;;;;;;;;;;;;;8354:72;14633:5:::2;14642:1;14633:10:::0;14629:38:::2;;14652:15;;;;;;;;;;;;;;14629:38;14703:8;;14695:5;14681:11;;:19;;;;:::i;:::-;:30;14677:60;;;14720:17;;;;;;;;;;;;;;14677:60;14763:5;14748:11;;:20;;;;;;;:::i;:::-;::::0;;;-1:-1:-1;;14783:28:59::2;::::0;160:25:79;;;14800:3:59;;14788:10:::2;::::0;14783:28:::2;::::0;148:2:79;133:18;14783:28:59::2;;;;;;;14538:280:::0;;:::o;15023:374::-;1094:13:39;:11;:13::i;:::-;8377:20:59::1;;8358:15;:39;8354:72;;8406:20;;;;;;;;;;;;;;8354:72;15131:18:::2;15152:19;15166:5:::0;15152:4;:19:::2;:::i;:::-;15131:40;;15212:8;;15199:10;15185:11;;:24;;;;:::i;:::-;:35;15181:65;;;15229:17;;;;;;;;;;;;;;15181:65;15271:10;15256:11;;:25;;;;;;;:::i;:::-;::::0;;;-1:-1:-1;15296:9:59::2;::::0;-1:-1:-1;15291:100:59::2;15307:15:::0;;::::2;15291:100;;;15365:4;;15370:1;15365:7;;;;;;;:::i;:::-;;;;;;;15353:10;15348:32;;;15374:5;15348:32;;;;160:25:79::0;;148:2;133:18;;14:177;15348:32:59::2;;;;;;;;15324:3;::::0;::::2;:::i;:::-;;;15291:100;;;;15121:276;15023:374:::0;;;:::o;16016:125::-;1094:13:39;:11;:13::i;:::-;16096:8:59::1;::::0;16084:26:::1;::::0;;4221:25:79;;;4277:2;4262:18;;4255:34;;;16084:26:59::1;::::0;4194:18:79;16084:26:59::1;;;;;;;16120:8;:14:::0;16016:125::o;11040:85::-;11084:7;11110:8;11116:1;11110:5;:8::i;:::-;11103:15;;11040:85;:::o;16984:166::-;1094:13:39;:11;:13::i;:::-;17073:21:59::1;::::0;17058:45:::1;::::0;;4221:25:79;;;4277:2;4262:18;;4255:34;;;17058:45:59::1;::::0;4194:18:79;17058:45:59::1;;;;;;;17113:21;:30:::0;16984:166::o;1139:178:40:-;1094:13:39;:11;:13::i;:::-;1228::40::1;:24:::0;;::::1;::::0;::::1;::::0;;;::::1;::::0;::::1;::::0;;;1292:7:::1;1247::39::0;1273:6;;;;1201:85;1292:7:40::1;1267:43;;;;;;;;;;;;1139:178:::0;:::o;17374:285:59:-;1094:13:39;:11;:13::i;:::-;17477:6:59::1;17453:21;:30;17449:62;;;17492:19;;;;;;;;;;;;;;17449:62;17535:2;17526:20;;;17539:6;17526:20;;;;160:25:79::0;;148:2;133:18;;14:177;17526:20:59::1;;;;;;;;17557:12;17582:2;17574:16;;17598:6;17574:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;17556:53;;;17624:7;17619:33;;17640:12;;;;;;;;;;;;;;2433:187:39::0;2506:16;2525:6;;;2541:17;;;;;;;;;;2573:40;;2525:6;;;;;;;2573:40;;2506:16;2573:40;2496:124;2433:187;:::o;1359:130::-;1247:7;1273:6;1422:23;1273:6;719:10:49;1422:23:39;1414:68;;;;;;;6136:2:79;1414:68:39;;;6118:21:79;;;6155:18;;;6148:30;6214:34;6194:18;;;6187:62;6266:18;;1414:68:39;5934:356:79;13963:166:59;14056:7;14082:40;14112:9;14083:18;14091:10;14083:5;:18;:::i;:::-;14082:29;;:40::i;:::-;14075:47;13963:166;-1:-1:-1;;;;13963:166:59:o;12201:1333::-;12244:19;12265:16;12363:20;12397:18;12429:23;12466;12503:28;12544:10;:26;;;:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;12349:223;;;;;;;;;;12586:11;12601:1;12586:16;12582:44;;12611:15;;;;;;;;;;;;;;12582:44;12640:15;12659:1;12640:20;12636:50;;12669:17;;;;;;;;;;;;;;12636:50;12724:13;12700:37;;:21;:37;;;12696:63;;;12746:13;;;;;;;;;;;;;;12696:63;12861:19;12883:33;12901:15;12883;:33;:::i;:::-;12861:55;;12944:21;;12930:11;:35;12926:68;;;12974:20;;;;;;;;;;;;;;12926:68;13066:19;13087:13;13103:22;13127:27;13170:9;:25;;;:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;13065:132;;;;;;;;;13221:1;13211:6;:11;13207:38;;13231:14;;;;;;;;;;;;;;13207:38;13259:14;13277:1;13259:19;13255:49;;13287:17;;;;;;;;;;;;;;13255:49;13341:12;13318:35;;:20;:35;;;13314:61;;;13362:13;;;;;;;;;;;;;;13314:61;-1:-1:-1;;13400:11:59;;;13480:15;13458:19;:37;13505:22;;;;13400:11;13440:6;;-1:-1:-1;12201:1333:59;-1:-1:-1;;;;;;;;12201:1333:59:o;1501:153:40:-;1590:13;1583:20;;;;;;1613:34;1638:8;1613:24;:34::i;13540:125:59:-;13589:7;13615:43;13622:5;13629:12;;13643:14;:12;:14::i;:::-;13615:6;:43::i;11621:468::-;11663:7;11726:22;;11704:19;;11686:15;:37;;;;:::i;:::-;:62;11682:401;;;11952:19;11976:15;:13;:15::i;:::-;-1:-1:-1;11951:40:59;11621:468;-1:-1:-1;;11621:468:59:o;11682:401::-;-1:-1:-1;12061:11:59;;;11621:468::o;1044:158:55:-;1107:7;1133:19;1142:1;491:4;1150:1;1133:8;:19::i;:::-;1126:26;1044:158;-1:-1:-1;;;1044:158:55:o;8282:752::-;8486:9;;;8617:19;;8610:27;8642:9;;8656;;;8653:16;;8639:31;8606:65;8596:121;;8701:1;8698;8691:12;8596:121;9015:1;9001:11;8997:1;8994;8990:9;8986:27;8982:35;8977:1;8970:9;8963:17;8959:59;8954:64;;8282:752;;;;;:::o;196:180:79:-;255:6;308:2;296:9;287:7;283:23;279:32;276:52;;;324:1;321;314:12;276:52;-1:-1:-1;347:23:79;;196:180;-1:-1:-1;196:180:79:o;640:248::-;708:6;716;769:2;757:9;748:7;744:23;740:32;737:52;;;785:1;782;775:12;737:52;-1:-1:-1;;808:23:79;;;878:2;863:18;;;850:32;;-1:-1:-1;640:248:79:o;1124:367::-;1187:8;1197:6;1251:3;1244:4;1236:6;1232:17;1228:27;1218:55;;1269:1;1266;1259:12;1218:55;-1:-1:-1;1292:20:79;;1335:18;1324:30;;1321:50;;;1367:1;1364;1357:12;1321:50;1404:4;1396:6;1392:17;1380:29;;1464:3;1457:4;1447:6;1444:1;1440:14;1432:6;1428:27;1424:38;1421:47;1418:67;;;1481:1;1478;1471:12;1418:67;1124:367;;;;;:::o;1496:773::-;1618:6;1626;1634;1642;1695:2;1683:9;1674:7;1670:23;1666:32;1663:52;;;1711:1;1708;1701:12;1663:52;1751:9;1738:23;1780:18;1821:2;1813:6;1810:14;1807:34;;;1837:1;1834;1827:12;1807:34;1876:70;1938:7;1929:6;1918:9;1914:22;1876:70;:::i;:::-;1965:8;;-1:-1:-1;1850:96:79;-1:-1:-1;2053:2:79;2038:18;;2025:32;;-1:-1:-1;2069:16:79;;;2066:36;;;2098:1;2095;2088:12;2066:36;;2137:72;2201:7;2190:8;2179:9;2175:24;2137:72;:::i;:::-;1496:773;;;;-1:-1:-1;2228:8:79;-1:-1:-1;;;;1496:773:79:o;2274:505::-;2369:6;2377;2385;2438:2;2426:9;2417:7;2413:23;2409:32;2406:52;;;2454:1;2451;2444:12;2406:52;2494:9;2481:23;2527:18;2519:6;2516:30;2513:50;;;2559:1;2556;2549:12;2513:50;2598:70;2660:7;2651:6;2640:9;2636:22;2598:70;:::i;:::-;2687:8;;2572:96;;-1:-1:-1;2769:2:79;2754:18;;;;2741:32;;2274:505;-1:-1:-1;;;;2274:505:79:o;2784:196::-;2852:20;;2912:42;2901:54;;2891:65;;2881:93;;2970:1;2967;2960:12;2881:93;2784:196;;;:::o;2985:186::-;3044:6;3097:2;3085:9;3076:7;3072:23;3068:32;3065:52;;;3113:1;3110;3103:12;3065:52;3136:29;3155:9;3136:29;:::i;3176:254::-;3244:6;3252;3305:2;3293:9;3284:7;3280:23;3276:32;3273:52;;;3321:1;3318;3311:12;3273:52;3344:29;3363:9;3344:29;:::i;:::-;3334:39;3420:2;3405:18;;;;3392:32;;-1:-1:-1;;;3176:254:79:o;3435:607::-;3547:4;3576:2;3605;3594:9;3587:21;3637:6;3631:13;3680:6;3675:2;3664:9;3660:18;3653:34;3705:1;3715:140;3729:6;3726:1;3723:13;3715:140;;;3824:14;;;3820:23;;3814:30;3790:17;;;3809:2;3786:26;3779:66;3744:10;;3715:140;;;3719:3;3904:1;3899:2;3890:6;3879:9;3875:22;3871:31;3864:42;4033:2;3963:66;3958:2;3950:6;3946:15;3942:88;3931:9;3927:104;3923:113;3915:121;;;;3435:607;;;;:::o;4300:184::-;4352:77;4349:1;4342:88;4449:4;4446:1;4439:15;4473:4;4470:1;4463:15;4489:125;4554:9;;;4575:10;;;4572:36;;;4588:18;;:::i;4619:128::-;4686:9;;;4707:11;;;4704:37;;;4721:18;;:::i;5372:184::-;5424:77;5421:1;5414:88;5521:4;5518:1;5511:15;5545:4;5542:1;5535:15;5561:195;5600:3;5631:66;5624:5;5621:77;5618:103;;5701:18;;:::i;:::-;-1:-1:-1;5748:1:79;5737:13;;5561:195::o;5761:168::-;5834:9;;;5865;;5882:15;;;5876:22;;5862:37;5852:71;;5903:18;;:::i;6295:179::-;6373:13;;6426:22;6415:34;;6405:45;;6395:73;;6464:1;6461;6454:12;6479:473;6582:6;6590;6598;6606;6614;6667:3;6655:9;6646:7;6642:23;6638:33;6635:53;;;6684:1;6681;6674:12;6635:53;6707:39;6736:9;6707:39;:::i;:::-;6697:49;;6786:2;6775:9;6771:18;6765:25;6755:35;;6830:2;6819:9;6815:18;6809:25;6799:35;;6874:2;6863:9;6859:18;6853:25;6843:35;;6897:49;6941:3;6930:9;6926:19;6897:49;:::i;:::-;6887:59;;6479:473;;;;;;;;:::o',
    linkReferences: {},
    immutableReferences: {
      '39554': [
        {
          start: 821,
          length: 32,
        },
        {
          start: 5090,
          length: 32,
        },
      ],
      '39558': [
        {
          start: 646,
          length: 32,
        },
        {
          start: 4659,
          length: 32,
        },
      ],
    },
  },
  methodIdentifiers: {
    'VERSION()': 'ffa1ad74',
    'acceptOwnership()': '79ba5097',
    'batchCredit(uint256[],uint256)': 'b3a90c67',
    'batchRent(uint256[],uint256[])': 'a82c356e',
    'credit(uint256,uint256)': 'ab7ccc1c',
    'deprecationTimestamp()': '2c39d670',
    'ethUsdPrice()': '9478ab8c',
    'lastPriceFeedUpdate()': '128d34ac',
    'maxUnits()': '06517a29',
    'owner()': '8da5cb5b',
    'pendingOwner()': 'e30c3978',
    'price(uint256)': '26a49e37',
    'priceFeed()': '741bef1a',
    'priceFeedCacheDuration()': 'c2e46fe0',
    'refreshPrice()': '3c67a5b2',
    'renounceOwnership()': '715018a6',
    'rent(uint256,uint256)': '783a112b',
    'rentedUnits()': '2751c4fd',
    'setCacheDuration(uint256)': '194e9951',
    'setDeprecationTimestamp(uint256)': '8d567f86',
    'setGracePeriod(uint256)': 'f2f65960',
    'setMaxUnits(uint256)': 'd285e8fd',
    'setPrice(uint256)': '91b7f5ed',
    'transferOwnership(address)': 'f2fde38b',
    'unitPrice()': 'e73faa2d',
    'uptimeFeed()': '3b56125c',
    'uptimeFeedGracePeriod()': '7078cc1c',
    'usdUnitPrice()': '40df0ba0',
    'withdraw(address,uint256)': 'f3fef3a3',
  },
  rawMetadata:
    '{"compiler":{"version":"0.8.18+commit.87f61d96"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"contract AggregatorV3Interface","name":"_priceFeed","type":"address"},{"internalType":"contract AggregatorV3Interface","name":"_uptimeFeed","type":"address"},{"internalType":"uint256","name":"_initialDeprecationPeriod","type":"uint256"},{"internalType":"uint256","name":"_initialUsdUnitPrice","type":"uint256"},{"internalType":"uint256","name":"_initialMaxUnits","type":"uint256"},{"internalType":"uint256","name":"_initialPriceFeedCacheDuration","type":"uint256"},{"internalType":"uint256","name":"_initialUptimeFeedGracePeriod","type":"uint256"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[],"name":"CallFailed","type":"error"},{"inputs":[],"name":"ContractDeprecated","type":"error"},{"inputs":[],"name":"ExceedsCapacity","type":"error"},{"inputs":[],"name":"GracePeriodNotOver","type":"error"},{"inputs":[],"name":"IncompleteRound","type":"error"},{"inputs":[],"name":"InsufficientFunds","type":"error"},{"inputs":[],"name":"InvalidAmount","type":"error"},{"inputs":[],"name":"InvalidBatchInput","type":"error"},{"inputs":[],"name":"InvalidDeprecationTimestamp","type":"error"},{"inputs":[],"name":"InvalidPayment","type":"error"},{"inputs":[],"name":"InvalidPrice","type":"error"},{"inputs":[],"name":"SequencerDown","type":"error"},{"inputs":[],"name":"StaleAnswer","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferStarted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"payer","type":"address"},{"indexed":true,"internalType":"uint256","name":"fid","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"units","type":"uint256"}],"name":"Rent","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"oldDuration","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"newDuration","type":"uint256"}],"name":"SetCacheDuration","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"oldTimestamp","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"newTimestamp","type":"uint256"}],"name":"SetDeprecationTimestamp","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"oldPeriod","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"newPeriod","type":"uint256"}],"name":"SetGracePeriod","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"oldMax","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"newMax","type":"uint256"}],"name":"SetMaxUnits","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"oldPrice","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"newPrice","type":"uint256"}],"name":"SetPrice","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"Withdraw","type":"event"},{"inputs":[],"name":"VERSION","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"acceptOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256[]","name":"fids","type":"uint256[]"},{"internalType":"uint256","name":"units","type":"uint256"}],"name":"batchCredit","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256[]","name":"fids","type":"uint256[]"},{"internalType":"uint256[]","name":"units","type":"uint256[]"}],"name":"batchRent","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"uint256","name":"fid","type":"uint256"},{"internalType":"uint256","name":"units","type":"uint256"}],"name":"credit","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"deprecationTimestamp","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"ethUsdPrice","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"lastPriceFeedUpdate","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"maxUnits","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"pendingOwner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"units","type":"uint256"}],"name":"price","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"priceFeed","outputs":[{"internalType":"contract AggregatorV3Interface","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"priceFeedCacheDuration","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"refreshPrice","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"fid","type":"uint256"},{"internalType":"uint256","name":"units","type":"uint256"}],"name":"rent","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[],"name":"rentedUnits","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"duration","type":"uint256"}],"name":"setCacheDuration","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"timestamp","type":"uint256"}],"name":"setDeprecationTimestamp","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"period","type":"uint256"}],"name":"setGracePeriod","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"max","type":"uint256"}],"name":"setMaxUnits","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"usdPrice","type":"uint256"}],"name":"setPrice","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"unitPrice","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"uptimeFeed","outputs":[{"internalType":"contract AggregatorV3Interface","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"uptimeFeedGracePeriod","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"usdUnitPrice","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"withdraw","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"errors":{"CallFailed()":[{"details":"Revert when a native token transfer fails."}],"ContractDeprecated()":[{"details":"Revert if the caller attempts to rent storage after this contract is deprecated."}],"ExceedsCapacity()":[{"details":"Revert if the caller attempts to rent more storage than is available."}],"GracePeriodNotOver()":[{"details":"Revert if the L2 sequencer restarted less than L2_DOWNTIME_GRACE_PERIOD seconds ago."}],"IncompleteRound()":[{"details":"Revert if the data feed round is incomplete and has not yet generated an answer."}],"InsufficientFunds()":[{"details":"Revert when there are not enough funds for a native token transfer."}],"InvalidAmount()":[{"details":"Revert if the caller attempts to rent zero units."}],"InvalidBatchInput()":[{"details":"Revert if the caller attempts a batch rent with mismatched input array lengths or an empty array."}],"InvalidDeprecationTimestamp()":[{"details":"Revert if the depreaction timestamp parameter is in the past."}],"InvalidPayment()":[{"details":"Revert if the caller provides the wrong payment amount."}],"InvalidPrice()":[{"details":"Revert if the price feed returns a zero or negative price."}],"SequencerDown()":[{"details":"Revert if the sequencer uptime feed detects that the L2 sequencer is unavailable."}],"StaleAnswer()":[{"details":"Revert if a data feed returns a stale answer."}]},"events":{"Rent(address,uint256,uint256)":{"details":"Emit an event when caller pays rent for an fid\'s storage.","params":{"fid":"The fid that will receive the storage allocation.","payer":"Address of the account paying the storage rent.","units":"The number of storage units being rented."}},"SetCacheDuration(uint256,uint256)":{"details":"Emit an event when an owner changes the priceFeedCacheDuration.","params":{"newDuration":"The new priceFeedCacheDuration.","oldDuration":"The previous priceFeedCacheDuration."}},"SetDeprecationTimestamp(uint256,uint256)":{"details":"Emit an event when an owner changes the deprecationTimestamp.","params":{"newTimestamp":"The new deprecationTimestamp.","oldTimestamp":"The previous deprecationTimestamp."}},"SetGracePeriod(uint256,uint256)":{"details":"Emit an event when an owner changes the uptimeFeedGracePeriod.","params":{"newPeriod":"The new uptimeFeedGracePeriod.","oldPeriod":"The previous uptimeFeedGracePeriod."}},"SetMaxUnits(uint256,uint256)":{"details":"Emit an event when an owner changes the maximum supply of storage units.","params":{"newMax":"The new maximum amount.","oldMax":"The previous maximum amount."}},"SetPrice(uint256,uint256)":{"details":"Emit an event when an owner changes the price of storage units.","params":{"newPrice":"The new unit price in USD. Fixed point value with 8 decimals.","oldPrice":"The previous unit price in USD. Fixed point value with 8 decimals."}},"Withdraw(address,uint256)":{"details":"Emit an event when an owner makes a withdrawal from the contract balance.","params":{"amount":"The amount of ether withdrawn.","to":"Address of recipient."}}},"kind":"dev","methods":{"acceptOwnership()":{"details":"The new owner accepts the ownership transfer."},"batchCredit(uint256[],uint256)":{"params":{"fids":"An array of fids.","units":"Number of storage units per fid."}},"batchRent(uint256[],uint256[])":{"params":{"fids":"An array of fids.","units":"An array of storage unit quantities. Must be the same length as the fids array."}},"constructor":{"params":{"_initialDeprecationPeriod":"Initial deprecation period in seconds.","_initialMaxUnits":"Initial maximum capacity in storage units.","_initialPriceFeedCacheDuration":"Initial duration to cache ETH/USD price.","_initialUptimeFeedGracePeriod":"Initial L2 sequencer downtime grace period.","_initialUsdUnitPrice":"Initial unit price in USD. Fixed point value with 8 decimals.","_priceFeed":"Chainlink ETH/USD price feed.","_uptimeFeed":"Chainlink L2 sequencer uptime feed."}},"credit(uint256,uint256)":{"params":{"fid":"The fid that will receive the credit.","units":"Number of storage units to credit."}},"owner()":{"details":"Returns the address of the current owner."},"pendingOwner()":{"details":"Returns the address of the pending owner."},"price(uint256)":{"params":{"units":"Number of storage units."},"returns":{"_0":"uint256 cost in wei."}},"renounceOwnership()":{"details":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."},"rent(uint256,uint256)":{"params":{"fid":"The fid that will receive the storage allocation.","units":"Number of storage units to rent."}},"setCacheDuration(uint256)":{"params":{"duration":"The new priceFeedCacheDuration."}},"setDeprecationTimestamp(uint256)":{"params":{"timestamp":"The new deprecationTimestamp."}},"setGracePeriod(uint256)":{"params":{"period":"The new uptimeFeedGracePeriod."}},"setMaxUnits(uint256)":{"params":{"max":"The new maximum supply of storage units."}},"setPrice(uint256)":{"params":{"usdPrice":"The new unit price in USD. Fixed point value with 8 decimals."}},"transferOwnership(address)":{"details":"Starts the ownership transfer of the contract to a new account. Replaces the pending transfer if there is one. Can only be called by the current owner."},"unitPrice()":{"returns":{"_0":"uint256 cost in wei."}},"withdraw(address,uint256)":{"params":{"amount":"The amount of ether to withdraw.","to":"Address of recipient."}}},"stateVariables":{"VERSION":{"details":"Contract version. Follows Farcaster protocol version scheme."},"deprecationTimestamp":{"details":"Block timestamp at which this contract will no longer accept storage rent payments. Changeable by owner."},"ethUsdPrice":{"details":"Cached Chainlink ETH/USD price."},"lastPriceFeedUpdate":{"details":"Timestamp of the last update to ethUsdPrice."},"maxUnits":{"details":"Total capacity of storage units. Changeable by owner."},"priceFeed":{"details":"Chainlink ETH/USD price feed."},"priceFeedCacheDuration":{"details":"Duration to cache ethUsdPrice before updating from the price feed."},"rentedUnits":{"details":"Total number of storage units that have been rented."},"uptimeFeed":{"details":"Chainlink L2 sequencer uptime feed."},"uptimeFeedGracePeriod":{"details":"Period in seconds to wait after the L2 sequencer restarts before resuming rentals.      See: https://docs.chain.link/data-feeds/l2-sequencer-feeds"},"usdUnitPrice":{"details":"Price per storage unit in USD. Fixed point value with 8 decimals, e.g. 5e8 = $5 USD. Changeable by owner."}},"version":1},"userdoc":{"kind":"user","methods":{"batchCredit(uint256[],uint256)":{"notice":"Credit multiple fids with free storage units. Only callable by owner."},"batchRent(uint256[],uint256[])":{"notice":"Rent storage for multiple fids. The caller must provide an exact payment amount equal to         the sum of the prices for each fid\'s storage allocation."},"constructor":{"notice":"Set the price feed, uptime feed, and initial parameters."},"credit(uint256,uint256)":{"notice":"Credit a single fid with free storage units. Only callable by owner."},"price(uint256)":{"notice":"Calculate the cost in wei to rent the given number of storage units."},"refreshPrice()":{"notice":"Force refresh the cached Chainlink ETH/USD price."},"rent(uint256,uint256)":{"notice":"Rent storage for a given fid. The caller must provide an exact payment amount."},"setCacheDuration(uint256)":{"notice":"Change the priceFeedCacheDuration."},"setDeprecationTimestamp(uint256)":{"notice":"Change the deprecationTimestamp."},"setGracePeriod(uint256)":{"notice":"Change the uptimeFeedGracePeriod."},"setMaxUnits(uint256)":{"notice":"Change the maximum supply of storage units."},"setPrice(uint256)":{"notice":"Change the USD price per storage unit."},"unitPrice()":{"notice":"Cost in wei to rent one storage unit."},"withdraw(address,uint256)":{"notice":"Withdraw a specified amount of ether from the contract balance to a given address."}},"version":1}},"settings":{"compilationTarget":{"src/StorageRent.sol":"StorageRent"},"evmVersion":"paris","libraries":{},"metadata":{"bytecodeHash":"ipfs"},"optimizer":{"enabled":true,"runs":10000},"remappings":[":chainlink-brownie-contracts/=lib/chainlink-brownie-contracts/",":chainlink/=lib/chainlink-brownie-contracts/contracts/src/",":ds-test/=lib/forge-std/lib/ds-test/src/",":forge-std/=lib/forge-std/src/",":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/",":openzeppelin-contracts/=lib/openzeppelin-contracts/",":openzeppelin-upgradeable/=lib/openzeppelin-contracts-upgradeable/",":openzeppelin/=lib/openzeppelin-contracts/",":solmate/=lib/solmate/"]},"sources":{"lib/chainlink-brownie-contracts/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol":{"keccak256":"0xe6f5ac8c47f3b9b6135051efb9216f9ba5b312a6ecc20209b4f66a780443c328","license":"MIT","urls":["bzz-raw://ded4aa77b7b8f222a2d992eb95b03592be3250b826b6a38a4c790d2dec8b0d47","dweb:/ipfs/QmNUKpTKXWsBBNMyzZuYvEZ2pUhZ2zEhQuyvxYZpTwo4eT"]},"lib/openzeppelin-contracts/contracts/access/Ownable.sol":{"keccak256":"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673","license":"MIT","urls":["bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2","dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y"]},"lib/openzeppelin-contracts/contracts/access/Ownable2Step.sol":{"keccak256":"0x5c879356795cc563440408404a52eaf672d4547949e0a5920fb17642303d9e1b","license":"MIT","urls":["bzz-raw://fb210cdef017f9813af368e17ea1573bc26094dd8dba8b5db8bec4cc90883d0a","dweb:/ipfs/QmdixQwckiNVVWHaJD9ps5ALWsHkZGRAePkuUPw1ZhhJhM"]},"lib/openzeppelin-contracts/contracts/utils/Context.sol":{"keccak256":"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7","license":"MIT","urls":["bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92","dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3"]},"lib/solmate/src/utils/FixedPointMathLib.sol":{"keccak256":"0x622fcd8a49e132df5ec7651cc6ae3aaf0cf59bdcd67a9a804a1b9e2485113b7d","license":"MIT","urls":["bzz-raw://af77088eb606427d4c55e578984a615779c86bc30646a20f7bb27299ba390f7c","dweb:/ipfs/QmZGQdhdQDtHc7gZXWrKXgA3govc74X8U63BiWhPQK3mK8"]},"src/StorageRent.sol":{"keccak256":"0xc92f0df7a4f6f9612d318002c930338e109b20ac9942116e4f5f690f525d7ec0","license":"UNLICENSED","urls":["bzz-raw://779f34dfe4645c88bb5d043a095a089d68101438eb00761eb86550d7aa92fd9e","dweb:/ipfs/QmdEkRn7ULhJDSEg6ctJ25pjGqwcoG1S8kEj9AVrrYdiRY"]}},"version":1}',
  metadata: {
    compiler: {
      version: '0.8.18+commit.87f61d96',
    },
    language: 'Solidity',
    output: {
      abi: [
        {
          inputs: [
            {
              internalType: 'contract AggregatorV3Interface',
              name: '_priceFeed',
              type: 'address',
            },
            {
              internalType: 'contract AggregatorV3Interface',
              name: '_uptimeFeed',
              type: 'address',
            },
            {
              internalType: 'uint256',
              name: '_initialDeprecationPeriod',
              type: 'uint256',
            },
            {
              internalType: 'uint256',
              name: '_initialUsdUnitPrice',
              type: 'uint256',
            },
            {
              internalType: 'uint256',
              name: '_initialMaxUnits',
              type: 'uint256',
            },
            {
              internalType: 'uint256',
              name: '_initialPriceFeedCacheDuration',
              type: 'uint256',
            },
            {
              internalType: 'uint256',
              name: '_initialUptimeFeedGracePeriod',
              type: 'uint256',
            },
          ],
          stateMutability: 'nonpayable',
          type: 'constructor',
        },
        {
          inputs: [],
          type: 'error',
          name: 'CallFailed',
        },
        {
          inputs: [],
          type: 'error',
          name: 'ContractDeprecated',
        },
        {
          inputs: [],
          type: 'error',
          name: 'ExceedsCapacity',
        },
        {
          inputs: [],
          type: 'error',
          name: 'GracePeriodNotOver',
        },
        {
          inputs: [],
          type: 'error',
          name: 'IncompleteRound',
        },
        {
          inputs: [],
          type: 'error',
          name: 'InsufficientFunds',
        },
        {
          inputs: [],
          type: 'error',
          name: 'InvalidAmount',
        },
        {
          inputs: [],
          type: 'error',
          name: 'InvalidBatchInput',
        },
        {
          inputs: [],
          type: 'error',
          name: 'InvalidDeprecationTimestamp',
        },
        {
          inputs: [],
          type: 'error',
          name: 'InvalidPayment',
        },
        {
          inputs: [],
          type: 'error',
          name: 'InvalidPrice',
        },
        {
          inputs: [],
          type: 'error',
          name: 'SequencerDown',
        },
        {
          inputs: [],
          type: 'error',
          name: 'StaleAnswer',
        },
        {
          inputs: [
            {
              internalType: 'address',
              name: 'previousOwner',
              type: 'address',
              indexed: true,
            },
            {
              internalType: 'address',
              name: 'newOwner',
              type: 'address',
              indexed: true,
            },
          ],
          type: 'event',
          name: 'OwnershipTransferStarted',
          anonymous: false,
        },
        {
          inputs: [
            {
              internalType: 'address',
              name: 'previousOwner',
              type: 'address',
              indexed: true,
            },
            {
              internalType: 'address',
              name: 'newOwner',
              type: 'address',
              indexed: true,
            },
          ],
          type: 'event',
          name: 'OwnershipTransferred',
          anonymous: false,
        },
        {
          inputs: [
            {
              internalType: 'address',
              name: 'payer',
              type: 'address',
              indexed: true,
            },
            {
              internalType: 'uint256',
              name: 'fid',
              type: 'uint256',
              indexed: true,
            },
            {
              internalType: 'uint256',
              name: 'units',
              type: 'uint256',
              indexed: false,
            },
          ],
          type: 'event',
          name: 'Rent',
          anonymous: false,
        },
        {
          inputs: [
            {
              internalType: 'uint256',
              name: 'oldDuration',
              type: 'uint256',
              indexed: false,
            },
            {
              internalType: 'uint256',
              name: 'newDuration',
              type: 'uint256',
              indexed: false,
            },
          ],
          type: 'event',
          name: 'SetCacheDuration',
          anonymous: false,
        },
        {
          inputs: [
            {
              internalType: 'uint256',
              name: 'oldTimestamp',
              type: 'uint256',
              indexed: false,
            },
            {
              internalType: 'uint256',
              name: 'newTimestamp',
              type: 'uint256',
              indexed: false,
            },
          ],
          type: 'event',
          name: 'SetDeprecationTimestamp',
          anonymous: false,
        },
        {
          inputs: [
            {
              internalType: 'uint256',
              name: 'oldPeriod',
              type: 'uint256',
              indexed: false,
            },
            {
              internalType: 'uint256',
              name: 'newPeriod',
              type: 'uint256',
              indexed: false,
            },
          ],
          type: 'event',
          name: 'SetGracePeriod',
          anonymous: false,
        },
        {
          inputs: [
            {
              internalType: 'uint256',
              name: 'oldMax',
              type: 'uint256',
              indexed: false,
            },
            {
              internalType: 'uint256',
              name: 'newMax',
              type: 'uint256',
              indexed: false,
            },
          ],
          type: 'event',
          name: 'SetMaxUnits',
          anonymous: false,
        },
        {
          inputs: [
            {
              internalType: 'uint256',
              name: 'oldPrice',
              type: 'uint256',
              indexed: false,
            },
            {
              internalType: 'uint256',
              name: 'newPrice',
              type: 'uint256',
              indexed: false,
            },
          ],
          type: 'event',
          name: 'SetPrice',
          anonymous: false,
        },
        {
          inputs: [
            {
              internalType: 'address',
              name: 'to',
              type: 'address',
              indexed: true,
            },
            {
              internalType: 'uint256',
              name: 'amount',
              type: 'uint256',
              indexed: false,
            },
          ],
          type: 'event',
          name: 'Withdraw',
          anonymous: false,
        },
        {
          inputs: [],
          stateMutability: 'view',
          type: 'function',
          name: 'VERSION',
          outputs: [
            {
              internalType: 'string',
              name: '',
              type: 'string',
            },
          ],
        },
        {
          inputs: [],
          stateMutability: 'nonpayable',
          type: 'function',
          name: 'acceptOwnership',
        },
        {
          inputs: [
            {
              internalType: 'uint256[]',
              name: 'fids',
              type: 'uint256[]',
            },
            {
              internalType: 'uint256',
              name: 'units',
              type: 'uint256',
            },
          ],
          stateMutability: 'nonpayable',
          type: 'function',
          name: 'batchCredit',
        },
        {
          inputs: [
            {
              internalType: 'uint256[]',
              name: 'fids',
              type: 'uint256[]',
            },
            {
              internalType: 'uint256[]',
              name: 'units',
              type: 'uint256[]',
            },
          ],
          stateMutability: 'payable',
          type: 'function',
          name: 'batchRent',
        },
        {
          inputs: [
            {
              internalType: 'uint256',
              name: 'fid',
              type: 'uint256',
            },
            {
              internalType: 'uint256',
              name: 'units',
              type: 'uint256',
            },
          ],
          stateMutability: 'nonpayable',
          type: 'function',
          name: 'credit',
        },
        {
          inputs: [],
          stateMutability: 'view',
          type: 'function',
          name: 'deprecationTimestamp',
          outputs: [
            {
              internalType: 'uint256',
              name: '',
              type: 'uint256',
            },
          ],
        },
        {
          inputs: [],
          stateMutability: 'view',
          type: 'function',
          name: 'ethUsdPrice',
          outputs: [
            {
              internalType: 'uint256',
              name: '',
              type: 'uint256',
            },
          ],
        },
        {
          inputs: [],
          stateMutability: 'view',
          type: 'function',
          name: 'lastPriceFeedUpdate',
          outputs: [
            {
              internalType: 'uint256',
              name: '',
              type: 'uint256',
            },
          ],
        },
        {
          inputs: [],
          stateMutability: 'view',
          type: 'function',
          name: 'maxUnits',
          outputs: [
            {
              internalType: 'uint256',
              name: '',
              type: 'uint256',
            },
          ],
        },
        {
          inputs: [],
          stateMutability: 'view',
          type: 'function',
          name: 'owner',
          outputs: [
            {
              internalType: 'address',
              name: '',
              type: 'address',
            },
          ],
        },
        {
          inputs: [],
          stateMutability: 'view',
          type: 'function',
          name: 'pendingOwner',
          outputs: [
            {
              internalType: 'address',
              name: '',
              type: 'address',
            },
          ],
        },
        {
          inputs: [
            {
              internalType: 'uint256',
              name: 'units',
              type: 'uint256',
            },
          ],
          stateMutability: 'view',
          type: 'function',
          name: 'price',
          outputs: [
            {
              internalType: 'uint256',
              name: '',
              type: 'uint256',
            },
          ],
        },
        {
          inputs: [],
          stateMutability: 'view',
          type: 'function',
          name: 'priceFeed',
          outputs: [
            {
              internalType: 'contract AggregatorV3Interface',
              name: '',
              type: 'address',
            },
          ],
        },
        {
          inputs: [],
          stateMutability: 'view',
          type: 'function',
          name: 'priceFeedCacheDuration',
          outputs: [
            {
              internalType: 'uint256',
              name: '',
              type: 'uint256',
            },
          ],
        },
        {
          inputs: [],
          stateMutability: 'nonpayable',
          type: 'function',
          name: 'refreshPrice',
        },
        {
          inputs: [],
          stateMutability: 'nonpayable',
          type: 'function',
          name: 'renounceOwnership',
        },
        {
          inputs: [
            {
              internalType: 'uint256',
              name: 'fid',
              type: 'uint256',
            },
            {
              internalType: 'uint256',
              name: 'units',
              type: 'uint256',
            },
          ],
          stateMutability: 'payable',
          type: 'function',
          name: 'rent',
        },
        {
          inputs: [],
          stateMutability: 'view',
          type: 'function',
          name: 'rentedUnits',
          outputs: [
            {
              internalType: 'uint256',
              name: '',
              type: 'uint256',
            },
          ],
        },
        {
          inputs: [
            {
              internalType: 'uint256',
              name: 'duration',
              type: 'uint256',
            },
          ],
          stateMutability: 'nonpayable',
          type: 'function',
          name: 'setCacheDuration',
        },
        {
          inputs: [
            {
              internalType: 'uint256',
              name: 'timestamp',
              type: 'uint256',
            },
          ],
          stateMutability: 'nonpayable',
          type: 'function',
          name: 'setDeprecationTimestamp',
        },
        {
          inputs: [
            {
              internalType: 'uint256',
              name: 'period',
              type: 'uint256',
            },
          ],
          stateMutability: 'nonpayable',
          type: 'function',
          name: 'setGracePeriod',
        },
        {
          inputs: [
            {
              internalType: 'uint256',
              name: 'max',
              type: 'uint256',
            },
          ],
          stateMutability: 'nonpayable',
          type: 'function',
          name: 'setMaxUnits',
        },
        {
          inputs: [
            {
              internalType: 'uint256',
              name: 'usdPrice',
              type: 'uint256',
            },
          ],
          stateMutability: 'nonpayable',
          type: 'function',
          name: 'setPrice',
        },
        {
          inputs: [
            {
              internalType: 'address',
              name: 'newOwner',
              type: 'address',
            },
          ],
          stateMutability: 'nonpayable',
          type: 'function',
          name: 'transferOwnership',
        },
        {
          inputs: [],
          stateMutability: 'view',
          type: 'function',
          name: 'unitPrice',
          outputs: [
            {
              internalType: 'uint256',
              name: '',
              type: 'uint256',
            },
          ],
        },
        {
          inputs: [],
          stateMutability: 'view',
          type: 'function',
          name: 'uptimeFeed',
          outputs: [
            {
              internalType: 'contract AggregatorV3Interface',
              name: '',
              type: 'address',
            },
          ],
        },
        {
          inputs: [],
          stateMutability: 'view',
          type: 'function',
          name: 'uptimeFeedGracePeriod',
          outputs: [
            {
              internalType: 'uint256',
              name: '',
              type: 'uint256',
            },
          ],
        },
        {
          inputs: [],
          stateMutability: 'view',
          type: 'function',
          name: 'usdUnitPrice',
          outputs: [
            {
              internalType: 'uint256',
              name: '',
              type: 'uint256',
            },
          ],
        },
        {
          inputs: [
            {
              internalType: 'address',
              name: 'to',
              type: 'address',
            },
            {
              internalType: 'uint256',
              name: 'amount',
              type: 'uint256',
            },
          ],
          stateMutability: 'nonpayable',
          type: 'function',
          name: 'withdraw',
        },
      ],
      devdoc: {
        kind: 'dev',
        methods: {
          'acceptOwnership()': {
            details: 'The new owner accepts the ownership transfer.',
          },
          'batchCredit(uint256[],uint256)': {
            params: {
              fids: 'An array of fids.',
              units: 'Number of storage units per fid.',
            },
          },
          'batchRent(uint256[],uint256[])': {
            params: {
              fids: 'An array of fids.',
              units: 'An array of storage unit quantities. Must be the same length as the fids array.',
            },
          },
          constructor: {
            params: {
              _initialDeprecationPeriod: 'Initial deprecation period in seconds.',
              _initialMaxUnits: 'Initial maximum capacity in storage units.',
              _initialPriceFeedCacheDuration: 'Initial duration to cache ETH/USD price.',
              _initialUptimeFeedGracePeriod: 'Initial L2 sequencer downtime grace period.',
              _initialUsdUnitPrice: 'Initial unit price in USD. Fixed point value with 8 decimals.',
              _priceFeed: 'Chainlink ETH/USD price feed.',
              _uptimeFeed: 'Chainlink L2 sequencer uptime feed.',
            },
          },
          'credit(uint256,uint256)': {
            params: {
              fid: 'The fid that will receive the credit.',
              units: 'Number of storage units to credit.',
            },
          },
          'owner()': {
            details: 'Returns the address of the current owner.',
          },
          'pendingOwner()': {
            details: 'Returns the address of the pending owner.',
          },
          'price(uint256)': {
            params: {
              units: 'Number of storage units.',
            },
            returns: {
              _0: 'uint256 cost in wei.',
            },
          },
          'renounceOwnership()': {
            details:
              'Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.',
          },
          'rent(uint256,uint256)': {
            params: {
              fid: 'The fid that will receive the storage allocation.',
              units: 'Number of storage units to rent.',
            },
          },
          'setCacheDuration(uint256)': {
            params: {
              duration: 'The new priceFeedCacheDuration.',
            },
          },
          'setDeprecationTimestamp(uint256)': {
            params: {
              timestamp: 'The new deprecationTimestamp.',
            },
          },
          'setGracePeriod(uint256)': {
            params: {
              period: 'The new uptimeFeedGracePeriod.',
            },
          },
          'setMaxUnits(uint256)': {
            params: {
              max: 'The new maximum supply of storage units.',
            },
          },
          'setPrice(uint256)': {
            params: {
              usdPrice: 'The new unit price in USD. Fixed point value with 8 decimals.',
            },
          },
          'transferOwnership(address)': {
            details:
              'Starts the ownership transfer of the contract to a new account. Replaces the pending transfer if there is one. Can only be called by the current owner.',
          },
          'unitPrice()': {
            returns: {
              _0: 'uint256 cost in wei.',
            },
          },
          'withdraw(address,uint256)': {
            params: {
              amount: 'The amount of ether to withdraw.',
              to: 'Address of recipient.',
            },
          },
        },
        version: 1,
      },
      userdoc: {
        kind: 'user',
        methods: {
          'batchCredit(uint256[],uint256)': {
            notice: 'Credit multiple fids with free storage units. Only callable by owner.',
          },
          'batchRent(uint256[],uint256[])': {
            notice:
              "Rent storage for multiple fids. The caller must provide an exact payment amount equal to         the sum of the prices for each fid's storage allocation.",
          },
          constructor: {
            notice: 'Set the price feed, uptime feed, and initial parameters.',
          },
          'credit(uint256,uint256)': {
            notice: 'Credit a single fid with free storage units. Only callable by owner.',
          },
          'price(uint256)': {
            notice: 'Calculate the cost in wei to rent the given number of storage units.',
          },
          'refreshPrice()': {
            notice: 'Force refresh the cached Chainlink ETH/USD price.',
          },
          'rent(uint256,uint256)': {
            notice: 'Rent storage for a given fid. The caller must provide an exact payment amount.',
          },
          'setCacheDuration(uint256)': {
            notice: 'Change the priceFeedCacheDuration.',
          },
          'setDeprecationTimestamp(uint256)': {
            notice: 'Change the deprecationTimestamp.',
          },
          'setGracePeriod(uint256)': {
            notice: 'Change the uptimeFeedGracePeriod.',
          },
          'setMaxUnits(uint256)': {
            notice: 'Change the maximum supply of storage units.',
          },
          'setPrice(uint256)': {
            notice: 'Change the USD price per storage unit.',
          },
          'unitPrice()': {
            notice: 'Cost in wei to rent one storage unit.',
          },
          'withdraw(address,uint256)': {
            notice: 'Withdraw a specified amount of ether from the contract balance to a given address.',
          },
        },
        version: 1,
      },
    },
    settings: {
      remappings: [
        ':chainlink-brownie-contracts/=lib/chainlink-brownie-contracts/',
        ':chainlink/=lib/chainlink-brownie-contracts/contracts/src/',
        ':ds-test/=lib/forge-std/lib/ds-test/src/',
        ':forge-std/=lib/forge-std/src/',
        ':openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/',
        ':openzeppelin-contracts/=lib/openzeppelin-contracts/',
        ':openzeppelin-upgradeable/=lib/openzeppelin-contracts-upgradeable/',
        ':openzeppelin/=lib/openzeppelin-contracts/',
        ':solmate/=lib/solmate/',
      ],
      optimizer: {
        enabled: true,
        runs: 10000,
      },
      metadata: {
        bytecodeHash: 'ipfs',
      },
      compilationTarget: {
        'src/StorageRent.sol': 'StorageRent',
      },
      libraries: {},
    },
    sources: {
      'lib/chainlink-brownie-contracts/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol': {
        keccak256: '0xe6f5ac8c47f3b9b6135051efb9216f9ba5b312a6ecc20209b4f66a780443c328',
        urls: [
          'bzz-raw://ded4aa77b7b8f222a2d992eb95b03592be3250b826b6a38a4c790d2dec8b0d47',
          'dweb:/ipfs/QmNUKpTKXWsBBNMyzZuYvEZ2pUhZ2zEhQuyvxYZpTwo4eT',
        ],
        license: 'MIT',
      },
      'lib/openzeppelin-contracts/contracts/access/Ownable.sol': {
        keccak256: '0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673',
        urls: [
          'bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2',
          'dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y',
        ],
        license: 'MIT',
      },
      'lib/openzeppelin-contracts/contracts/access/Ownable2Step.sol': {
        keccak256: '0x5c879356795cc563440408404a52eaf672d4547949e0a5920fb17642303d9e1b',
        urls: [
          'bzz-raw://fb210cdef017f9813af368e17ea1573bc26094dd8dba8b5db8bec4cc90883d0a',
          'dweb:/ipfs/QmdixQwckiNVVWHaJD9ps5ALWsHkZGRAePkuUPw1ZhhJhM',
        ],
        license: 'MIT',
      },
      'lib/openzeppelin-contracts/contracts/utils/Context.sol': {
        keccak256: '0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7',
        urls: [
          'bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92',
          'dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3',
        ],
        license: 'MIT',
      },
      'lib/solmate/src/utils/FixedPointMathLib.sol': {
        keccak256: '0x622fcd8a49e132df5ec7651cc6ae3aaf0cf59bdcd67a9a804a1b9e2485113b7d',
        urls: [
          'bzz-raw://af77088eb606427d4c55e578984a615779c86bc30646a20f7bb27299ba390f7c',
          'dweb:/ipfs/QmZGQdhdQDtHc7gZXWrKXgA3govc74X8U63BiWhPQK3mK8',
        ],
        license: 'MIT',
      },
      'src/StorageRent.sol': {
        keccak256: '0xc92f0df7a4f6f9612d318002c930338e109b20ac9942116e4f5f690f525d7ec0',
        urls: [
          'bzz-raw://779f34dfe4645c88bb5d043a095a089d68101438eb00761eb86550d7aa92fd9e',
          'dweb:/ipfs/QmdEkRn7ULhJDSEg6ctJ25pjGqwcoG1S8kEj9AVrrYdiRY',
        ],
        license: 'UNLICENSED',
      },
    },
    version: 1,
  },
  ast: {
    absolutePath: 'src/StorageRent.sol',
    id: 40315,
    exportedSymbols: {
      AggregatorV3Interface: [45],
      FixedPointMathLib: [36643],
      Ownable2Step: [33420],
      StorageRent: [40314],
    },
    nodeType: 'SourceUnit',
    src: '39:17623:59',
    nodes: [
      {
        id: 39445,
        nodeType: 'PragmaDirective',
        src: '39:23:59',
        nodes: [],
        literals: ['solidity', '0.8', '.18'],
      },
      {
        id: 39447,
        nodeType: 'ImportDirective',
        src: '64:90:59',
        nodes: [],
        absolutePath: 'lib/chainlink-brownie-contracts/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol',
        file: 'chainlink/v0.8/interfaces/AggregatorV3Interface.sol',
        nameLocation: '-1:-1:-1',
        scope: 40315,
        sourceUnit: 46,
        symbolAliases: [
          {
            foreign: {
              id: 39446,
              name: 'AggregatorV3Interface',
              nodeType: 'Identifier',
              overloadedDeclarations: [],
              referencedDeclaration: 45,
              src: '72:21:59',
              typeDescriptions: {},
            },
            nameLocation: '-1:-1:-1',
          },
        ],
        unitAlias: '',
      },
      {
        id: 39449,
        nodeType: 'ImportDirective',
        src: '155:76:59',
        nodes: [],
        absolutePath: 'lib/openzeppelin-contracts/contracts/access/Ownable2Step.sol',
        file: 'openzeppelin/contracts/access/Ownable2Step.sol',
        nameLocation: '-1:-1:-1',
        scope: 40315,
        sourceUnit: 33421,
        symbolAliases: [
          {
            foreign: {
              id: 39448,
              name: 'Ownable2Step',
              nodeType: 'Identifier',
              overloadedDeclarations: [],
              referencedDeclaration: 33420,
              src: '163:12:59',
              typeDescriptions: {},
            },
            nameLocation: '-1:-1:-1',
          },
        ],
        unitAlias: '',
      },
      {
        id: 39451,
        nodeType: 'ImportDirective',
        src: '232:74:59',
        nodes: [],
        absolutePath: 'lib/solmate/src/utils/FixedPointMathLib.sol',
        file: 'solmate/src/utils/FixedPointMathLib.sol',
        nameLocation: '-1:-1:-1',
        scope: 40315,
        sourceUnit: 36644,
        symbolAliases: [
          {
            foreign: {
              id: 39450,
              name: 'FixedPointMathLib',
              nodeType: 'Identifier',
              overloadedDeclarations: [],
              referencedDeclaration: 36643,
              src: '240:17:59',
              typeDescriptions: {},
            },
            nameLocation: '-1:-1:-1',
          },
        ],
        unitAlias: '',
      },
      {
        id: 40314,
        nodeType: 'ContractDefinition',
        src: '308:17353:59',
        nodes: [
          {
            id: 39456,
            nodeType: 'UsingForDirective',
            src: '351:36:59',
            nodes: [],
            global: false,
            libraryName: {
              id: 39454,
              name: 'FixedPointMathLib',
              nameLocations: ['357:17:59'],
              nodeType: 'IdentifierPath',
              referencedDeclaration: 36643,
              src: '357:17:59',
            },
            typeName: {
              id: 39455,
              name: 'uint256',
              nodeType: 'ElementaryTypeName',
              src: '379:7:59',
              typeDescriptions: {
                typeIdentifier: 't_uint256',
                typeString: 'uint256',
              },
            },
          },
          {
            id: 39459,
            nodeType: 'ErrorDefinition',
            src: '666:27:59',
            nodes: [],
            documentation: {
              id: 39457,
              nodeType: 'StructuredDocumentation',
              src: '572:89:59',
              text: '@dev Revert if the caller attempts to rent storage after this contract is deprecated.',
            },
            errorSelector: 'd17e0deb',
            name: 'ContractDeprecated',
            nameLocation: '672:18:59',
            parameters: {
              id: 39458,
              nodeType: 'ParameterList',
              parameters: [],
              src: '690:2:59',
            },
          },
          {
            id: 39462,
            nodeType: 'ErrorDefinition',
            src: '782:24:59',
            nodes: [],
            documentation: {
              id: 39460,
              nodeType: 'StructuredDocumentation',
              src: '699:78:59',
              text: '@dev Revert if the caller attempts to rent more storage than is available.',
            },
            errorSelector: '2aa2ed72',
            name: 'ExceedsCapacity',
            nameLocation: '788:15:59',
            parameters: {
              id: 39461,
              nodeType: 'ParameterList',
              parameters: [],
              src: '803:2:59',
            },
          },
          {
            id: 39465,
            nodeType: 'ErrorDefinition',
            src: '875:22:59',
            nodes: [],
            documentation: {
              id: 39463,
              nodeType: 'StructuredDocumentation',
              src: '812:58:59',
              text: '@dev Revert if the caller attempts to rent zero units.',
            },
            errorSelector: '2c5211c6',
            name: 'InvalidAmount',
            nameLocation: '881:13:59',
            parameters: {
              id: 39464,
              nodeType: 'ParameterList',
              parameters: [],
              src: '894:2:59',
            },
          },
          {
            id: 39468,
            nodeType: 'ErrorDefinition',
            src: '1014:26:59',
            nodes: [],
            documentation: {
              id: 39466,
              nodeType: 'StructuredDocumentation',
              src: '903:106:59',
              text: '@dev Revert if the caller attempts a batch rent with mismatched input array lengths or an empty array.',
            },
            errorSelector: '0a514b99',
            name: 'InvalidBatchInput',
            nameLocation: '1020:17:59',
            parameters: {
              id: 39467,
              nodeType: 'ParameterList',
              parameters: [],
              src: '1037:2:59',
            },
          },
          {
            id: 39471,
            nodeType: 'ErrorDefinition',
            src: '1115:23:59',
            nodes: [],
            documentation: {
              id: 39469,
              nodeType: 'StructuredDocumentation',
              src: '1046:64:59',
              text: '@dev Revert if the caller provides the wrong payment amount.',
            },
            errorSelector: '3c6b4b28',
            name: 'InvalidPayment',
            nameLocation: '1121:14:59',
            parameters: {
              id: 39470,
              nodeType: 'ParameterList',
              parameters: [],
              src: '1135:2:59',
            },
          },
          {
            id: 39474,
            nodeType: 'ErrorDefinition',
            src: '1225:26:59',
            nodes: [],
            documentation: {
              id: 39472,
              nodeType: 'StructuredDocumentation',
              src: '1144:76:59',
              text: '@dev Revert when there are not enough funds for a native token transfer.',
            },
            errorSelector: '356680b7',
            name: 'InsufficientFunds',
            nameLocation: '1231:17:59',
            parameters: {
              id: 39473,
              nodeType: 'ParameterList',
              parameters: [],
              src: '1248:2:59',
            },
          },
          {
            id: 39477,
            nodeType: 'ErrorDefinition',
            src: '1313:19:59',
            nodes: [],
            documentation: {
              id: 39475,
              nodeType: 'StructuredDocumentation',
              src: '1257:51:59',
              text: '@dev Revert when a native token transfer fails.',
            },
            errorSelector: '3204506f',
            name: 'CallFailed',
            nameLocation: '1319:10:59',
            parameters: {
              id: 39476,
              nodeType: 'ParameterList',
              parameters: [],
              src: '1329:2:59',
            },
          },
          {
            id: 39480,
            nodeType: 'ErrorDefinition',
            src: '1397:20:59',
            nodes: [],
            documentation: {
              id: 39478,
              nodeType: 'StructuredDocumentation',
              src: '1338:54:59',
              text: '@dev Revert if a data feed returns a stale answer.',
            },
            errorSelector: '704e0c48',
            name: 'StaleAnswer',
            nameLocation: '1403:11:59',
            parameters: {
              id: 39479,
              nodeType: 'ParameterList',
              parameters: [],
              src: '1414:2:59',
            },
          },
          {
            id: 39483,
            nodeType: 'ErrorDefinition',
            src: '1517:24:59',
            nodes: [],
            documentation: {
              id: 39481,
              nodeType: 'StructuredDocumentation',
              src: '1423:89:59',
              text: '@dev Revert if the data feed round is incomplete and has not yet generated an answer.',
            },
            errorSelector: '8ad52bdd',
            name: 'IncompleteRound',
            nameLocation: '1523:15:59',
            parameters: {
              id: 39482,
              nodeType: 'ParameterList',
              parameters: [],
              src: '1538:2:59',
            },
          },
          {
            id: 39486,
            nodeType: 'ErrorDefinition',
            src: '1619:21:59',
            nodes: [],
            documentation: {
              id: 39484,
              nodeType: 'StructuredDocumentation',
              src: '1547:67:59',
              text: '@dev Revert if the price feed returns a zero or negative price.',
            },
            errorSelector: '00bfc921',
            name: 'InvalidPrice',
            nameLocation: '1625:12:59',
            parameters: {
              id: 39485,
              nodeType: 'ParameterList',
              parameters: [],
              src: '1637:2:59',
            },
          },
          {
            id: 39489,
            nodeType: 'ErrorDefinition',
            src: '1741:22:59',
            nodes: [],
            documentation: {
              id: 39487,
              nodeType: 'StructuredDocumentation',
              src: '1646:90:59',
              text: '@dev Revert if the sequencer uptime feed detects that the L2 sequencer is unavailable.',
            },
            errorSelector: '032b3d00',
            name: 'SequencerDown',
            nameLocation: '1747:13:59',
            parameters: {
              id: 39488,
              nodeType: 'ParameterList',
              parameters: [],
              src: '1760:2:59',
            },
          },
          {
            id: 39492,
            nodeType: 'ErrorDefinition',
            src: '1867:27:59',
            nodes: [],
            documentation: {
              id: 39490,
              nodeType: 'StructuredDocumentation',
              src: '1769:93:59',
              text: '@dev Revert if the L2 sequencer restarted less than L2_DOWNTIME_GRACE_PERIOD seconds ago.',
            },
            errorSelector: 'd15f73b5',
            name: 'GracePeriodNotOver',
            nameLocation: '1873:18:59',
            parameters: {
              id: 39491,
              nodeType: 'ParameterList',
              parameters: [],
              src: '1891:2:59',
            },
          },
          {
            id: 39495,
            nodeType: 'ErrorDefinition',
            src: '1975:36:59',
            nodes: [],
            documentation: {
              id: 39493,
              nodeType: 'StructuredDocumentation',
              src: '1900:70:59',
              text: '@dev Revert if the depreaction timestamp parameter is in the past.',
            },
            errorSelector: '4d9c3149',
            name: 'InvalidDeprecationTimestamp',
            nameLocation: '1981:27:59',
            parameters: {
              id: 39494,
              nodeType: 'ParameterList',
              parameters: [],
              src: '2008:2:59',
            },
          },
          {
            id: 39504,
            nodeType: 'EventDefinition',
            src: '2501:70:59',
            nodes: [],
            anonymous: false,
            documentation: {
              id: 39496,
              nodeType: 'StructuredDocumentation',
              src: '2196:300:59',
              text: " @dev Emit an event when caller pays rent for an fid's storage.\n @param payer     Address of the account paying the storage rent.\n @param fid       The fid that will receive the storage allocation.\n @param units     The number of storage units being rented.",
            },
            eventSelector: 'aabd75b90fb7114eb9587a54f00ce5ebe8cb4a70627f3a6c26e506ffd771fe2f',
            name: 'Rent',
            nameLocation: '2507:4:59',
            parameters: {
              id: 39503,
              nodeType: 'ParameterList',
              parameters: [
                {
                  constant: false,
                  id: 39498,
                  indexed: true,
                  mutability: 'mutable',
                  name: 'payer',
                  nameLocation: '2528:5:59',
                  nodeType: 'VariableDeclaration',
                  scope: 39504,
                  src: '2512:21:59',
                  stateVariable: false,
                  storageLocation: 'default',
                  typeDescriptions: {
                    typeIdentifier: 't_address',
                    typeString: 'address',
                  },
                  typeName: {
                    id: 39497,
                    name: 'address',
                    nodeType: 'ElementaryTypeName',
                    src: '2512:7:59',
                    stateMutability: 'nonpayable',
                    typeDescriptions: {
                      typeIdentifier: 't_address',
                      typeString: 'address',
                    },
                  },
                  visibility: 'internal',
                },
                {
                  constant: false,
                  id: 39500,
                  indexed: true,
                  mutability: 'mutable',
                  name: 'fid',
                  nameLocation: '2551:3:59',
                  nodeType: 'VariableDeclaration',
                  scope: 39504,
                  src: '2535:19:59',
                  stateVariable: false,
                  storageLocation: 'default',
                  typeDescriptions: {
                    typeIdentifier: 't_uint256',
                    typeString: 'uint256',
                  },
                  typeName: {
                    id: 39499,
                    name: 'uint256',
                    nodeType: 'ElementaryTypeName',
                    src: '2535:7:59',
                    typeDescriptions: {
                      typeIdentifier: 't_uint256',
                      typeString: 'uint256',
                    },
                  },
                  visibility: 'internal',
                },
                {
                  constant: false,
                  id: 39502,
                  indexed: false,
                  mutability: 'mutable',
                  name: 'units',
                  nameLocation: '2564:5:59',
                  nodeType: 'VariableDeclaration',
                  scope: 39504,
                  src: '2556:13:59',
                  stateVariable: false,
                  storageLocation: 'default',
                  typeDescriptions: {
                    typeIdentifier: 't_uint256',
                    typeString: 'uint256',
                  },
                  typeName: {
                    id: 39501,
                    name: 'uint256',
                    nodeType: 'ElementaryTypeName',
                    src: '2556:7:59',
                    typeDescriptions: {
                      typeIdentifier: 't_uint256',
                      typeString: 'uint256',
                    },
                  },
                  visibility: 'internal',
                },
              ],
              src: '2511:59:59',
            },
          },
          {
            id: 39511,
            nodeType: 'EventDefinition',
            src: '2851:51:59',
            nodes: [],
            anonymous: false,
            documentation: {
              id: 39505,
              nodeType: 'StructuredDocumentation',
              src: '2577:269:59',
              text: ' @dev Emit an event when an owner changes the price of storage units.\n @param oldPrice The previous unit price in USD. Fixed point value with 8 decimals.\n @param newPrice The new unit price in USD. Fixed point value with 8 decimals.',
            },
            eventSelector: 'f9317dc3bc6dda0e00e43855c2c30847aeafb8dcea9d2ce86e9ce7a83d549f01',
            name: 'SetPrice',
            nameLocation: '2857:8:59',
            parameters: {
              id: 39510,
              nodeType: 'ParameterList',
              parameters: [
                {
                  constant: false,
                  id: 39507,
                  indexed: false,
                  mutability: 'mutable',
                  name: 'oldPrice',
                  nameLocation: '2874:8:59',
                  nodeType: 'VariableDeclaration',
                  scope: 39511,
                  src: '2866:16:59',
                  stateVariable: false,
                  storageLocation: 'default',
                  typeDescriptions: {
                    typeIdentifier: 't_uint256',
                    typeString: 'uint256',
                  },
                  typeName: {
                    id: 39506,
                    name: 'uint256',
                    nodeType: 'ElementaryTypeName',
                    src: '2866:7:59',
                    typeDescriptions: {
                      typeIdentifier: 't_uint256',
                      typeString: 'uint256',
                    },
                  },
                  visibility: 'internal',
                },
                {
                  constant: false,
                  id: 39509,
                  indexed: false,
                  mutability: 'mutable',
                  name: 'newPrice',
                  nameLocation: '2892:8:59',
                  nodeType: 'VariableDeclaration',
                  scope: 39511,
                  src: '2884:16:59',
                  stateVariable: false,
                  storageLocation: 'default',
                  typeDescriptions: {
                    typeIdentifier: 't_uint256',
                    typeString: 'uint256',
                  },
                  typeName: {
                    id: 39508,
                    name: 'uint256',
                    nodeType: 'ElementaryTypeName',
                    src: '2884:7:59',
                    typeDescriptions: {
                      typeIdentifier: 't_uint256',
                      typeString: 'uint256',
                    },
                  },
                  visibility: 'internal',
                },
              ],
              src: '2865:36:59',
            },
          },
          {
            id: 39518,
            nodeType: 'EventDefinition',
            src: '3111:50:59',
            nodes: [],
            anonymous: false,
            documentation: {
              id: 39512,
              nodeType: 'StructuredDocumentation',
              src: '2908:198:59',
              text: ' @dev Emit an event when an owner changes the maximum supply of storage units.\n @param oldMax The previous maximum amount.\n @param newMax The new maximum amount.',
            },
            eventSelector: 'a75b962aa425276de62bec76aeb43cacc12d2b132498ae1115500c23dc35fbe4',
            name: 'SetMaxUnits',
            nameLocation: '3117:11:59',
            parameters: {
              id: 39517,
              nodeType: 'ParameterList',
              parameters: [
                {
                  constant: false,
                  id: 39514,
                  indexed: false,
                  mutability: 'mutable',
                  name: 'oldMax',
                  nameLocation: '3137:6:59',
                  nodeType: 'VariableDeclaration',
                  scope: 39518,
                  src: '3129:14:59',
                  stateVariable: false,
                  storageLocation: 'default',
                  typeDescriptions: {
                    typeIdentifier: 't_uint256',
                    typeString: 'uint256',
                  },
                  typeName: {
                    id: 39513,
                    name: 'uint256',
                    nodeType: 'ElementaryTypeName',
                    src: '3129:7:59',
                    typeDescriptions: {
                      typeIdentifier: 't_uint256',
                      typeString: 'uint256',
                    },
                  },
                  visibility: 'internal',
                },
                {
                  constant: false,
                  id: 39516,
                  indexed: false,
                  mutability: 'mutable',
                  name: 'newMax',
                  nameLocation: '3153:6:59',
                  nodeType: 'VariableDeclaration',
                  scope: 39518,
                  src: '3145:14:59',
                  stateVariable: false,
                  storageLocation: 'default',
                  typeDescriptions: {
                    typeIdentifier: 't_uint256',
                    typeString: 'uint256',
                  },
                  typeName: {
                    id: 39515,
                    name: 'uint256',
                    nodeType: 'ElementaryTypeName',
                    src: '3145:7:59',
                    typeDescriptions: {
                      typeIdentifier: 't_uint256',
                      typeString: 'uint256',
                    },
                  },
                  visibility: 'internal',
                },
              ],
              src: '3128:32:59',
            },
          },
          {
            id: 39525,
            nodeType: 'EventDefinition',
            src: '3383:74:59',
            nodes: [],
            anonymous: false,
            documentation: {
              id: 39519,
              nodeType: 'StructuredDocumentation',
              src: '3167:211:59',
              text: ' @dev Emit an event when an owner changes the deprecationTimestamp.\n @param oldTimestamp The previous deprecationTimestamp.\n @param newTimestamp The new deprecationTimestamp.',
            },
            eventSelector: '27e030644fe653b53e98fbd0ca5004392da63705b0806619a43324647715bc6b',
            name: 'SetDeprecationTimestamp',
            nameLocation: '3389:23:59',
            parameters: {
              id: 39524,
              nodeType: 'ParameterList',
              parameters: [
                {
                  constant: false,
                  id: 39521,
                  indexed: false,
                  mutability: 'mutable',
                  name: 'oldTimestamp',
                  nameLocation: '3421:12:59',
                  nodeType: 'VariableDeclaration',
                  scope: 39525,
                  src: '3413:20:59',
                  stateVariable: false,
                  storageLocation: 'default',
                  typeDescriptions: {
                    typeIdentifier: 't_uint256',
                    typeString: 'uint256',
                  },
                  typeName: {
                    id: 39520,
                    name: 'uint256',
                    nodeType: 'ElementaryTypeName',
                    src: '3413:7:59',
                    typeDescriptions: {
                      typeIdentifier: 't_uint256',
                      typeString: 'uint256',
                    },
                  },
                  visibility: 'internal',
                },
                {
                  constant: false,
                  id: 39523,
                  indexed: false,
                  mutability: 'mutable',
                  name: 'newTimestamp',
                  nameLocation: '3443:12:59',
                  nodeType: 'VariableDeclaration',
                  scope: 39525,
                  src: '3435:20:59',
                  stateVariable: false,
                  storageLocation: 'default',
                  typeDescriptions: {
                    typeIdentifier: 't_uint256',
                    typeString: 'uint256',
                  },
                  typeName: {
                    id: 39522,
                    name: 'uint256',
                    nodeType: 'ElementaryTypeName',
                    src: '3435:7:59',
                    typeDescriptions: {
                      typeIdentifier: 't_uint256',
                      typeString: 'uint256',
                    },
                  },
                  visibility: 'internal',
                },
              ],
              src: '3412:44:59',
            },
          },
          {
            id: 39532,
            nodeType: 'EventDefinition',
            src: '3683:65:59',
            nodes: [],
            anonymous: false,
            documentation: {
              id: 39526,
              nodeType: 'StructuredDocumentation',
              src: '3463:215:59',
              text: ' @dev Emit an event when an owner changes the priceFeedCacheDuration.\n @param oldDuration The previous priceFeedCacheDuration.\n @param newDuration The new priceFeedCacheDuration.',
            },
            eventSelector: 'ba21d40bb8770d5fa02e1971806473e12480167182e829c0fc86addb21e2b77d',
            name: 'SetCacheDuration',
            nameLocation: '3689:16:59',
            parameters: {
              id: 39531,
              nodeType: 'ParameterList',
              parameters: [
                {
                  constant: false,
                  id: 39528,
                  indexed: false,
                  mutability: 'mutable',
                  name: 'oldDuration',
                  nameLocation: '3714:11:59',
                  nodeType: 'VariableDeclaration',
                  scope: 39532,
                  src: '3706:19:59',
                  stateVariable: false,
                  storageLocation: 'default',
                  typeDescriptions: {
                    typeIdentifier: 't_uint256',
                    typeString: 'uint256',
                  },
                  typeName: {
                    id: 39527,
                    name: 'uint256',
                    nodeType: 'ElementaryTypeName',
                    src: '3706:7:59',
                    typeDescriptions: {
                      typeIdentifier: 't_uint256',
                      typeString: 'uint256',
                    },
                  },
                  visibility: 'internal',
                },
                {
                  constant: false,
                  id: 39530,
                  indexed: false,
                  mutability: 'mutable',
                  name: 'newDuration',
                  nameLocation: '3735:11:59',
                  nodeType: 'VariableDeclaration',
                  scope: 39532,
                  src: '3727:19:59',
                  stateVariable: false,
                  storageLocation: 'default',
                  typeDescriptions: {
                    typeIdentifier: 't_uint256',
                    typeString: 'uint256',
                  },
                  typeName: {
                    id: 39529,
                    name: 'uint256',
                    nodeType: 'ElementaryTypeName',
                    src: '3727:7:59',
                    typeDescriptions: {
                      typeIdentifier: 't_uint256',
                      typeString: 'uint256',
                    },
                  },
                  visibility: 'internal',
                },
              ],
              src: '3705:42:59',
            },
          },
          {
            id: 39539,
            nodeType: 'EventDefinition',
            src: '3967:59:59',
            nodes: [],
            anonymous: false,
            documentation: {
              id: 39533,
              nodeType: 'StructuredDocumentation',
              src: '3754:208:59',
              text: ' @dev Emit an event when an owner changes the uptimeFeedGracePeriod.\n @param oldPeriod The previous uptimeFeedGracePeriod.\n @param newPeriod The new uptimeFeedGracePeriod.',
            },
            eventSelector: '31c130faaf861e1e61ca087cc48c410d9099885350e9beb4dad1175cb77a6545',
            name: 'SetGracePeriod',
            nameLocation: '3973:14:59',
            parameters: {
              id: 39538,
              nodeType: 'ParameterList',
              parameters: [
                {
                  constant: false,
                  id: 39535,
                  indexed: false,
                  mutability: 'mutable',
                  name: 'oldPeriod',
                  nameLocation: '3996:9:59',
                  nodeType: 'VariableDeclaration',
                  scope: 39539,
                  src: '3988:17:59',
                  stateVariable: false,
                  storageLocation: 'default',
                  typeDescriptions: {
                    typeIdentifier: 't_uint256',
                    typeString: 'uint256',
                  },
                  typeName: {
                    id: 39534,
                    name: 'uint256',
                    nodeType: 'ElementaryTypeName',
                    src: '3988:7:59',
                    typeDescriptions: {
                      typeIdentifier: 't_uint256',
                      typeString: 'uint256',
                    },
                  },
                  visibility: 'internal',
                },
                {
                  constant: false,
                  id: 39537,
                  indexed: false,
                  mutability: 'mutable',
                  name: 'newPeriod',
                  nameLocation: '4015:9:59',
                  nodeType: 'VariableDeclaration',
                  scope: 39539,
                  src: '4007:17:59',
                  stateVariable: false,
                  storageLocation: 'default',
                  typeDescriptions: {
                    typeIdentifier: 't_uint256',
                    typeString: 'uint256',
                  },
                  typeName: {
                    id: 39536,
                    name: 'uint256',
                    nodeType: 'ElementaryTypeName',
                    src: '4007:7:59',
                    typeDescriptions: {
                      typeIdentifier: 't_uint256',
                      typeString: 'uint256',
                    },
                  },
                  visibility: 'internal',
                },
              ],
              src: '3987:38:59',
            },
          },
          {
            id: 39546,
            nodeType: 'EventDefinition',
            src: '4236:51:59',
            nodes: [],
            anonymous: false,
            documentation: {
              id: 39540,
              nodeType: 'StructuredDocumentation',
              src: '4032:199:59',
              text: ' @dev Emit an event when an owner makes a withdrawal from the contract balance.\n @param to     Address of recipient.\n @param amount The amount of ether withdrawn.',
            },
            eventSelector: '884edad9ce6fa2440d8a54cc123490eb96d2768479d49ff9c7366125a9424364',
            name: 'Withdraw',
            nameLocation: '4242:8:59',
            parameters: {
              id: 39545,
              nodeType: 'ParameterList',
              parameters: [
                {
                  constant: false,
                  id: 39542,
                  indexed: true,
                  mutability: 'mutable',
                  name: 'to',
                  nameLocation: '4267:2:59',
                  nodeType: 'VariableDeclaration',
                  scope: 39546,
                  src: '4251:18:59',
                  stateVariable: false,
                  storageLocation: 'default',
                  typeDescriptions: {
                    typeIdentifier: 't_address',
                    typeString: 'address',
                  },
                  typeName: {
                    id: 39541,
                    name: 'address',
                    nodeType: 'ElementaryTypeName',
                    src: '4251:7:59',
                    stateMutability: 'nonpayable',
                    typeDescriptions: {
                      typeIdentifier: 't_address',
                      typeString: 'address',
                    },
                  },
                  visibility: 'internal',
                },
                {
                  constant: false,
                  id: 39544,
                  indexed: false,
                  mutability: 'mutable',
                  name: 'amount',
                  nameLocation: '4279:6:59',
                  nodeType: 'VariableDeclaration',
                  scope: 39546,
                  src: '4271:14:59',
                  stateVariable: false,
                  storageLocation: 'default',
                  typeDescriptions: {
                    typeIdentifier: 't_uint256',
                    typeString: 'uint256',
                  },
                  typeName: {
                    id: 39543,
                    name: 'uint256',
                    nodeType: 'ElementaryTypeName',
                    src: '4271:7:59',
                    typeDescriptions: {
                      typeIdentifier: 't_uint256',
                      typeString: 'uint256',
                    },
                  },
                  visibility: 'internal',
                },
              ],
              src: '4250:36:59',
            },
          },
          {
            id: 39550,
            nodeType: 'VariableDeclaration',
            src: '4563:45:59',
            nodes: [],
            constant: true,
            documentation: {
              id: 39547,
              nodeType: 'StructuredDocumentation',
              src: '4474:84:59',
              text: ' @dev Contract version. Follows Farcaster protocol version scheme.',
            },
            functionSelector: 'ffa1ad74',
            mutability: 'constant',
            name: 'VERSION',
            nameLocation: '4586:7:59',
            scope: 40314,
            stateVariable: true,
            storageLocation: 'default',
            typeDescriptions: {
              typeIdentifier: 't_string_memory_ptr',
              typeString: 'string',
            },
            typeName: {
              id: 39548,
              name: 'string',
              nodeType: 'ElementaryTypeName',
              src: '4563:6:59',
              typeDescriptions: {
                typeIdentifier: 't_string_storage_ptr',
                typeString: 'string',
              },
            },
            value: {
              hexValue: '323032332e30362e3031',
              id: 39549,
              isConstant: false,
              isLValue: false,
              isPure: true,
              kind: 'string',
              lValueRequested: false,
              nodeType: 'Literal',
              src: '4596:12:59',
              typeDescriptions: {
                typeIdentifier: 't_stringliteral_e3e38fd6e48862e01546aef56ce8f4f9084a1dec0c1407e902b42f5c8fdee95d',
                typeString: 'literal_string "2023.06.01"',
              },
              value: '2023.06.01',
            },
            visibility: 'public',
          },
          {
            id: 39554,
            nodeType: 'VariableDeclaration',
            src: '4855:48:59',
            nodes: [],
            constant: false,
            documentation: {
              id: 39551,
              nodeType: 'StructuredDocumentation',
              src: '4797:53:59',
              text: ' @dev Chainlink ETH/USD price feed.',
            },
            functionSelector: '741bef1a',
            mutability: 'immutable',
            name: 'priceFeed',
            nameLocation: '4894:9:59',
            scope: 40314,
            stateVariable: true,
            storageLocation: 'default',
            typeDescriptions: {
              typeIdentifier: 't_contract$_AggregatorV3Interface_$45',
              typeString: 'contract AggregatorV3Interface',
            },
            typeName: {
              id: 39553,
              nodeType: 'UserDefinedTypeName',
              pathNode: {
                id: 39552,
                name: 'AggregatorV3Interface',
                nameLocations: ['4855:21:59'],
                nodeType: 'IdentifierPath',
                referencedDeclaration: 45,
                src: '4855:21:59',
              },
              referencedDeclaration: 45,
              src: '4855:21:59',
              typeDescriptions: {
                typeIdentifier: 't_contract$_AggregatorV3Interface_$45',
                typeString: 'contract AggregatorV3Interface',
              },
            },
            visibility: 'public',
          },
          {
            id: 39558,
            nodeType: 'VariableDeclaration',
            src: '4974:49:59',
            nodes: [],
            constant: false,
            documentation: {
              id: 39555,
              nodeType: 'StructuredDocumentation',
              src: '4910:59:59',
              text: ' @dev Chainlink L2 sequencer uptime feed.',
            },
            functionSelector: '3b56125c',
            mutability: 'immutable',
            name: 'uptimeFeed',
            nameLocation: '5013:10:59',
            scope: 40314,
            stateVariable: true,
            storageLocation: 'default',
            typeDescriptions: {
              typeIdentifier: 't_contract$_AggregatorV3Interface_$45',
              typeString: 'contract AggregatorV3Interface',
            },
            typeName: {
              id: 39557,
              nodeType: 'UserDefinedTypeName',
              pathNode: {
                id: 39556,
                name: 'AggregatorV3Interface',
                nameLocations: ['4974:21:59'],
                nodeType: 'IdentifierPath',
                referencedDeclaration: 45,
                src: '4974:21:59',
              },
              referencedDeclaration: 45,
              src: '4974:21:59',
              typeDescriptions: {
                typeIdentifier: 't_contract$_AggregatorV3Interface_$45',
                typeString: 'contract AggregatorV3Interface',
              },
            },
            visibility: 'public',
          },
          {
            id: 39561,
            nodeType: 'VariableDeclaration',
            src: '5343:35:59',
            nodes: [],
            constant: false,
            documentation: {
              id: 39559,
              nodeType: 'StructuredDocumentation',
              src: '5210:128:59',
              text: ' @dev Block timestamp at which this contract will no longer accept storage rent payments. Changeable by owner.',
            },
            functionSelector: '2c39d670',
            mutability: 'mutable',
            name: 'deprecationTimestamp',
            nameLocation: '5358:20:59',
            scope: 40314,
            stateVariable: true,
            storageLocation: 'default',
            typeDescriptions: {
              typeIdentifier: 't_uint256',
              typeString: 'uint256',
            },
            typeName: {
              id: 39560,
              name: 'uint256',
              nodeType: 'ElementaryTypeName',
              src: '5343:7:59',
              typeDescriptions: {
                typeIdentifier: 't_uint256',
                typeString: 'uint256',
              },
            },
            visibility: 'public',
          },
          {
            id: 39564,
            nodeType: 'VariableDeclaration',
            src: '5519:27:59',
            nodes: [],
            constant: false,
            documentation: {
              id: 39562,
              nodeType: 'StructuredDocumentation',
              src: '5385:129:59',
              text: ' @dev Price per storage unit in USD. Fixed point value with 8 decimals, e.g. 5e8 = $5 USD. Changeable by owner.',
            },
            functionSelector: '40df0ba0',
            mutability: 'mutable',
            name: 'usdUnitPrice',
            nameLocation: '5534:12:59',
            scope: 40314,
            stateVariable: true,
            storageLocation: 'default',
            typeDescriptions: {
              typeIdentifier: 't_uint256',
              typeString: 'uint256',
            },
            typeName: {
              id: 39563,
              name: 'uint256',
              nodeType: 'ElementaryTypeName',
              src: '5519:7:59',
              typeDescriptions: {
                typeIdentifier: 't_uint256',
                typeString: 'uint256',
              },
            },
            visibility: 'public',
          },
          {
            id: 39567,
            nodeType: 'VariableDeclaration',
            src: '5635:23:59',
            nodes: [],
            constant: false,
            documentation: {
              id: 39565,
              nodeType: 'StructuredDocumentation',
              src: '5553:77:59',
              text: ' @dev Total capacity of storage units. Changeable by owner.',
            },
            functionSelector: '06517a29',
            mutability: 'mutable',
            name: 'maxUnits',
            nameLocation: '5650:8:59',
            scope: 40314,
            stateVariable: true,
            storageLocation: 'default',
            typeDescriptions: {
              typeIdentifier: 't_uint256',
              typeString: 'uint256',
            },
            typeName: {
              id: 39566,
              name: 'uint256',
              nodeType: 'ElementaryTypeName',
              src: '5635:7:59',
              typeDescriptions: {
                typeIdentifier: 't_uint256',
                typeString: 'uint256',
              },
            },
            visibility: 'public',
          },
          {
            id: 39570,
            nodeType: 'VariableDeclaration',
            src: '5760:37:59',
            nodes: [],
            constant: false,
            documentation: {
              id: 39568,
              nodeType: 'StructuredDocumentation',
              src: '5665:90:59',
              text: ' @dev Duration to cache ethUsdPrice before updating from the price feed.',
            },
            functionSelector: 'c2e46fe0',
            mutability: 'mutable',
            name: 'priceFeedCacheDuration',
            nameLocation: '5775:22:59',
            scope: 40314,
            stateVariable: true,
            storageLocation: 'default',
            typeDescriptions: {
              typeIdentifier: 't_uint256',
              typeString: 'uint256',
            },
            typeName: {
              id: 39569,
              name: 'uint256',
              nodeType: 'ElementaryTypeName',
              src: '5760:7:59',
              typeDescriptions: {
                typeIdentifier: 't_uint256',
                typeString: 'uint256',
              },
            },
            visibility: 'public',
          },
          {
            id: 39573,
            nodeType: 'VariableDeclaration',
            src: '5986:36:59',
            nodes: [],
            constant: false,
            documentation: {
              id: 39571,
              nodeType: 'StructuredDocumentation',
              src: '5804:177:59',
              text: ' @dev Period in seconds to wait after the L2 sequencer restarts before resuming rentals.\n      See: https://docs.chain.link/data-feeds/l2-sequencer-feeds',
            },
            functionSelector: '7078cc1c',
            mutability: 'mutable',
            name: 'uptimeFeedGracePeriod',
            nameLocation: '6001:21:59',
            scope: 40314,
            stateVariable: true,
            storageLocation: 'default',
            typeDescriptions: {
              typeIdentifier: 't_uint256',
              typeString: 'uint256',
            },
            typeName: {
              id: 39572,
              name: 'uint256',
              nodeType: 'ElementaryTypeName',
              src: '5986:7:59',
              typeDescriptions: {
                typeIdentifier: 't_uint256',
                typeString: 'uint256',
              },
            },
            visibility: 'public',
          },
          {
            id: 39576,
            nodeType: 'VariableDeclaration',
            src: '6289:26:59',
            nodes: [],
            constant: false,
            documentation: {
              id: 39574,
              nodeType: 'StructuredDocumentation',
              src: '6208:76:59',
              text: ' @dev Total number of storage units that have been rented.',
            },
            functionSelector: '2751c4fd',
            mutability: 'mutable',
            name: 'rentedUnits',
            nameLocation: '6304:11:59',
            scope: 40314,
            stateVariable: true,
            storageLocation: 'default',
            typeDescriptions: {
              typeIdentifier: 't_uint256',
              typeString: 'uint256',
            },
            typeName: {
              id: 39575,
              name: 'uint256',
              nodeType: 'ElementaryTypeName',
              src: '6289:7:59',
              typeDescriptions: {
                typeIdentifier: 't_uint256',
                typeString: 'uint256',
              },
            },
            visibility: 'public',
          },
          {
            id: 39579,
            nodeType: 'VariableDeclaration',
            src: '6382:26:59',
            nodes: [],
            constant: false,
            documentation: {
              id: 39577,
              nodeType: 'StructuredDocumentation',
              src: '6322:55:59',
              text: ' @dev Cached Chainlink ETH/USD price.',
            },
            functionSelector: '9478ab8c',
            mutability: 'mutable',
            name: 'ethUsdPrice',
            nameLocation: '6397:11:59',
            scope: 40314,
            stateVariable: true,
            storageLocation: 'default',
            typeDescriptions: {
              typeIdentifier: 't_uint256',
              typeString: 'uint256',
            },
            typeName: {
              id: 39578,
              name: 'uint256',
              nodeType: 'ElementaryTypeName',
              src: '6382:7:59',
              typeDescriptions: {
                typeIdentifier: 't_uint256',
                typeString: 'uint256',
              },
            },
            visibility: 'public',
          },
          {
            id: 39582,
            nodeType: 'VariableDeclaration',
            src: '6488:34:59',
            nodes: [],
            constant: false,
            documentation: {
              id: 39580,
              nodeType: 'StructuredDocumentation',
              src: '6415:68:59',
              text: ' @dev Timestamp of the last update to ethUsdPrice.',
            },
            functionSelector: '128d34ac',
            mutability: 'mutable',
            name: 'lastPriceFeedUpdate',
            nameLocation: '6503:19:59',
            scope: 40314,
            stateVariable: true,
            storageLocation: 'default',
            typeDescriptions: {
              typeIdentifier: 't_uint256',
              typeString: 'uint256',
            },
            typeName: {
              id: 39581,
              name: 'uint256',
              nodeType: 'ElementaryTypeName',
              src: '6488:7:59',
              typeDescriptions: {
                typeIdentifier: 't_uint256',
                typeString: 'uint256',
              },
            },
            visibility: 'public',
          },
          {
            id: 39639,
            nodeType: 'FunctionDefinition',
            src: '7416:713:59',
            nodes: [],
            body: {
              id: 39638,
              nodeType: 'Block',
              src: '7744:385:59',
              nodes: [],
              statements: [
                {
                  expression: {
                    id: 39606,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    lValueRequested: false,
                    leftHandSide: {
                      id: 39604,
                      name: 'priceFeed',
                      nodeType: 'Identifier',
                      overloadedDeclarations: [],
                      referencedDeclaration: 39554,
                      src: '7754:9:59',
                      typeDescriptions: {
                        typeIdentifier: 't_contract$_AggregatorV3Interface_$45',
                        typeString: 'contract AggregatorV3Interface',
                      },
                    },
                    nodeType: 'Assignment',
                    operator: '=',
                    rightHandSide: {
                      id: 39605,
                      name: '_priceFeed',
                      nodeType: 'Identifier',
                      overloadedDeclarations: [],
                      referencedDeclaration: 39586,
                      src: '7766:10:59',
                      typeDescriptions: {
                        typeIdentifier: 't_contract$_AggregatorV3Interface_$45',
                        typeString: 'contract AggregatorV3Interface',
                      },
                    },
                    src: '7754:22:59',
                    typeDescriptions: {
                      typeIdentifier: 't_contract$_AggregatorV3Interface_$45',
                      typeString: 'contract AggregatorV3Interface',
                    },
                  },
                  id: 39607,
                  nodeType: 'ExpressionStatement',
                  src: '7754:22:59',
                },
                {
                  expression: {
                    id: 39610,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    lValueRequested: false,
                    leftHandSide: {
                      id: 39608,
                      name: 'uptimeFeed',
                      nodeType: 'Identifier',
                      overloadedDeclarations: [],
                      referencedDeclaration: 39558,
                      src: '7786:10:59',
                      typeDescriptions: {
                        typeIdentifier: 't_contract$_AggregatorV3Interface_$45',
                        typeString: 'contract AggregatorV3Interface',
                      },
                    },
                    nodeType: 'Assignment',
                    operator: '=',
                    rightHandSide: {
                      id: 39609,
                      name: '_uptimeFeed',
                      nodeType: 'Identifier',
                      overloadedDeclarations: [],
                      referencedDeclaration: 39589,
                      src: '7799:11:59',
                      typeDescriptions: {
                        typeIdentifier: 't_contract$_AggregatorV3Interface_$45',
                        typeString: 'contract AggregatorV3Interface',
                      },
                    },
                    src: '7786:24:59',
                    typeDescriptions: {
                      typeIdentifier: 't_contract$_AggregatorV3Interface_$45',
                      typeString: 'contract AggregatorV3Interface',
                    },
                  },
                  id: 39611,
                  nodeType: 'ExpressionStatement',
                  src: '7786:24:59',
                },
                {
                  expression: {
                    id: 39617,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    lValueRequested: false,
                    leftHandSide: {
                      id: 39612,
                      name: 'deprecationTimestamp',
                      nodeType: 'Identifier',
                      overloadedDeclarations: [],
                      referencedDeclaration: 39561,
                      src: '7820:20:59',
                      typeDescriptions: {
                        typeIdentifier: 't_uint256',
                        typeString: 'uint256',
                      },
                    },
                    nodeType: 'Assignment',
                    operator: '=',
                    rightHandSide: {
                      commonType: {
                        typeIdentifier: 't_uint256',
                        typeString: 'uint256',
                      },
                      id: 39616,
                      isConstant: false,
                      isLValue: false,
                      isPure: false,
                      lValueRequested: false,
                      leftExpression: {
                        expression: {
                          id: 39613,
                          name: 'block',
                          nodeType: 'Identifier',
                          overloadedDeclarations: [],
                          referencedDeclaration: -4,
                          src: '7843:5:59',
                          typeDescriptions: {
                            typeIdentifier: 't_magic_block',
                            typeString: 'block',
                          },
                        },
                        id: 39614,
                        isConstant: false,
                        isLValue: false,
                        isPure: false,
                        lValueRequested: false,
                        memberLocation: '7849:9:59',
                        memberName: 'timestamp',
                        nodeType: 'MemberAccess',
                        src: '7843:15:59',
                        typeDescriptions: {
                          typeIdentifier: 't_uint256',
                          typeString: 'uint256',
                        },
                      },
                      nodeType: 'BinaryOperation',
                      operator: '+',
                      rightExpression: {
                        id: 39615,
                        name: '_initialDeprecationPeriod',
                        nodeType: 'Identifier',
                        overloadedDeclarations: [],
                        referencedDeclaration: 39591,
                        src: '7861:25:59',
                        typeDescriptions: {
                          typeIdentifier: 't_uint256',
                          typeString: 'uint256',
                        },
                      },
                      src: '7843:43:59',
                      typeDescriptions: {
                        typeIdentifier: 't_uint256',
                        typeString: 'uint256',
                      },
                    },
                    src: '7820:66:59',
                    typeDescriptions: {
                      typeIdentifier: 't_uint256',
                      typeString: 'uint256',
                    },
                  },
                  id: 39618,
                  nodeType: 'ExpressionStatement',
                  src: '7820:66:59',
                },
                {
                  expression: {
                    id: 39621,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    lValueRequested: false,
                    leftHandSide: {
                      id: 39619,
                      name: 'usdUnitPrice',
                      nodeType: 'Identifier',
                      overloadedDeclarations: [],
                      referencedDeclaration: 39564,
                      src: '7896:12:59',
                      typeDescriptions: {
                        typeIdentifier: 't_uint256',
                        typeString: 'uint256',
                      },
                    },
                    nodeType: 'Assignment',
                    operator: '=',
                    rightHandSide: {
                      id: 39620,
                      name: '_initialUsdUnitPrice',
                      nodeType: 'Identifier',
                      overloadedDeclarations: [],
                      referencedDeclaration: 39593,
                      src: '7911:20:59',
                      typeDescriptions: {
                        typeIdentifier: 't_uint256',
                        typeString: 'uint256',
                      },
                    },
                    src: '7896:35:59',
                    typeDescriptions: {
                      typeIdentifier: 't_uint256',
                      typeString: 'uint256',
                    },
                  },
                  id: 39622,
                  nodeType: 'ExpressionStatement',
                  src: '7896:35:59',
                },
                {
                  expression: {
                    id: 39625,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    lValueRequested: false,
                    leftHandSide: {
                      id: 39623,
                      name: 'maxUnits',
                      nodeType: 'Identifier',
                      overloadedDeclarations: [],
                      referencedDeclaration: 39567,
                      src: '7941:8:59',
                      typeDescriptions: {
                        typeIdentifier: 't_uint256',
                        typeString: 'uint256',
                      },
                    },
                    nodeType: 'Assignment',
                    operator: '=',
                    rightHandSide: {
                      id: 39624,
                      name: '_initialMaxUnits',
                      nodeType: 'Identifier',
                      overloadedDeclarations: [],
                      referencedDeclaration: 39595,
                      src: '7952:16:59',
                      typeDescriptions: {
                        typeIdentifier: 't_uint256',
                        typeString: 'uint256',
                      },
                    },
                    src: '7941:27:59',
                    typeDescriptions: {
                      typeIdentifier: 't_uint256',
                      typeString: 'uint256',
                    },
                  },
                  id: 39626,
                  nodeType: 'ExpressionStatement',
                  src: '7941:27:59',
                },
                {
                  expression: {
                    id: 39629,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    lValueRequested: false,
                    leftHandSide: {
                      id: 39627,
                      name: 'priceFeedCacheDuration',
                      nodeType: 'Identifier',
                      overloadedDeclarations: [],
                      referencedDeclaration: 39570,
                      src: '7978:22:59',
                      typeDescriptions: {
                        typeIdentifier: 't_uint256',
                        typeString: 'uint256',
                      },
                    },
                    nodeType: 'Assignment',
                    operator: '=',
                    rightHandSide: {
                      id: 39628,
                      name: '_initialPriceFeedCacheDuration',
                      nodeType: 'Identifier',
                      overloadedDeclarations: [],
                      referencedDeclaration: 39597,
                      src: '8003:30:59',
                      typeDescriptions: {
                        typeIdentifier: 't_uint256',
                        typeString: 'uint256',
                      },
                    },
                    src: '7978:55:59',
                    typeDescriptions: {
                      typeIdentifier: 't_uint256',
                      typeString: 'uint256',
                    },
                  },
                  id: 39630,
                  nodeType: 'ExpressionStatement',
                  src: '7978:55:59',
                },
                {
                  expression: {
                    id: 39633,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    lValueRequested: false,
                    leftHandSide: {
                      id: 39631,
                      name: 'uptimeFeedGracePeriod',
                      nodeType: 'Identifier',
                      overloadedDeclarations: [],
                      referencedDeclaration: 39573,
                      src: '8043:21:59',
                      typeDescriptions: {
                        typeIdentifier: 't_uint256',
                        typeString: 'uint256',
                      },
                    },
                    nodeType: 'Assignment',
                    operator: '=',
                    rightHandSide: {
                      id: 39632,
                      name: '_initialUptimeFeedGracePeriod',
                      nodeType: 'Identifier',
                      overloadedDeclarations: [],
                      referencedDeclaration: 39599,
                      src: '8067:29:59',
                      typeDescriptions: {
                        typeIdentifier: 't_uint256',
                        typeString: 'uint256',
                      },
                    },
                    src: '8043:53:59',
                    typeDescriptions: {
                      typeIdentifier: 't_uint256',
                      typeString: 'uint256',
                    },
                  },
                  id: 39634,
                  nodeType: 'ExpressionStatement',
                  src: '8043:53:59',
                },
                {
                  expression: {
                    arguments: [],
                    expression: {
                      argumentTypes: [],
                      id: 39635,
                      name: '_refreshPrice',
                      nodeType: 'Identifier',
                      overloadedDeclarations: [],
                      referencedDeclaration: 40029,
                      src: '8107:13:59',
                      typeDescriptions: {
                        typeIdentifier: 't_function_internal_nonpayable$__$returns$_t_uint256_$_t_uint256_$',
                        typeString: 'function () returns (uint256,uint256)',
                      },
                    },
                    id: 39636,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    kind: 'functionCall',
                    lValueRequested: false,
                    nameLocations: [],
                    names: [],
                    nodeType: 'FunctionCall',
                    src: '8107:15:59',
                    tryCall: false,
                    typeDescriptions: {
                      typeIdentifier: 't_tuple$_t_uint256_$_t_uint256_$',
                      typeString: 'tuple(uint256,uint256)',
                    },
                  },
                  id: 39637,
                  nodeType: 'ExpressionStatement',
                  src: '8107:15:59',
                },
              ],
            },
            documentation: {
              id: 39583,
              nodeType: 'StructuredDocumentation',
              src: '6711:700:59',
              text: ' @notice Set the price feed, uptime feed, and initial parameters.\n @param _priceFeed                     Chainlink ETH/USD price feed.\n @param _uptimeFeed                    Chainlink L2 sequencer uptime feed.\n @param _initialDeprecationPeriod      Initial deprecation period in seconds.\n @param _initialUsdUnitPrice           Initial unit price in USD. Fixed point value with 8 decimals.\n @param _initialMaxUnits               Initial maximum capacity in storage units.\n @param _initialPriceFeedCacheDuration Initial duration to cache ETH/USD price.\n @param _initialUptimeFeedGracePeriod  Initial L2 sequencer downtime grace period.',
            },
            implemented: true,
            kind: 'constructor',
            modifiers: [
              {
                arguments: [],
                id: 39602,
                kind: 'baseConstructorSpecifier',
                modifierName: {
                  id: 39601,
                  name: 'Ownable2Step',
                  nameLocations: ['7729:12:59'],
                  nodeType: 'IdentifierPath',
                  referencedDeclaration: 33420,
                  src: '7729:12:59',
                },
                nodeType: 'ModifierInvocation',
                src: '7729:14:59',
              },
            ],
            name: '',
            nameLocation: '-1:-1:-1',
            parameters: {
              id: 39600,
              nodeType: 'ParameterList',
              parameters: [
                {
                  constant: false,
                  id: 39586,
                  mutability: 'mutable',
                  name: '_priceFeed',
                  nameLocation: '7459:10:59',
                  nodeType: 'VariableDeclaration',
                  scope: 39639,
                  src: '7437:32:59',
                  stateVariable: false,
                  storageLocation: 'default',
                  typeDescriptions: {
                    typeIdentifier: 't_contract$_AggregatorV3Interface_$45',
                    typeString: 'contract AggregatorV3Interface',
                  },
                  typeName: {
                    id: 39585,
                    nodeType: 'UserDefinedTypeName',
                    pathNode: {
                      id: 39584,
                      name: 'AggregatorV3Interface',
                      nameLocations: ['7437:21:59'],
                      nodeType: 'IdentifierPath',
                      referencedDeclaration: 45,
                      src: '7437:21:59',
                    },
                    referencedDeclaration: 45,
                    src: '7437:21:59',
                    typeDescriptions: {
                      typeIdentifier: 't_contract$_AggregatorV3Interface_$45',
                      typeString: 'contract AggregatorV3Interface',
                    },
                  },
                  visibility: 'internal',
                },
                {
                  constant: false,
                  id: 39589,
                  mutability: 'mutable',
                  name: '_uptimeFeed',
                  nameLocation: '7501:11:59',
                  nodeType: 'VariableDeclaration',
                  scope: 39639,
                  src: '7479:33:59',
                  stateVariable: false,
                  storageLocation: 'default',
                  typeDescriptions: {
                    typeIdentifier: 't_contract$_AggregatorV3Interface_$45',
                    typeString: 'contract AggregatorV3Interface',
                  },
                  typeName: {
                    id: 39588,
                    nodeType: 'UserDefinedTypeName',
                    pathNode: {
                      id: 39587,
                      name: 'AggregatorV3Interface',
                      nameLocations: ['7479:21:59'],
                      nodeType: 'IdentifierPath',
                      referencedDeclaration: 45,
                      src: '7479:21:59',
                    },
                    referencedDeclaration: 45,
                    src: '7479:21:59',
                    typeDescriptions: {
                      typeIdentifier: 't_contract$_AggregatorV3Interface_$45',
                      typeString: 'contract AggregatorV3Interface',
                    },
                  },
                  visibility: 'internal',
                },
                {
                  constant: false,
                  id: 39591,
                  mutability: 'mutable',
                  name: '_initialDeprecationPeriod',
                  nameLocation: '7530:25:59',
                  nodeType: 'VariableDeclaration',
                  scope: 39639,
                  src: '7522:33:59',
                  stateVariable: false,
                  storageLocation: 'default',
                  typeDescriptions: {
                    typeIdentifier: 't_uint256',
                    typeString: 'uint256',
                  },
                  typeName: {
                    id: 39590,
                    name: 'uint256',
                    nodeType: 'ElementaryTypeName',
                    src: '7522:7:59',
                    typeDescriptions: {
                      typeIdentifier: 't_uint256',
                      typeString: 'uint256',
                    },
                  },
                  visibility: 'internal',
                },
                {
                  constant: false,
                  id: 39593,
                  mutability: 'mutable',
                  name: '_initialUsdUnitPrice',
                  nameLocation: '7573:20:59',
                  nodeType: 'VariableDeclaration',
                  scope: 39639,
                  src: '7565:28:59',
                  stateVariable: false,
                  storageLocation: 'default',
                  typeDescriptions: {
                    typeIdentifier: 't_uint256',
                    typeString: 'uint256',
                  },
                  typeName: {
                    id: 39592,
                    name: 'uint256',
                    nodeType: 'ElementaryTypeName',
                    src: '7565:7:59',
                    typeDescriptions: {
                      typeIdentifier: 't_uint256',
                      typeString: 'uint256',
                    },
                  },
                  visibility: 'internal',
                },
                {
                  constant: false,
                  id: 39595,
                  mutability: 'mutable',
                  name: '_initialMaxUnits',
                  nameLocation: '7611:16:59',
                  nodeType: 'VariableDeclaration',
                  scope: 39639,
                  src: '7603:24:59',
                  stateVariable: false,
                  storageLocation: 'default',
                  typeDescriptions: {
                    typeIdentifier: 't_uint256',
                    typeString: 'uint256',
                  },
                  typeName: {
                    id: 39594,
                    name: 'uint256',
                    nodeType: 'ElementaryTypeName',
                    src: '7603:7:59',
                    typeDescriptions: {
                      typeIdentifier: 't_uint256',
                      typeString: 'uint256',
                    },
                  },
                  visibility: 'internal',
                },
                {
                  constant: false,
                  id: 39597,
                  mutability: 'mutable',
                  name: '_initialPriceFeedCacheDuration',
                  nameLocation: '7645:30:59',
                  nodeType: 'VariableDeclaration',
                  scope: 39639,
                  src: '7637:38:59',
                  stateVariable: false,
                  storageLocation: 'default',
                  typeDescriptions: {
                    typeIdentifier: 't_uint256',
                    typeString: 'uint256',
                  },
                  typeName: {
                    id: 39596,
                    name: 'uint256',
                    nodeType: 'ElementaryTypeName',
                    src: '7637:7:59',
                    typeDescriptions: {
                      typeIdentifier: 't_uint256',
                      typeString: 'uint256',
                    },
                  },
                  visibility: 'internal',
                },
                {
                  constant: false,
                  id: 39599,
                  mutability: 'mutable',
                  name: '_initialUptimeFeedGracePeriod',
                  nameLocation: '7693:29:59',
                  nodeType: 'VariableDeclaration',
                  scope: 39639,
                  src: '7685:37:59',
                  stateVariable: false,
                  storageLocation: 'default',
                  typeDescriptions: {
                    typeIdentifier: 't_uint256',
                    typeString: 'uint256',
                  },
                  typeName: {
                    id: 39598,
                    name: 'uint256',
                    nodeType: 'ElementaryTypeName',
                    src: '7685:7:59',
                    typeDescriptions: {
                      typeIdentifier: 't_uint256',
                      typeString: 'uint256',
                    },
                  },
                  visibility: 'internal',
                },
              ],
              src: '7427:301:59',
            },
            returnParameters: {
              id: 39603,
              nodeType: 'ParameterList',
              parameters: [],
              src: '7744:0:59',
            },
            scope: 40314,
            stateMutability: 'nonpayable',
            virtual: false,
            visibility: 'public',
          },
          {
            id: 39651,
            nodeType: 'ModifierDefinition',
            src: '8315:129:59',
            nodes: [],
            body: {
              id: 39650,
              nodeType: 'Block',
              src: '8344:100:59',
              nodes: [],
              statements: [
                {
                  condition: {
                    commonType: {
                      typeIdentifier: 't_uint256',
                      typeString: 'uint256',
                    },
                    id: 39644,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    lValueRequested: false,
                    leftExpression: {
                      expression: {
                        id: 39641,
                        name: 'block',
                        nodeType: 'Identifier',
                        overloadedDeclarations: [],
                        referencedDeclaration: -4,
                        src: '8358:5:59',
                        typeDescriptions: {
                          typeIdentifier: 't_magic_block',
                          typeString: 'block',
                        },
                      },
                      id: 39642,
                      isConstant: false,
                      isLValue: false,
                      isPure: false,
                      lValueRequested: false,
                      memberLocation: '8364:9:59',
                      memberName: 'timestamp',
                      nodeType: 'MemberAccess',
                      src: '8358:15:59',
                      typeDescriptions: {
                        typeIdentifier: 't_uint256',
                        typeString: 'uint256',
                      },
                    },
                    nodeType: 'BinaryOperation',
                    operator: '>=',
                    rightExpression: {
                      id: 39643,
                      name: 'deprecationTimestamp',
                      nodeType: 'Identifier',
                      overloadedDeclarations: [],
                      referencedDeclaration: 39561,
                      src: '8377:20:59',
                      typeDescriptions: {
                        typeIdentifier: 't_uint256',
                        typeString: 'uint256',
                      },
                    },
                    src: '8358:39:59',
                    typeDescriptions: {
                      typeIdentifier: 't_bool',
                      typeString: 'bool',
                    },
                  },
                  id: 39648,
                  nodeType: 'IfStatement',
                  src: '8354:72:59',
                  trueBody: {
                    errorCall: {
                      arguments: [],
                      expression: {
                        argumentTypes: [],
                        id: 39645,
                        name: 'ContractDeprecated',
                        nodeType: 'Identifier',
                        overloadedDeclarations: [],
                        referencedDeclaration: 39459,
                        src: '8406:18:59',
                        typeDescriptions: {
                          typeIdentifier: 't_function_error_pure$__$returns$__$',
                          typeString: 'function () pure',
                        },
                      },
                      id: 39646,
                      isConstant: false,
                      isLValue: false,
                      isPure: false,
                      kind: 'functionCall',
                      lValueRequested: false,
                      nameLocations: [],
                      names: [],
                      nodeType: 'FunctionCall',
                      src: '8406:20:59',
                      tryCall: false,
                      typeDescriptions: {
                        typeIdentifier: 't_tuple$__$',
                        typeString: 'tuple()',
                      },
                    },
                    id: 39647,
                    nodeType: 'RevertStatement',
                    src: '8399:27:59',
                  },
                },
                {
                  id: 39649,
                  nodeType: 'PlaceholderStatement',
                  src: '8436:1:59',
                },
              ],
            },
            name: 'whenNotDeprecated',
            nameLocation: '8324:17:59',
            parameters: {
              id: 39640,
              nodeType: 'ParameterList',
              parameters: [],
              src: '8341:2:59',
            },
            virtual: false,
            visibility: 'internal',
          },
          {
            id: 39731,
            nodeType: 'FunctionDefinition',
            src: '8874:568:59',
            nodes: [],
            body: {
              id: 39730,
              nodeType: 'Block',
              src: '8951:491:59',
              nodes: [],
              statements: [
                {
                  assignments: [39662],
                  declarations: [
                    {
                      constant: false,
                      id: 39662,
                      mutability: 'mutable',
                      name: 'totalPrice',
                      nameLocation: '8969:10:59',
                      nodeType: 'VariableDeclaration',
                      scope: 39730,
                      src: '8961:18:59',
                      stateVariable: false,
                      storageLocation: 'default',
                      typeDescriptions: {
                        typeIdentifier: 't_uint256',
                        typeString: 'uint256',
                      },
                      typeName: {
                        id: 39661,
                        name: 'uint256',
                        nodeType: 'ElementaryTypeName',
                        src: '8961:7:59',
                        typeDescriptions: {
                          typeIdentifier: 't_uint256',
                          typeString: 'uint256',
                        },
                      },
                      visibility: 'internal',
                    },
                  ],
                  id: 39666,
                  initialValue: {
                    arguments: [
                      {
                        id: 39664,
                        name: 'units',
                        nodeType: 'Identifier',
                        overloadedDeclarations: [],
                        referencedDeclaration: 39656,
                        src: '8989:5:59',
                        typeDescriptions: {
                          typeIdentifier: 't_uint256',
                          typeString: 'uint256',
                        },
                      },
                    ],
                    expression: {
                      argumentTypes: [
                        {
                          typeIdentifier: 't_uint256',
                          typeString: 'uint256',
                        },
                      ],
                      id: 39663,
                      name: '_price',
                      nodeType: 'Identifier',
                      overloadedDeclarations: [40044, 40065],
                      referencedDeclaration: 40044,
                      src: '8982:6:59',
                      typeDescriptions: {
                        typeIdentifier: 't_function_internal_nonpayable$_t_uint256_$returns$_t_uint256_$',
                        typeString: 'function (uint256) returns (uint256)',
                      },
                    },
                    id: 39665,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    kind: 'functionCall',
                    lValueRequested: false,
                    nameLocations: [],
                    names: [],
                    nodeType: 'FunctionCall',
                    src: '8982:13:59',
                    tryCall: false,
                    typeDescriptions: {
                      typeIdentifier: 't_uint256',
                      typeString: 'uint256',
                    },
                  },
                  nodeType: 'VariableDeclarationStatement',
                  src: '8961:34:59',
                },
                {
                  condition: {
                    commonType: {
                      typeIdentifier: 't_uint256',
                      typeString: 'uint256',
                    },
                    id: 39669,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    lValueRequested: false,
                    leftExpression: {
                      id: 39667,
                      name: 'units',
                      nodeType: 'Identifier',
                      overloadedDeclarations: [],
                      referencedDeclaration: 39656,
                      src: '9009:5:59',
                      typeDescriptions: {
                        typeIdentifier: 't_uint256',
                        typeString: 'uint256',
                      },
                    },
                    nodeType: 'BinaryOperation',
                    operator: '==',
                    rightExpression: {
                      hexValue: '30',
                      id: 39668,
                      isConstant: false,
                      isLValue: false,
                      isPure: true,
                      kind: 'number',
                      lValueRequested: false,
                      nodeType: 'Literal',
                      src: '9018:1:59',
                      typeDescriptions: {
                        typeIdentifier: 't_rational_0_by_1',
                        typeString: 'int_const 0',
                      },
                      value: '0',
                    },
                    src: '9009:10:59',
                    typeDescriptions: {
                      typeIdentifier: 't_bool',
                      typeString: 'bool',
                    },
                  },
                  id: 39673,
                  nodeType: 'IfStatement',
                  src: '9005:38:59',
                  trueBody: {
                    errorCall: {
                      arguments: [],
                      expression: {
                        argumentTypes: [],
                        id: 39670,
                        name: 'InvalidAmount',
                        nodeType: 'Identifier',
                        overloadedDeclarations: [],
                        referencedDeclaration: 39465,
                        src: '9028:13:59',
                        typeDescriptions: {
                          typeIdentifier: 't_function_error_pure$__$returns$__$',
                          typeString: 'function () pure',
                        },
                      },
                      id: 39671,
                      isConstant: false,
                      isLValue: false,
                      isPure: false,
                      kind: 'functionCall',
                      lValueRequested: false,
                      nameLocations: [],
                      names: [],
                      nodeType: 'FunctionCall',
                      src: '9028:15:59',
                      tryCall: false,
                      typeDescriptions: {
                        typeIdentifier: 't_tuple$__$',
                        typeString: 'tuple()',
                      },
                    },
                    id: 39672,
                    nodeType: 'RevertStatement',
                    src: '9021:22:59',
                  },
                },
                {
                  condition: {
                    commonType: {
                      typeIdentifier: 't_uint256',
                      typeString: 'uint256',
                    },
                    id: 39677,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    lValueRequested: false,
                    leftExpression: {
                      expression: {
                        id: 39674,
                        name: 'msg',
                        nodeType: 'Identifier',
                        overloadedDeclarations: [],
                        referencedDeclaration: -15,
                        src: '9057:3:59',
                        typeDescriptions: {
                          typeIdentifier: 't_magic_message',
                          typeString: 'msg',
                        },
                      },
                      id: 39675,
                      isConstant: false,
                      isLValue: false,
                      isPure: false,
                      lValueRequested: false,
                      memberLocation: '9061:5:59',
                      memberName: 'value',
                      nodeType: 'MemberAccess',
                      src: '9057:9:59',
                      typeDescriptions: {
                        typeIdentifier: 't_uint256',
                        typeString: 'uint256',
                      },
                    },
                    nodeType: 'BinaryOperation',
                    operator: '<',
                    rightExpression: {
                      id: 39676,
                      name: 'totalPrice',
                      nodeType: 'Identifier',
                      overloadedDeclarations: [],
                      referencedDeclaration: 39662,
                      src: '9069:10:59',
                      typeDescriptions: {
                        typeIdentifier: 't_uint256',
                        typeString: 'uint256',
                      },
                    },
                    src: '9057:22:59',
                    typeDescriptions: {
                      typeIdentifier: 't_bool',
                      typeString: 'bool',
                    },
                  },
                  id: 39681,
                  nodeType: 'IfStatement',
                  src: '9053:51:59',
                  trueBody: {
                    errorCall: {
                      arguments: [],
                      expression: {
                        argumentTypes: [],
                        id: 39678,
                        name: 'InvalidPayment',
                        nodeType: 'Identifier',
                        overloadedDeclarations: [],
                        referencedDeclaration: 39471,
                        src: '9088:14:59',
                        typeDescriptions: {
                          typeIdentifier: 't_function_error_pure$__$returns$__$',
                          typeString: 'function () pure',
                        },
                      },
                      id: 39679,
                      isConstant: false,
                      isLValue: false,
                      isPure: false,
                      kind: 'functionCall',
                      lValueRequested: false,
                      nameLocations: [],
                      names: [],
                      nodeType: 'FunctionCall',
                      src: '9088:16:59',
                      tryCall: false,
                      typeDescriptions: {
                        typeIdentifier: 't_tuple$__$',
                        typeString: 'tuple()',
                      },
                    },
                    id: 39680,
                    nodeType: 'RevertStatement',
                    src: '9081:23:59',
                  },
                },
                {
                  condition: {
                    commonType: {
                      typeIdentifier: 't_uint256',
                      typeString: 'uint256',
                    },
                    id: 39686,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    lValueRequested: false,
                    leftExpression: {
                      commonType: {
                        typeIdentifier: 't_uint256',
                        typeString: 'uint256',
                      },
                      id: 39684,
                      isConstant: false,
                      isLValue: false,
                      isPure: false,
                      lValueRequested: false,
                      leftExpression: {
                        id: 39682,
                        name: 'rentedUnits',
                        nodeType: 'Identifier',
                        overloadedDeclarations: [],
                        referencedDeclaration: 39576,
                        src: '9118:11:59',
                        typeDescriptions: {
                          typeIdentifier: 't_uint256',
                          typeString: 'uint256',
                        },
                      },
                      nodeType: 'BinaryOperation',
                      operator: '+',
                      rightExpression: {
                        id: 39683,
                        name: 'units',
                        nodeType: 'Identifier',
                        overloadedDeclarations: [],
                        referencedDeclaration: 39656,
                        src: '9132:5:59',
                        typeDescriptions: {
                          typeIdentifier: 't_uint256',
                          typeString: 'uint256',
                        },
                      },
                      src: '9118:19:59',
                      typeDescriptions: {
                        typeIdentifier: 't_uint256',
                        typeString: 'uint256',
                      },
                    },
                    nodeType: 'BinaryOperation',
                    operator: '>',
                    rightExpression: {
                      id: 39685,
                      name: 'maxUnits',
                      nodeType: 'Identifier',
                      overloadedDeclarations: [],
                      referencedDeclaration: 39567,
                      src: '9140:8:59',
                      typeDescriptions: {
                        typeIdentifier: 't_uint256',
                        typeString: 'uint256',
                      },
                    },
                    src: '9118:30:59',
                    typeDescriptions: {
                      typeIdentifier: 't_bool',
                      typeString: 'bool',
                    },
                  },
                  id: 39690,
                  nodeType: 'IfStatement',
                  src: '9114:60:59',
                  trueBody: {
                    errorCall: {
                      arguments: [],
                      expression: {
                        argumentTypes: [],
                        id: 39687,
                        name: 'ExceedsCapacity',
                        nodeType: 'Identifier',
                        overloadedDeclarations: [],
                        referencedDeclaration: 39462,
                        src: '9157:15:59',
                        typeDescriptions: {
                          typeIdentifier: 't_function_error_pure$__$returns$__$',
                          typeString: 'function () pure',
                        },
                      },
                      id: 39688,
                      isConstant: false,
                      isLValue: false,
                      isPure: false,
                      kind: 'functionCall',
                      lValueRequested: false,
                      nameLocations: [],
                      names: [],
                      nodeType: 'FunctionCall',
                      src: '9157:17:59',
                      tryCall: false,
                      typeDescriptions: {
                        typeIdentifier: 't_tuple$__$',
                        typeString: 'tuple()',
                      },
                    },
                    id: 39689,
                    nodeType: 'RevertStatement',
                    src: '9150:24:59',
                  },
                },
                {
                  expression: {
                    id: 39693,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    lValueRequested: false,
                    leftHandSide: {
                      id: 39691,
                      name: 'rentedUnits',
                      nodeType: 'Identifier',
                      overloadedDeclarations: [],
                      referencedDeclaration: 39576,
                      src: '9185:11:59',
                      typeDescriptions: {
                        typeIdentifier: 't_uint256',
                        typeString: 'uint256',
                      },
                    },
                    nodeType: 'Assignment',
                    operator: '+=',
                    rightHandSide: {
                      id: 39692,
                      name: 'units',
                      nodeType: 'Identifier',
                      overloadedDeclarations: [],
                      referencedDeclaration: 39656,
                      src: '9200:5:59',
                      typeDescriptions: {
                        typeIdentifier: 't_uint256',
                        typeString: 'uint256',
                      },
                    },
                    src: '9185:20:59',
                    typeDescriptions: {
                      typeIdentifier: 't_uint256',
                      typeString: 'uint256',
                    },
                  },
                  id: 39694,
                  nodeType: 'ExpressionStatement',
                  src: '9185:20:59',
                },
                {
                  eventCall: {
                    arguments: [
                      {
                        expression: {
                          id: 39696,
                          name: 'msg',
                          nodeType: 'Identifier',
                          overloadedDeclarations: [],
                          referencedDeclaration: -15,
                          src: '9225:3:59',
                          typeDescriptions: {
                            typeIdentifier: 't_magic_message',
                            typeString: 'msg',
                          },
                        },
                        id: 39697,
                        isConstant: false,
                        isLValue: false,
                        isPure: false,
                        lValueRequested: false,
                        memberLocation: '9229:6:59',
                        memberName: 'sender',
                        nodeType: 'MemberAccess',
                        src: '9225:10:59',
                        typeDescriptions: {
                          typeIdentifier: 't_address',
                          typeString: 'address',
                        },
                      },
                      {
                        id: 39698,
                        name: 'fid',
                        nodeType: 'Identifier',
                        overloadedDeclarations: [],
                        referencedDeclaration: 39654,
                        src: '9237:3:59',
                        typeDescriptions: {
                          typeIdentifier: 't_uint256',
                          typeString: 'uint256',
                        },
                      },
                      {
                        id: 39699,
                        name: 'units',
                        nodeType: 'Identifier',
                        overloadedDeclarations: [],
                        referencedDeclaration: 39656,
                        src: '9242:5:59',
                        typeDescriptions: {
                          typeIdentifier: 't_uint256',
                          typeString: 'uint256',
                        },
                      },
                    ],
                    expression: {
                      argumentTypes: [
                        {
                          typeIdentifier: 't_address',
                          typeString: 'address',
                        },
                        {
                          typeIdentifier: 't_uint256',
                          typeString: 'uint256',
                        },
                        {
                          typeIdentifier: 't_uint256',
                          typeString: 'uint256',
                        },
                      ],
                      id: 39695,
                      name: 'Rent',
                      nodeType: 'Identifier',
                      overloadedDeclarations: [],
                      referencedDeclaration: 39504,
                      src: '9220:4:59',
                      typeDescriptions: {
                        typeIdentifier: 't_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$',
                        typeString: 'function (address,uint256,uint256)',
                      },
                    },
                    id: 39700,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    kind: 'functionCall',
                    lValueRequested: false,
                    nameLocations: [],
                    names: [],
                    nodeType: 'FunctionCall',
                    src: '9220:28:59',
                    tryCall: false,
                    typeDescriptions: {
                      typeIdentifier: 't_tuple$__$',
                      typeString: 'tuple()',
                    },
                  },
                  id: 39701,
                  nodeType: 'EmitStatement',
                  src: '9215:33:59',
                },
                {
                  condition: {
                    commonType: {
                      typeIdentifier: 't_uint256',
                      typeString: 'uint256',
                    },
                    id: 39705,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    lValueRequested: false,
                    leftExpression: {
                      expression: {
                        id: 39702,
                        name: 'msg',
                        nodeType: 'Identifier',
                        overloadedDeclarations: [],
                        referencedDeclaration: -15,
                        src: '9263:3:59',
                        typeDescriptions: {
                          typeIdentifier: 't_magic_message',
                          typeString: 'msg',
                        },
                      },
                      id: 39703,
                      isConstant: false,
                      isLValue: false,
                      isPure: false,
                      lValueRequested: false,
                      memberLocation: '9267:5:59',
                      memberName: 'value',
                      nodeType: 'MemberAccess',
                      src: '9263:9:59',
                      typeDescriptions: {
                        typeIdentifier: 't_uint256',
                        typeString: 'uint256',
                      },
                    },
                    nodeType: 'BinaryOperation',
                    operator: '>',
                    rightExpression: {
                      id: 39704,
                      name: 'totalPrice',
                      nodeType: 'Identifier',
                      overloadedDeclarations: [],
                      referencedDeclaration: 39662,
                      src: '9275:10:59',
                      typeDescriptions: {
                        typeIdentifier: 't_uint256',
                        typeString: 'uint256',
                      },
                    },
                    src: '9263:22:59',
                    typeDescriptions: {
                      typeIdentifier: 't_bool',
                      typeString: 'bool',
                    },
                  },
                  id: 39729,
                  nodeType: 'IfStatement',
                  src: '9259:177:59',
                  trueBody: {
                    id: 39728,
                    nodeType: 'Block',
                    src: '9287:149:59',
                    statements: [
                      {
                        assignments: [39707, null],
                        declarations: [
                          {
                            constant: false,
                            id: 39707,
                            mutability: 'mutable',
                            name: 'success',
                            nameLocation: '9307:7:59',
                            nodeType: 'VariableDeclaration',
                            scope: 39728,
                            src: '9302:12:59',
                            stateVariable: false,
                            storageLocation: 'default',
                            typeDescriptions: {
                              typeIdentifier: 't_bool',
                              typeString: 'bool',
                            },
                            typeName: {
                              id: 39706,
                              name: 'bool',
                              nodeType: 'ElementaryTypeName',
                              src: '9302:4:59',
                              typeDescriptions: {
                                typeIdentifier: 't_bool',
                                typeString: 'bool',
                              },
                            },
                            visibility: 'internal',
                          },
                          null,
                        ],
                        id: 39721,
                        initialValue: {
                          arguments: [
                            {
                              hexValue: '',
                              id: 39719,
                              isConstant: false,
                              isLValue: false,
                              isPure: true,
                              kind: 'string',
                              lValueRequested: false,
                              nodeType: 'Literal',
                              src: '9375:2:59',
                              typeDescriptions: {
                                typeIdentifier:
                                  't_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470',
                                typeString: 'literal_string ""',
                              },
                              value: '',
                            },
                          ],
                          expression: {
                            argumentTypes: [
                              {
                                typeIdentifier:
                                  't_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470',
                                typeString: 'literal_string ""',
                              },
                            ],
                            expression: {
                              argumentTypes: [
                                {
                                  typeIdentifier:
                                    't_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470',
                                  typeString: 'literal_string ""',
                                },
                              ],
                              expression: {
                                arguments: [
                                  {
                                    expression: {
                                      id: 39710,
                                      name: 'msg',
                                      nodeType: 'Identifier',
                                      overloadedDeclarations: [],
                                      referencedDeclaration: -15,
                                      src: '9327:3:59',
                                      typeDescriptions: {
                                        typeIdentifier: 't_magic_message',
                                        typeString: 'msg',
                                      },
                                    },
                                    id: 39711,
                                    isConstant: false,
                                    isLValue: false,
                                    isPure: false,
                                    lValueRequested: false,
                                    memberLocation: '9331:6:59',
                                    memberName: 'sender',
                                    nodeType: 'MemberAccess',
                                    src: '9327:10:59',
                                    typeDescriptions: {
                                      typeIdentifier: 't_address',
                                      typeString: 'address',
                                    },
                                  },
                                ],
                                expression: {
                                  argumentTypes: [
                                    {
                                      typeIdentifier: 't_address',
                                      typeString: 'address',
                                    },
                                  ],
                                  id: 39709,
                                  isConstant: false,
                                  isLValue: false,
                                  isPure: true,
                                  lValueRequested: false,
                                  nodeType: 'ElementaryTypeNameExpression',
                                  src: '9319:8:59',
                                  typeDescriptions: {
                                    typeIdentifier: 't_type$_t_address_payable_$',
                                    typeString: 'type(address payable)',
                                  },
                                  typeName: {
                                    id: 39708,
                                    name: 'address',
                                    nodeType: 'ElementaryTypeName',
                                    src: '9319:8:59',
                                    stateMutability: 'payable',
                                    typeDescriptions: {},
                                  },
                                },
                                id: 39712,
                                isConstant: false,
                                isLValue: false,
                                isPure: false,
                                kind: 'typeConversion',
                                lValueRequested: false,
                                nameLocations: [],
                                names: [],
                                nodeType: 'FunctionCall',
                                src: '9319:19:59',
                                tryCall: false,
                                typeDescriptions: {
                                  typeIdentifier: 't_address_payable',
                                  typeString: 'address payable',
                                },
                              },
                              id: 39713,
                              isConstant: false,
                              isLValue: false,
                              isPure: false,
                              lValueRequested: false,
                              memberLocation: '9339:4:59',
                              memberName: 'call',
                              nodeType: 'MemberAccess',
                              src: '9319:24:59',
                              typeDescriptions: {
                                typeIdentifier:
                                  't_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$',
                                typeString: 'function (bytes memory) payable returns (bool,bytes memory)',
                              },
                            },
                            id: 39718,
                            isConstant: false,
                            isLValue: false,
                            isPure: false,
                            lValueRequested: false,
                            names: ['value'],
                            nodeType: 'FunctionCallOptions',
                            options: [
                              {
                                commonType: {
                                  typeIdentifier: 't_uint256',
                                  typeString: 'uint256',
                                },
                                id: 39717,
                                isConstant: false,
                                isLValue: false,
                                isPure: false,
                                lValueRequested: false,
                                leftExpression: {
                                  expression: {
                                    id: 39714,
                                    name: 'msg',
                                    nodeType: 'Identifier',
                                    overloadedDeclarations: [],
                                    referencedDeclaration: -15,
                                    src: '9351:3:59',
                                    typeDescriptions: {
                                      typeIdentifier: 't_magic_message',
                                      typeString: 'msg',
                                    },
                                  },
                                  id: 39715,
                                  isConstant: false,
                                  isLValue: false,
                                  isPure: false,
                                  lValueRequested: false,
                                  memberLocation: '9355:5:59',
                                  memberName: 'value',
                                  nodeType: 'MemberAccess',
                                  src: '9351:9:59',
                                  typeDescriptions: {
                                    typeIdentifier: 't_uint256',
                                    typeString: 'uint256',
                                  },
                                },
                                nodeType: 'BinaryOperation',
                                operator: '-',
                                rightExpression: {
                                  id: 39716,
                                  name: 'totalPrice',
                                  nodeType: 'Identifier',
                                  overloadedDeclarations: [],
                                  referencedDeclaration: 39662,
                                  src: '9363:10:59',
                                  typeDescriptions: {
                                    typeIdentifier: 't_uint256',
                                    typeString: 'uint256',
                                  },
                                },
                                src: '9351:22:59',
                                typeDescriptions: {
                                  typeIdentifier: 't_uint256',
                                  typeString: 'uint256',
                                },
                              },
                            ],
                            src: '9319:55:59',
                            typeDescriptions: {
                              typeIdentifier:
                                't_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value',
                              typeString: 'function (bytes memory) payable returns (bool,bytes memory)',
                            },
                          },
                          id: 39720,
                          isConstant: false,
                          isLValue: false,
                          isPure: false,
                          kind: 'functionCall',
                          lValueRequested: false,
                          nameLocations: [],
                          names: [],
                          nodeType: 'FunctionCall',
                          src: '9319:59:59',
                          tryCall: false,
                          typeDescriptions: {
                            typeIdentifier: 't_tuple$_t_bool_$_t_bytes_memory_ptr_$',
                            typeString: 'tuple(bool,bytes memory)',
                          },
                        },
                        nodeType: 'VariableDeclarationStatement',
                        src: '9301:77:59',
                      },
                      {
                        condition: {
                          id: 39723,
                          isConstant: false,
                          isLValue: false,
                          isPure: false,
                          lValueRequested: false,
                          nodeType: 'UnaryOperation',
                          operator: '!',
                          prefix: true,
                          src: '9396:8:59',
                          subExpression: {
                            id: 39722,
                            name: 'success',
                            nodeType: 'Identifier',
                            overloadedDeclarations: [],
                            referencedDeclaration: 39707,
                            src: '9397:7:59',
                            typeDescriptions: {
                              typeIdentifier: 't_bool',
                              typeString: 'bool',
                            },
                          },
                          typeDescriptions: {
                            typeIdentifier: 't_bool',
                            typeString: 'bool',
                          },
                        },
                        id: 39727,
                        nodeType: 'IfStatement',
                        src: '9392:33:59',
                        trueBody: {
                          errorCall: {
                            arguments: [],
                            expression: {
                              argumentTypes: [],
                              id: 39724,
                              name: 'CallFailed',
                              nodeType: 'Identifier',
                              overloadedDeclarations: [],
                              referencedDeclaration: 39477,
                              src: '9413:10:59',
                              typeDescriptions: {
                                typeIdentifier: 't_function_error_pure$__$returns$__$',
                                typeString: 'function () pure',
                              },
                            },
                            id: 39725,
                            isConstant: false,
                            isLValue: false,
                            isPure: false,
                            kind: 'functionCall',
                            lValueRequested: false,
                            nameLocations: [],
                            names: [],
                            nodeType: 'FunctionCall',
                            src: '9413:12:59',
                            tryCall: false,
                            typeDescriptions: {
                              typeIdentifier: 't_tuple$__$',
                              typeString: 'tuple()',
                            },
                          },
                          id: 39726,
                          nodeType: 'RevertStatement',
                          src: '9406:19:59',
                        },
                      },
                    ],
                  },
                },
              ],
            },
            documentation: {
              id: 39652,
              nodeType: 'StructuredDocumentation',
              src: '8634:235:59',
              text: ' @notice Rent storage for a given fid. The caller must provide an exact payment amount.\n @param fid   The fid that will receive the storage allocation.\n @param units Number of storage units to rent.',
            },
            functionSelector: '783a112b',
            implemented: true,
            kind: 'function',
            modifiers: [
              {
                id: 39659,
                kind: 'modifierInvocation',
                modifierName: {
                  id: 39658,
                  name: 'whenNotDeprecated',
                  nameLocations: ['8933:17:59'],
                  nodeType: 'IdentifierPath',
                  referencedDeclaration: 39651,
                  src: '8933:17:59',
                },
                nodeType: 'ModifierInvocation',
                src: '8933:17:59',
              },
            ],
            name: 'rent',
            nameLocation: '8883:4:59',
            parameters: {
              id: 39657,
              nodeType: 'ParameterList',
              parameters: [
                {
                  constant: false,
                  id: 39654,
                  mutability: 'mutable',
                  name: 'fid',
                  nameLocation: '8896:3:59',
                  nodeType: 'VariableDeclaration',
                  scope: 39731,
                  src: '8888:11:59',
                  stateVariable: false,
                  storageLocation: 'default',
                  typeDescriptions: {
                    typeIdentifier: 't_uint256',
                    typeString: 'uint256',
                  },
                  typeName: {
                    id: 39653,
                    name: 'uint256',
                    nodeType: 'ElementaryTypeName',
                    src: '8888:7:59',
                    typeDescriptions: {
                      typeIdentifier: 't_uint256',
                      typeString: 'uint256',
                    },
                  },
                  visibility: 'internal',
                },
                {
                  constant: false,
                  id: 39656,
                  mutability: 'mutable',
                  name: 'units',
                  nameLocation: '8909:5:59',
                  nodeType: 'VariableDeclaration',
                  scope: 39731,
                  src: '8901:13:59',
                  stateVariable: false,
                  storageLocation: 'default',
                  typeDescriptions: {
                    typeIdentifier: 't_uint256',
                    typeString: 'uint256',
                  },
                  typeName: {
                    id: 39655,
                    name: 'uint256',
                    nodeType: 'ElementaryTypeName',
                    src: '8901:7:59',
                    typeDescriptions: {
                      typeIdentifier: 't_uint256',
                      typeString: 'uint256',
                    },
                  },
                  visibility: 'internal',
                },
              ],
              src: '8887:28:59',
            },
            returnParameters: {
              id: 39660,
              nodeType: 'ParameterList',
              parameters: [],
              src: '8951:0:59',
            },
            scope: 40314,
            stateMutability: 'payable',
            virtual: false,
            visibility: 'external',
          },
          {
            id: 39867,
            nodeType: 'FunctionDefinition',
            src: '9785:963:59',
            nodes: [],
            body: {
              id: 39866,
              nodeType: 'Block',
              src: '9890:858:59',
              nodes: [],
              statements: [
                {
                  condition: {
                    commonType: {
                      typeIdentifier: 't_bool',
                      typeString: 'bool',
                    },
                    id: 39751,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    lValueRequested: false,
                    leftExpression: {
                      commonType: {
                        typeIdentifier: 't_uint256',
                        typeString: 'uint256',
                      },
                      id: 39746,
                      isConstant: false,
                      isLValue: false,
                      isPure: false,
                      lValueRequested: false,
                      leftExpression: {
                        expression: {
                          id: 39743,
                          name: 'fids',
                          nodeType: 'Identifier',
                          overloadedDeclarations: [],
                          referencedDeclaration: 39735,
                          src: '9904:4:59',
                          typeDescriptions: {
                            typeIdentifier: 't_array$_t_uint256_$dyn_calldata_ptr',
                            typeString: 'uint256[] calldata',
                          },
                        },
                        id: 39744,
                        isConstant: false,
                        isLValue: false,
                        isPure: false,
                        lValueRequested: false,
                        memberLocation: '9909:6:59',
                        memberName: 'length',
                        nodeType: 'MemberAccess',
                        src: '9904:11:59',
                        typeDescriptions: {
                          typeIdentifier: 't_uint256',
                          typeString: 'uint256',
                        },
                      },
                      nodeType: 'BinaryOperation',
                      operator: '==',
                      rightExpression: {
                        hexValue: '30',
                        id: 39745,
                        isConstant: false,
                        isLValue: false,
                        isPure: true,
                        kind: 'number',
                        lValueRequested: false,
                        nodeType: 'Literal',
                        src: '9919:1:59',
                        typeDescriptions: {
                          typeIdentifier: 't_rational_0_by_1',
                          typeString: 'int_const 0',
                        },
                        value: '0',
                      },
                      src: '9904:16:59',
                      typeDescriptions: {
                        typeIdentifier: 't_bool',
                        typeString: 'bool',
                      },
                    },
                    nodeType: 'BinaryOperation',
                    operator: '||',
                    rightExpression: {
                      commonType: {
                        typeIdentifier: 't_uint256',
                        typeString: 'uint256',
                      },
                      id: 39750,
                      isConstant: false,
                      isLValue: false,
                      isPure: false,
                      lValueRequested: false,
                      leftExpression: {
                        expression: {
                          id: 39747,
                          name: 'units',
                          nodeType: 'Identifier',
                          overloadedDeclarations: [],
                          referencedDeclaration: 39738,
                          src: '9924:5:59',
                          typeDescriptions: {
                            typeIdentifier: 't_array$_t_uint256_$dyn_calldata_ptr',
                            typeString: 'uint256[] calldata',
                          },
                        },
                        id: 39748,
                        isConstant: false,
                        isLValue: false,
                        isPure: false,
                        lValueRequested: false,
                        memberLocation: '9930:6:59',
                        memberName: 'length',
                        nodeType: 'MemberAccess',
                        src: '9924:12:59',
                        typeDescriptions: {
                          typeIdentifier: 't_uint256',
                          typeString: 'uint256',
                        },
                      },
                      nodeType: 'BinaryOperation',
                      operator: '==',
                      rightExpression: {
                        hexValue: '30',
                        id: 39749,
                        isConstant: false,
                        isLValue: false,
                        isPure: true,
                        kind: 'number',
                        lValueRequested: false,
                        nodeType: 'Literal',
                        src: '9940:1:59',
                        typeDescriptions: {
                          typeIdentifier: 't_rational_0_by_1',
                          typeString: 'int_const 0',
                        },
                        value: '0',
                      },
                      src: '9924:17:59',
                      typeDescriptions: {
                        typeIdentifier: 't_bool',
                        typeString: 'bool',
                      },
                    },
                    src: '9904:37:59',
                    typeDescriptions: {
                      typeIdentifier: 't_bool',
                      typeString: 'bool',
                    },
                  },
                  id: 39755,
                  nodeType: 'IfStatement',
                  src: '9900:69:59',
                  trueBody: {
                    errorCall: {
                      arguments: [],
                      expression: {
                        argumentTypes: [],
                        id: 39752,
                        name: 'InvalidBatchInput',
                        nodeType: 'Identifier',
                        overloadedDeclarations: [],
                        referencedDeclaration: 39468,
                        src: '9950:17:59',
                        typeDescriptions: {
                          typeIdentifier: 't_function_error_pure$__$returns$__$',
                          typeString: 'function () pure',
                        },
                      },
                      id: 39753,
                      isConstant: false,
                      isLValue: false,
                      isPure: false,
                      kind: 'functionCall',
                      lValueRequested: false,
                      nameLocations: [],
                      names: [],
                      nodeType: 'FunctionCall',
                      src: '9950:19:59',
                      tryCall: false,
                      typeDescriptions: {
                        typeIdentifier: 't_tuple$__$',
                        typeString: 'tuple()',
                      },
                    },
                    id: 39754,
                    nodeType: 'RevertStatement',
                    src: '9943:26:59',
                  },
                },
                {
                  condition: {
                    commonType: {
                      typeIdentifier: 't_uint256',
                      typeString: 'uint256',
                    },
                    id: 39760,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    lValueRequested: false,
                    leftExpression: {
                      expression: {
                        id: 39756,
                        name: 'fids',
                        nodeType: 'Identifier',
                        overloadedDeclarations: [],
                        referencedDeclaration: 39735,
                        src: '9983:4:59',
                        typeDescriptions: {
                          typeIdentifier: 't_array$_t_uint256_$dyn_calldata_ptr',
                          typeString: 'uint256[] calldata',
                        },
                      },
                      id: 39757,
                      isConstant: false,
                      isLValue: false,
                      isPure: false,
                      lValueRequested: false,
                      memberLocation: '9988:6:59',
                      memberName: 'length',
                      nodeType: 'MemberAccess',
                      src: '9983:11:59',
                      typeDescriptions: {
                        typeIdentifier: 't_uint256',
                        typeString: 'uint256',
                      },
                    },
                    nodeType: 'BinaryOperation',
                    operator: '!=',
                    rightExpression: {
                      expression: {
                        id: 39758,
                        name: 'units',
                        nodeType: 'Identifier',
                        overloadedDeclarations: [],
                        referencedDeclaration: 39738,
                        src: '9998:5:59',
                        typeDescriptions: {
                          typeIdentifier: 't_array$_t_uint256_$dyn_calldata_ptr',
                          typeString: 'uint256[] calldata',
                        },
                      },
                      id: 39759,
                      isConstant: false,
                      isLValue: false,
                      isPure: false,
                      lValueRequested: false,
                      memberLocation: '10004:6:59',
                      memberName: 'length',
                      nodeType: 'MemberAccess',
                      src: '9998:12:59',
                      typeDescriptions: {
                        typeIdentifier: 't_uint256',
                        typeString: 'uint256',
                      },
                    },
                    src: '9983:27:59',
                    typeDescriptions: {
                      typeIdentifier: 't_bool',
                      typeString: 'bool',
                    },
                  },
                  id: 39764,
                  nodeType: 'IfStatement',
                  src: '9979:59:59',
                  trueBody: {
                    errorCall: {
                      arguments: [],
                      expression: {
                        argumentTypes: [],
                        id: 39761,
                        name: 'InvalidBatchInput',
                        nodeType: 'Identifier',
                        overloadedDeclarations: [],
                        referencedDeclaration: 39468,
                        src: '10019:17:59',
                        typeDescriptions: {
                          typeIdentifier: 't_function_error_pure$__$returns$__$',
                          typeString: 'function () pure',
                        },
                      },
                      id: 39762,
                      isConstant: false,
                      isLValue: false,
                      isPure: false,
                      kind: 'functionCall',
                      lValueRequested: false,
                      nameLocations: [],
                      names: [],
                      nodeType: 'FunctionCall',
                      src: '10019:19:59',
                      tryCall: false,
                      typeDescriptions: {
                        typeIdentifier: 't_tuple$__$',
                        typeString: 'tuple()',
                      },
                    },
                    id: 39763,
                    nodeType: 'RevertStatement',
                    src: '10012:26:59',
                  },
                },
                {
                  assignments: [39766],
                  declarations: [
                    {
                      constant: false,
                      id: 39766,
                      mutability: 'mutable',
                      name: '_usdPrice',
                      nameLocation: '10057:9:59',
                      nodeType: 'VariableDeclaration',
                      scope: 39866,
                      src: '10049:17:59',
                      stateVariable: false,
                      storageLocation: 'default',
                      typeDescriptions: {
                        typeIdentifier: 't_uint256',
                        typeString: 'uint256',
                      },
                      typeName: {
                        id: 39765,
                        name: 'uint256',
                        nodeType: 'ElementaryTypeName',
                        src: '10049:7:59',
                        typeDescriptions: {
                          typeIdentifier: 't_uint256',
                          typeString: 'uint256',
                        },
                      },
                      visibility: 'internal',
                    },
                  ],
                  id: 39768,
                  initialValue: {
                    id: 39767,
                    name: 'usdUnitPrice',
                    nodeType: 'Identifier',
                    overloadedDeclarations: [],
                    referencedDeclaration: 39564,
                    src: '10069:12:59',
                    typeDescriptions: {
                      typeIdentifier: 't_uint256',
                      typeString: 'uint256',
                    },
                  },
                  nodeType: 'VariableDeclarationStatement',
                  src: '10049:32:59',
                },
                {
                  assignments: [39770],
                  declarations: [
                    {
                      constant: false,
                      id: 39770,
                      mutability: 'mutable',
                      name: '_ethPrice',
                      nameLocation: '10099:9:59',
                      nodeType: 'VariableDeclaration',
                      scope: 39866,
                      src: '10091:17:59',
                      stateVariable: false,
                      storageLocation: 'default',
                      typeDescriptions: {
                        typeIdentifier: 't_uint256',
                        typeString: 'uint256',
                      },
                      typeName: {
                        id: 39769,
                        name: 'uint256',
                        nodeType: 'ElementaryTypeName',
                        src: '10091:7:59',
                        typeDescriptions: {
                          typeIdentifier: 't_uint256',
                          typeString: 'uint256',
                        },
                      },
                      visibility: 'internal',
                    },
                  ],
                  id: 39773,
                  initialValue: {
                    arguments: [],
                    expression: {
                      argumentTypes: [],
                      id: 39771,
                      name: '_ethUsdPrice',
                      nodeType: 'Identifier',
                      overloadedDeclarations: [],
                      referencedDeclaration: 39918,
                      src: '10111:12:59',
                      typeDescriptions: {
                        typeIdentifier: 't_function_internal_nonpayable$__$returns$_t_uint256_$',
                        typeString: 'function () returns (uint256)',
                      },
                    },
                    id: 39772,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    kind: 'functionCall',
                    lValueRequested: false,
                    nameLocations: [],
                    names: [],
                    nodeType: 'FunctionCall',
                    src: '10111:14:59',
                    tryCall: false,
                    typeDescriptions: {
                      typeIdentifier: 't_uint256',
                      typeString: 'uint256',
                    },
                  },
                  nodeType: 'VariableDeclarationStatement',
                  src: '10091:34:59',
                },
                {
                  assignments: [39775],
                  declarations: [
                    {
                      constant: false,
                      id: 39775,
                      mutability: 'mutable',
                      name: 'totalCost',
                      nameLocation: '10144:9:59',
                      nodeType: 'VariableDeclaration',
                      scope: 39866,
                      src: '10136:17:59',
                      stateVariable: false,
                      storageLocation: 'default',
                      typeDescriptions: {
                        typeIdentifier: 't_uint256',
                        typeString: 'uint256',
                      },
                      typeName: {
                        id: 39774,
                        name: 'uint256',
                        nodeType: 'ElementaryTypeName',
                        src: '10136:7:59',
                        typeDescriptions: {
                          typeIdentifier: 't_uint256',
                          typeString: 'uint256',
                        },
                      },
                      visibility: 'internal',
                    },
                  ],
                  id: 39776,
                  nodeType: 'VariableDeclarationStatement',
                  src: '10136:17:59',
                },
                {
                  body: {
                    id: 39828,
                    nodeType: 'Block',
                    src: '10201:296:59',
                    statements: [
                      {
                        assignments: [39788],
                        declarations: [
                          {
                            constant: false,
                            id: 39788,
                            mutability: 'mutable',
                            name: 'qty',
                            nameLocation: '10223:3:59',
                            nodeType: 'VariableDeclaration',
                            scope: 39828,
                            src: '10215:11:59',
                            stateVariable: false,
                            storageLocation: 'default',
                            typeDescriptions: {
                              typeIdentifier: 't_uint256',
                              typeString: 'uint256',
                            },
                            typeName: {
                              id: 39787,
                              name: 'uint256',
                              nodeType: 'ElementaryTypeName',
                              src: '10215:7:59',
                              typeDescriptions: {
                                typeIdentifier: 't_uint256',
                                typeString: 'uint256',
                              },
                            },
                            visibility: 'internal',
                          },
                        ],
                        id: 39792,
                        initialValue: {
                          baseExpression: {
                            id: 39789,
                            name: 'units',
                            nodeType: 'Identifier',
                            overloadedDeclarations: [],
                            referencedDeclaration: 39738,
                            src: '10229:5:59',
                            typeDescriptions: {
                              typeIdentifier: 't_array$_t_uint256_$dyn_calldata_ptr',
                              typeString: 'uint256[] calldata',
                            },
                          },
                          id: 39791,
                          indexExpression: {
                            id: 39790,
                            name: 'i',
                            nodeType: 'Identifier',
                            overloadedDeclarations: [],
                            referencedDeclaration: 39778,
                            src: '10235:1:59',
                            typeDescriptions: {
                              typeIdentifier: 't_uint256',
                              typeString: 'uint256',
                            },
                          },
                          isConstant: false,
                          isLValue: false,
                          isPure: false,
                          lValueRequested: false,
                          nodeType: 'IndexAccess',
                          src: '10229:8:59',
                          typeDescriptions: {
                            typeIdentifier: 't_uint256',
                            typeString: 'uint256',
                          },
                        },
                        nodeType: 'VariableDeclarationStatement',
                        src: '10215:22:59',
                      },
                      {
                        condition: {
                          commonType: {
                            typeIdentifier: 't_uint256',
                            typeString: 'uint256',
                          },
                          id: 39795,
                          isConstant: false,
                          isLValue: false,
                          isPure: false,
                          lValueRequested: false,
                          leftExpression: {
                            id: 39793,
                            name: 'qty',
                            nodeType: 'Identifier',
                            overloadedDeclarations: [],
                            referencedDeclaration: 39788,
                            src: '10255:3:59',
                            typeDescriptions: {
                              typeIdentifier: 't_uint256',
                              typeString: 'uint256',
                            },
                          },
                          nodeType: 'BinaryOperation',
                          operator: '==',
                          rightExpression: {
                            hexValue: '30',
                            id: 39794,
                            isConstant: false,
                            isLValue: false,
                            isPure: true,
                            kind: 'number',
                            lValueRequested: false,
                            nodeType: 'Literal',
                            src: '10262:1:59',
                            typeDescriptions: {
                              typeIdentifier: 't_rational_0_by_1',
                              typeString: 'int_const 0',
                            },
                            value: '0',
                          },
                          src: '10255:8:59',
                          typeDescriptions: {
                            typeIdentifier: 't_bool',
                            typeString: 'bool',
                          },
                        },
                        id: 39797,
                        nodeType: 'IfStatement',
                        src: '10251:22:59',
                        trueBody: {
                          id: 39796,
                          nodeType: 'Continue',
                          src: '10265:8:59',
                        },
                      },
                      {
                        condition: {
                          commonType: {
                            typeIdentifier: 't_uint256',
                            typeString: 'uint256',
                          },
                          id: 39802,
                          isConstant: false,
                          isLValue: false,
                          isPure: false,
                          lValueRequested: false,
                          leftExpression: {
                            commonType: {
                              typeIdentifier: 't_uint256',
                              typeString: 'uint256',
                            },
                            id: 39800,
                            isConstant: false,
                            isLValue: false,
                            isPure: false,
                            lValueRequested: false,
                            leftExpression: {
                              id: 39798,
                              name: 'rentedUnits',
                              nodeType: 'Identifier',
                              overloadedDeclarations: [],
                              referencedDeclaration: 39576,
                              src: '10291:11:59',
                              typeDescriptions: {
                                typeIdentifier: 't_uint256',
                                typeString: 'uint256',
                              },
                            },
                            nodeType: 'BinaryOperation',
                            operator: '+',
                            rightExpression: {
                              id: 39799,
                              name: 'qty',
                              nodeType: 'Identifier',
                              overloadedDeclarations: [],
                              referencedDeclaration: 39788,
                              src: '10305:3:59',
                              typeDescriptions: {
                                typeIdentifier: 't_uint256',
                                typeString: 'uint256',
                              },
                            },
                            src: '10291:17:59',
                            typeDescriptions: {
                              typeIdentifier: 't_uint256',
                              typeString: 'uint256',
                            },
                          },
                          nodeType: 'BinaryOperation',
                          operator: '>',
                          rightExpression: {
                            id: 39801,
                            name: 'maxUnits',
                            nodeType: 'Identifier',
                            overloadedDeclarations: [],
                            referencedDeclaration: 39567,
                            src: '10311:8:59',
                            typeDescriptions: {
                              typeIdentifier: 't_uint256',
                              typeString: 'uint256',
                            },
                          },
                          src: '10291:28:59',
                          typeDescriptions: {
                            typeIdentifier: 't_bool',
                            typeString: 'bool',
                          },
                        },
                        id: 39806,
                        nodeType: 'IfStatement',
                        src: '10287:58:59',
                        trueBody: {
                          errorCall: {
                            arguments: [],
                            expression: {
                              argumentTypes: [],
                              id: 39803,
                              name: 'ExceedsCapacity',
                              nodeType: 'Identifier',
                              overloadedDeclarations: [],
                              referencedDeclaration: 39462,
                              src: '10328:15:59',
                              typeDescriptions: {
                                typeIdentifier: 't_function_error_pure$__$returns$__$',
                                typeString: 'function () pure',
                              },
                            },
                            id: 39804,
                            isConstant: false,
                            isLValue: false,
                            isPure: false,
                            kind: 'functionCall',
                            lValueRequested: false,
                            nameLocations: [],
                            names: [],
                            nodeType: 'FunctionCall',
                            src: '10328:17:59',
                            tryCall: false,
                            typeDescriptions: {
                              typeIdentifier: 't_tuple$__$',
                              typeString: 'tuple()',
                            },
                          },
                          id: 39805,
                          nodeType: 'RevertStatement',
                          src: '10321:24:59',
                        },
                      },
                      {
                        expression: {
                          id: 39813,
                          isConstant: false,
                          isLValue: false,
                          isPure: false,
                          lValueRequested: false,
                          leftHandSide: {
                            id: 39807,
                            name: 'totalCost',
                            nodeType: 'Identifier',
                            overloadedDeclarations: [],
                            referencedDeclaration: 39775,
                            src: '10359:9:59',
                            typeDescriptions: {
                              typeIdentifier: 't_uint256',
                              typeString: 'uint256',
                            },
                          },
                          nodeType: 'Assignment',
                          operator: '+=',
                          rightHandSide: {
                            arguments: [
                              {
                                id: 39809,
                                name: 'qty',
                                nodeType: 'Identifier',
                                overloadedDeclarations: [],
                                referencedDeclaration: 39788,
                                src: '10379:3:59',
                                typeDescriptions: {
                                  typeIdentifier: 't_uint256',
                                  typeString: 'uint256',
                                },
                              },
                              {
                                id: 39810,
                                name: '_usdPrice',
                                nodeType: 'Identifier',
                                overloadedDeclarations: [],
                                referencedDeclaration: 39766,
                                src: '10384:9:59',
                                typeDescriptions: {
                                  typeIdentifier: 't_uint256',
                                  typeString: 'uint256',
                                },
                              },
                              {
                                id: 39811,
                                name: '_ethPrice',
                                nodeType: 'Identifier',
                                overloadedDeclarations: [],
                                referencedDeclaration: 39770,
                                src: '10395:9:59',
                                typeDescriptions: {
                                  typeIdentifier: 't_uint256',
                                  typeString: 'uint256',
                                },
                              },
                            ],
                            expression: {
                              argumentTypes: [
                                {
                                  typeIdentifier: 't_uint256',
                                  typeString: 'uint256',
                                },
                                {
                                  typeIdentifier: 't_uint256',
                                  typeString: 'uint256',
                                },
                                {
                                  typeIdentifier: 't_uint256',
                                  typeString: 'uint256',
                                },
                              ],
                              id: 39808,
                              name: '_price',
                              nodeType: 'Identifier',
                              overloadedDeclarations: [40044, 40065],
                              referencedDeclaration: 40065,
                              src: '10372:6:59',
                              typeDescriptions: {
                                typeIdentifier:
                                  't_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$',
                                typeString: 'function (uint256,uint256,uint256) pure returns (uint256)',
                              },
                            },
                            id: 39812,
                            isConstant: false,
                            isLValue: false,
                            isPure: false,
                            kind: 'functionCall',
                            lValueRequested: false,
                            nameLocations: [],
                            names: [],
                            nodeType: 'FunctionCall',
                            src: '10372:33:59',
                            tryCall: false,
                            typeDescriptions: {
                              typeIdentifier: 't_uint256',
                              typeString: 'uint256',
                            },
                          },
                          src: '10359:46:59',
                          typeDescriptions: {
                            typeIdentifier: 't_uint256',
                            typeString: 'uint256',
                          },
                        },
                        id: 39814,
                        nodeType: 'ExpressionStatement',
                        src: '10359:46:59',
                      },
                      {
                        expression: {
                          id: 39817,
                          isConstant: false,
                          isLValue: false,
                          isPure: false,
                          lValueRequested: false,
                          leftHandSide: {
                            id: 39815,
                            name: 'rentedUnits',
                            nodeType: 'Identifier',
                            overloadedDeclarations: [],
                            referencedDeclaration: 39576,
                            src: '10419:11:59',
                            typeDescriptions: {
                              typeIdentifier: 't_uint256',
                              typeString: 'uint256',
                            },
                          },
                          nodeType: 'Assignment',
                          operator: '+=',
                          rightHandSide: {
                            id: 39816,
                            name: 'qty',
                            nodeType: 'Identifier',
                            overloadedDeclarations: [],
                            referencedDeclaration: 39788,
                            src: '10434:3:59',
                            typeDescriptions: {
                              typeIdentifier: 't_uint256',
                              typeString: 'uint256',
                            },
                          },
                          src: '10419:18:59',
                          typeDescriptions: {
                            typeIdentifier: 't_uint256',
                            typeString: 'uint256',
                          },
                        },
                        id: 39818,
                        nodeType: 'ExpressionStatement',
                        src: '10419:18:59',
                      },
                      {
                        eventCall: {
                          arguments: [
                            {
                              expression: {
                                id: 39820,
                                name: 'msg',
                                nodeType: 'Identifier',
                                overloadedDeclarations: [],
                                referencedDeclaration: -15,
                                src: '10461:3:59',
                                typeDescriptions: {
                                  typeIdentifier: 't_magic_message',
                                  typeString: 'msg',
                                },
                              },
                              id: 39821,
                              isConstant: false,
                              isLValue: false,
                              isPure: false,
                              lValueRequested: false,
                              memberLocation: '10465:6:59',
                              memberName: 'sender',
                              nodeType: 'MemberAccess',
                              src: '10461:10:59',
                              typeDescriptions: {
                                typeIdentifier: 't_address',
                                typeString: 'address',
                              },
                            },
                            {
                              baseExpression: {
                                id: 39822,
                                name: 'fids',
                                nodeType: 'Identifier',
                                overloadedDeclarations: [],
                                referencedDeclaration: 39735,
                                src: '10473:4:59',
                                typeDescriptions: {
                                  typeIdentifier: 't_array$_t_uint256_$dyn_calldata_ptr',
                                  typeString: 'uint256[] calldata',
                                },
                              },
                              id: 39824,
                              indexExpression: {
                                id: 39823,
                                name: 'i',
                                nodeType: 'Identifier',
                                overloadedDeclarations: [],
                                referencedDeclaration: 39778,
                                src: '10478:1:59',
                                typeDescriptions: {
                                  typeIdentifier: 't_uint256',
                                  typeString: 'uint256',
                                },
                              },
                              isConstant: false,
                              isLValue: false,
                              isPure: false,
                              lValueRequested: false,
                              nodeType: 'IndexAccess',
                              src: '10473:7:59',
                              typeDescriptions: {
                                typeIdentifier: 't_uint256',
                                typeString: 'uint256',
                              },
                            },
                            {
                              id: 39825,
                              name: 'qty',
                              nodeType: 'Identifier',
                              overloadedDeclarations: [],
                              referencedDeclaration: 39788,
                              src: '10482:3:59',
                              typeDescriptions: {
                                typeIdentifier: 't_uint256',
                                typeString: 'uint256',
                              },
                            },
                          ],
                          expression: {
                            argumentTypes: [
                              {
                                typeIdentifier: 't_address',
                                typeString: 'address',
                              },
                              {
                                typeIdentifier: 't_uint256',
                                typeString: 'uint256',
                              },
                              {
                                typeIdentifier: 't_uint256',
                                typeString: 'uint256',
                              },
                            ],
                            id: 39819,
                            name: 'Rent',
                            nodeType: 'Identifier',
                            overloadedDeclarations: [],
                            referencedDeclaration: 39504,
                            src: '10456:4:59',
                            typeDescriptions: {
                              typeIdentifier:
                                't_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$',
                              typeString: 'function (address,uint256,uint256)',
                            },
                          },
                          id: 39826,
                          isConstant: false,
                          isLValue: false,
                          isPure: false,
                          kind: 'functionCall',
                          lValueRequested: false,
                          nameLocations: [],
                          names: [],
                          nodeType: 'FunctionCall',
                          src: '10456:30:59',
                          tryCall: false,
                          typeDescriptions: {
                            typeIdentifier: 't_tuple$__$',
                            typeString: 'tuple()',
                          },
                        },
                        id: 39827,
                        nodeType: 'EmitStatement',
                        src: '10451:35:59',
                      },
                    ],
                  },
                  condition: {
                    commonType: {
                      typeIdentifier: 't_uint256',
                      typeString: 'uint256',
                    },
                    id: 39783,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    lValueRequested: false,
                    leftExpression: {
                      id: 39780,
                      name: 'i',
                      nodeType: 'Identifier',
                      overloadedDeclarations: [],
                      referencedDeclaration: 39778,
                      src: '10179:1:59',
                      typeDescriptions: {
                        typeIdentifier: 't_uint256',
                        typeString: 'uint256',
                      },
                    },
                    nodeType: 'BinaryOperation',
                    operator: '<',
                    rightExpression: {
                      expression: {
                        id: 39781,
                        name: 'fids',
                        nodeType: 'Identifier',
                        overloadedDeclarations: [],
                        referencedDeclaration: 39735,
                        src: '10183:4:59',
                        typeDescriptions: {
                          typeIdentifier: 't_array$_t_uint256_$dyn_calldata_ptr',
                          typeString: 'uint256[] calldata',
                        },
                      },
                      id: 39782,
                      isConstant: false,
                      isLValue: false,
                      isPure: false,
                      lValueRequested: false,
                      memberLocation: '10188:6:59',
                      memberName: 'length',
                      nodeType: 'MemberAccess',
                      src: '10183:11:59',
                      typeDescriptions: {
                        typeIdentifier: 't_uint256',
                        typeString: 'uint256',
                      },
                    },
                    src: '10179:15:59',
                    typeDescriptions: {
                      typeIdentifier: 't_bool',
                      typeString: 'bool',
                    },
                  },
                  id: 39829,
                  initializationExpression: {
                    assignments: [39778],
                    declarations: [
                      {
                        constant: false,
                        id: 39778,
                        mutability: 'mutable',
                        name: 'i',
                        nameLocation: '10176:1:59',
                        nodeType: 'VariableDeclaration',
                        scope: 39829,
                        src: '10168:9:59',
                        stateVariable: false,
                        storageLocation: 'default',
                        typeDescriptions: {
                          typeIdentifier: 't_uint256',
                          typeString: 'uint256',
                        },
                        typeName: {
                          id: 39777,
                          name: 'uint256',
                          nodeType: 'ElementaryTypeName',
                          src: '10168:7:59',
                          typeDescriptions: {
                            typeIdentifier: 't_uint256',
                            typeString: 'uint256',
                          },
                        },
                        visibility: 'internal',
                      },
                    ],
                    id: 39779,
                    nodeType: 'VariableDeclarationStatement',
                    src: '10168:9:59',
                  },
                  loopExpression: {
                    expression: {
                      id: 39785,
                      isConstant: false,
                      isLValue: false,
                      isPure: false,
                      lValueRequested: false,
                      nodeType: 'UnaryOperation',
                      operator: '++',
                      prefix: true,
                      src: '10196:3:59',
                      subExpression: {
                        id: 39784,
                        name: 'i',
                        nodeType: 'Identifier',
                        overloadedDeclarations: [],
                        referencedDeclaration: 39778,
                        src: '10198:1:59',
                        typeDescriptions: {
                          typeIdentifier: 't_uint256',
                          typeString: 'uint256',
                        },
                      },
                      typeDescriptions: {
                        typeIdentifier: 't_uint256',
                        typeString: 'uint256',
                      },
                    },
                    id: 39786,
                    nodeType: 'ExpressionStatement',
                    src: '10196:3:59',
                  },
                  nodeType: 'ForStatement',
                  src: '10163:334:59',
                },
                {
                  condition: {
                    commonType: {
                      typeIdentifier: 't_uint256',
                      typeString: 'uint256',
                    },
                    id: 39833,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    lValueRequested: false,
                    leftExpression: {
                      expression: {
                        id: 39830,
                        name: 'msg',
                        nodeType: 'Identifier',
                        overloadedDeclarations: [],
                        referencedDeclaration: -15,
                        src: '10511:3:59',
                        typeDescriptions: {
                          typeIdentifier: 't_magic_message',
                          typeString: 'msg',
                        },
                      },
                      id: 39831,
                      isConstant: false,
                      isLValue: false,
                      isPure: false,
                      lValueRequested: false,
                      memberLocation: '10515:5:59',
                      memberName: 'value',
                      nodeType: 'MemberAccess',
                      src: '10511:9:59',
                      typeDescriptions: {
                        typeIdentifier: 't_uint256',
                        typeString: 'uint256',
                      },
                    },
                    nodeType: 'BinaryOperation',
                    operator: '<',
                    rightExpression: {
                      id: 39832,
                      name: 'totalCost',
                      nodeType: 'Identifier',
                      overloadedDeclarations: [],
                      referencedDeclaration: 39775,
                      src: '10523:9:59',
                      typeDescriptions: {
                        typeIdentifier: 't_uint256',
                        typeString: 'uint256',
                      },
                    },
                    src: '10511:21:59',
                    typeDescriptions: {
                      typeIdentifier: 't_bool',
                      typeString: 'bool',
                    },
                  },
                  id: 39837,
                  nodeType: 'IfStatement',
                  src: '10507:50:59',
                  trueBody: {
                    errorCall: {
                      arguments: [],
                      expression: {
                        argumentTypes: [],
                        id: 39834,
                        name: 'InvalidPayment',
                        nodeType: 'Identifier',
                        overloadedDeclarations: [],
                        referencedDeclaration: 39471,
                        src: '10541:14:59',
                        typeDescriptions: {
                          typeIdentifier: 't_function_error_pure$__$returns$__$',
                          typeString: 'function () pure',
                        },
                      },
                      id: 39835,
                      isConstant: false,
                      isLValue: false,
                      isPure: false,
                      kind: 'functionCall',
                      lValueRequested: false,
                      nameLocations: [],
                      names: [],
                      nodeType: 'FunctionCall',
                      src: '10541:16:59',
                      tryCall: false,
                      typeDescriptions: {
                        typeIdentifier: 't_tuple$__$',
                        typeString: 'tuple()',
                      },
                    },
                    id: 39836,
                    nodeType: 'RevertStatement',
                    src: '10534:23:59',
                  },
                },
                {
                  condition: {
                    commonType: {
                      typeIdentifier: 't_uint256',
                      typeString: 'uint256',
                    },
                    id: 39841,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    lValueRequested: false,
                    leftExpression: {
                      expression: {
                        id: 39838,
                        name: 'msg',
                        nodeType: 'Identifier',
                        overloadedDeclarations: [],
                        referencedDeclaration: -15,
                        src: '10571:3:59',
                        typeDescriptions: {
                          typeIdentifier: 't_magic_message',
                          typeString: 'msg',
                        },
                      },
                      id: 39839,
                      isConstant: false,
                      isLValue: false,
                      isPure: false,
                      lValueRequested: false,
                      memberLocation: '10575:5:59',
                      memberName: 'value',
                      nodeType: 'MemberAccess',
                      src: '10571:9:59',
                      typeDescriptions: {
                        typeIdentifier: 't_uint256',
                        typeString: 'uint256',
                      },
                    },
                    nodeType: 'BinaryOperation',
                    operator: '>',
                    rightExpression: {
                      id: 39840,
                      name: 'totalCost',
                      nodeType: 'Identifier',
                      overloadedDeclarations: [],
                      referencedDeclaration: 39775,
                      src: '10583:9:59',
                      typeDescriptions: {
                        typeIdentifier: 't_uint256',
                        typeString: 'uint256',
                      },
                    },
                    src: '10571:21:59',
                    typeDescriptions: {
                      typeIdentifier: 't_bool',
                      typeString: 'bool',
                    },
                  },
                  id: 39865,
                  nodeType: 'IfStatement',
                  src: '10567:175:59',
                  trueBody: {
                    id: 39864,
                    nodeType: 'Block',
                    src: '10594:148:59',
                    statements: [
                      {
                        assignments: [39843, null],
                        declarations: [
                          {
                            constant: false,
                            id: 39843,
                            mutability: 'mutable',
                            name: 'success',
                            nameLocation: '10614:7:59',
                            nodeType: 'VariableDeclaration',
                            scope: 39864,
                            src: '10609:12:59',
                            stateVariable: false,
                            storageLocation: 'default',
                            typeDescriptions: {
                              typeIdentifier: 't_bool',
                              typeString: 'bool',
                            },
                            typeName: {
                              id: 39842,
                              name: 'bool',
                              nodeType: 'ElementaryTypeName',
                              src: '10609:4:59',
                              typeDescriptions: {
                                typeIdentifier: 't_bool',
                                typeString: 'bool',
                              },
                            },
                            visibility: 'internal',
                          },
                          null,
                        ],
                        id: 39857,
                        initialValue: {
                          arguments: [
                            {
                              hexValue: '',
                              id: 39855,
                              isConstant: false,
                              isLValue: false,
                              isPure: true,
                              kind: 'string',
                              lValueRequested: false,
                              nodeType: 'Literal',
                              src: '10681:2:59',
                              typeDescriptions: {
                                typeIdentifier:
                                  't_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470',
                                typeString: 'literal_string ""',
                              },
                              value: '',
                            },
                          ],
                          expression: {
                            argumentTypes: [
                              {
                                typeIdentifier:
                                  't_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470',
                                typeString: 'literal_string ""',
                              },
                            ],
                            expression: {
                              argumentTypes: [
                                {
                                  typeIdentifier:
                                    't_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470',
                                  typeString: 'literal_string ""',
                                },
                              ],
                              expression: {
                                arguments: [
                                  {
                                    expression: {
                                      id: 39846,
                                      name: 'msg',
                                      nodeType: 'Identifier',
                                      overloadedDeclarations: [],
                                      referencedDeclaration: -15,
                                      src: '10634:3:59',
                                      typeDescriptions: {
                                        typeIdentifier: 't_magic_message',
                                        typeString: 'msg',
                                      },
                                    },
                                    id: 39847,
                                    isConstant: false,
                                    isLValue: false,
                                    isPure: false,
                                    lValueRequested: false,
                                    memberLocation: '10638:6:59',
                                    memberName: 'sender',
                                    nodeType: 'MemberAccess',
                                    src: '10634:10:59',
                                    typeDescriptions: {
                                      typeIdentifier: 't_address',
                                      typeString: 'address',
                                    },
                                  },
                                ],
                                expression: {
                                  argumentTypes: [
                                    {
                                      typeIdentifier: 't_address',
                                      typeString: 'address',
                                    },
                                  ],
                                  id: 39845,
                                  isConstant: false,
                                  isLValue: false,
                                  isPure: true,
                                  lValueRequested: false,
                                  nodeType: 'ElementaryTypeNameExpression',
                                  src: '10626:8:59',
                                  typeDescriptions: {
                                    typeIdentifier: 't_type$_t_address_payable_$',
                                    typeString: 'type(address payable)',
                                  },
                                  typeName: {
                                    id: 39844,
                                    name: 'address',
                                    nodeType: 'ElementaryTypeName',
                                    src: '10626:8:59',
                                    stateMutability: 'payable',
                                    typeDescriptions: {},
                                  },
                                },
                                id: 39848,
                                isConstant: false,
                                isLValue: false,
                                isPure: false,
                                kind: 'typeConversion',
                                lValueRequested: false,
                                nameLocations: [],
                                names: [],
                                nodeType: 'FunctionCall',
                                src: '10626:19:59',
                                tryCall: false,
                                typeDescriptions: {
                                  typeIdentifier: 't_address_payable',
                                  typeString: 'address payable',
                                },
                              },
                              id: 39849,
                              isConstant: false,
                              isLValue: false,
                              isPure: false,
                              lValueRequested: false,
                              memberLocation: '10646:4:59',
                              memberName: 'call',
                              nodeType: 'MemberAccess',
                              src: '10626:24:59',
                              typeDescriptions: {
                                typeIdentifier:
                                  't_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$',
                                typeString: 'function (bytes memory) payable returns (bool,bytes memory)',
                              },
                            },
                            id: 39854,
                            isConstant: false,
                            isLValue: false,
                            isPure: false,
                            lValueRequested: false,
                            names: ['value'],
                            nodeType: 'FunctionCallOptions',
                            options: [
                              {
                                commonType: {
                                  typeIdentifier: 't_uint256',
                                  typeString: 'uint256',
                                },
                                id: 39853,
                                isConstant: false,
                                isLValue: false,
                                isPure: false,
                                lValueRequested: false,
                                leftExpression: {
                                  expression: {
                                    id: 39850,
                                    name: 'msg',
                                    nodeType: 'Identifier',
                                    overloadedDeclarations: [],
                                    referencedDeclaration: -15,
                                    src: '10658:3:59',
                                    typeDescriptions: {
                                      typeIdentifier: 't_magic_message',
                                      typeString: 'msg',
                                    },
                                  },
                                  id: 39851,
                                  isConstant: false,
                                  isLValue: false,
                                  isPure: false,
                                  lValueRequested: false,
                                  memberLocation: '10662:5:59',
                                  memberName: 'value',
                                  nodeType: 'MemberAccess',
                                  src: '10658:9:59',
                                  typeDescriptions: {
                                    typeIdentifier: 't_uint256',
                                    typeString: 'uint256',
                                  },
                                },
                                nodeType: 'BinaryOperation',
                                operator: '-',
                                rightExpression: {
                                  id: 39852,
                                  name: 'totalCost',
                                  nodeType: 'Identifier',
                                  overloadedDeclarations: [],
                                  referencedDeclaration: 39775,
                                  src: '10670:9:59',
                                  typeDescriptions: {
                                    typeIdentifier: 't_uint256',
                                    typeString: 'uint256',
                                  },
                                },
                                src: '10658:21:59',
                                typeDescriptions: {
                                  typeIdentifier: 't_uint256',
                                  typeString: 'uint256',
                                },
                              },
                            ],
                            src: '10626:54:59',
                            typeDescriptions: {
                              typeIdentifier:
                                't_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value',
                              typeString: 'function (bytes memory) payable returns (bool,bytes memory)',
                            },
                          },
                          id: 39856,
                          isConstant: false,
                          isLValue: false,
                          isPure: false,
                          kind: 'functionCall',
                          lValueRequested: false,
                          nameLocations: [],
                          names: [],
                          nodeType: 'FunctionCall',
                          src: '10626:58:59',
                          tryCall: false,
                          typeDescriptions: {
                            typeIdentifier: 't_tuple$_t_bool_$_t_bytes_memory_ptr_$',
                            typeString: 'tuple(bool,bytes memory)',
                          },
                        },
                        nodeType: 'VariableDeclarationStatement',
                        src: '10608:76:59',
                      },
                      {
                        condition: {
                          id: 39859,
                          isConstant: false,
                          isLValue: false,
                          isPure: false,
                          lValueRequested: false,
                          nodeType: 'UnaryOperation',
                          operator: '!',
                          prefix: true,
                          src: '10702:8:59',
                          subExpression: {
                            id: 39858,
                            name: 'success',
                            nodeType: 'Identifier',
                            overloadedDeclarations: [],
                            referencedDeclaration: 39843,
                            src: '10703:7:59',
                            typeDescriptions: {
                              typeIdentifier: 't_bool',
                              typeString: 'bool',
                            },
                          },
                          typeDescriptions: {
                            typeIdentifier: 't_bool',
                            typeString: 'bool',
                          },
                        },
                        id: 39863,
                        nodeType: 'IfStatement',
                        src: '10698:33:59',
                        trueBody: {
                          errorCall: {
                            arguments: [],
                            expression: {
                              argumentTypes: [],
                              id: 39860,
                              name: 'CallFailed',
                              nodeType: 'Identifier',
                              overloadedDeclarations: [],
                              referencedDeclaration: 39477,
                              src: '10719:10:59',
                              typeDescriptions: {
                                typeIdentifier: 't_function_error_pure$__$returns$__$',
                                typeString: 'function () pure',
                              },
                            },
                            id: 39861,
                            isConstant: false,
                            isLValue: false,
                            isPure: false,
                            kind: 'functionCall',
                            lValueRequested: false,
                            nameLocations: [],
                            names: [],
                            nodeType: 'FunctionCall',
                            src: '10719:12:59',
                            tryCall: false,
                            typeDescriptions: {
                              typeIdentifier: 't_tuple$__$',
                              typeString: 'tuple()',
                            },
                          },
                          id: 39862,
                          nodeType: 'RevertStatement',
                          src: '10712:19:59',
                        },
                      },
                    ],
                  },
                },
              ],
            },
            documentation: {
              id: 39732,
              nodeType: 'StructuredDocumentation',
              src: '9448:332:59',
              text: " @notice Rent storage for multiple fids. The caller must provide an exact payment amount equal to\n         the sum of the prices for each fid's storage allocation.\n @param fids  An array of fids.\n @param units An array of storage unit quantities. Must be the same length as the fids array.",
            },
            functionSelector: 'a82c356e',
            implemented: true,
            kind: 'function',
            modifiers: [
              {
                id: 39741,
                kind: 'modifierInvocation',
                modifierName: {
                  id: 39740,
                  name: 'whenNotDeprecated',
                  nameLocations: ['9872:17:59'],
                  nodeType: 'IdentifierPath',
                  referencedDeclaration: 39651,
                  src: '9872:17:59',
                },
                nodeType: 'ModifierInvocation',
                src: '9872:17:59',
              },
            ],
            name: 'batchRent',
            nameLocation: '9794:9:59',
            parameters: {
              id: 39739,
              nodeType: 'ParameterList',
              parameters: [
                {
                  constant: false,
                  id: 39735,
                  mutability: 'mutable',
                  name: 'fids',
                  nameLocation: '9823:4:59',
                  nodeType: 'VariableDeclaration',
                  scope: 39867,
                  src: '9804:23:59',
                  stateVariable: false,
                  storageLocation: 'calldata',
                  typeDescriptions: {
                    typeIdentifier: 't_array$_t_uint256_$dyn_calldata_ptr',
                    typeString: 'uint256[]',
                  },
                  typeName: {
                    baseType: {
                      id: 39733,
                      name: 'uint256',
                      nodeType: 'ElementaryTypeName',
                      src: '9804:7:59',
                      typeDescriptions: {
                        typeIdentifier: 't_uint256',
                        typeString: 'uint256',
                      },
                    },
                    id: 39734,
                    nodeType: 'ArrayTypeName',
                    src: '9804:9:59',
                    typeDescriptions: {
                      typeIdentifier: 't_array$_t_uint256_$dyn_storage_ptr',
                      typeString: 'uint256[]',
                    },
                  },
                  visibility: 'internal',
                },
                {
                  constant: false,
                  id: 39738,
                  mutability: 'mutable',
                  name: 'units',
                  nameLocation: '9848:5:59',
                  nodeType: 'VariableDeclaration',
                  scope: 39867,
                  src: '9829:24:59',
                  stateVariable: false,
                  storageLocation: 'calldata',
                  typeDescriptions: {
                    typeIdentifier: 't_array$_t_uint256_$dyn_calldata_ptr',
                    typeString: 'uint256[]',
                  },
                  typeName: {
                    baseType: {
                      id: 39736,
                      name: 'uint256',
                      nodeType: 'ElementaryTypeName',
                      src: '9829:7:59',
                      typeDescriptions: {
                        typeIdentifier: 't_uint256',
                        typeString: 'uint256',
                      },
                    },
                    id: 39737,
                    nodeType: 'ArrayTypeName',
                    src: '9829:9:59',
                    typeDescriptions: {
                      typeIdentifier: 't_array$_t_uint256_$dyn_storage_ptr',
                      typeString: 'uint256[]',
                    },
                  },
                  visibility: 'internal',
                },
              ],
              src: '9803:51:59',
            },
            returnParameters: {
              id: 39742,
              nodeType: 'ParameterList',
              parameters: [],
              src: '9890:0:59',
            },
            scope: 40314,
            stateMutability: 'payable',
            virtual: false,
            visibility: 'external',
          },
          {
            id: 39878,
            nodeType: 'FunctionDefinition',
            src: '11040:85:59',
            nodes: [],
            body: {
              id: 39877,
              nodeType: 'Block',
              src: '11093:32:59',
              nodes: [],
              statements: [
                {
                  expression: {
                    arguments: [
                      {
                        hexValue: '31',
                        id: 39874,
                        isConstant: false,
                        isLValue: false,
                        isPure: true,
                        kind: 'number',
                        lValueRequested: false,
                        nodeType: 'Literal',
                        src: '11116:1:59',
                        typeDescriptions: {
                          typeIdentifier: 't_rational_1_by_1',
                          typeString: 'int_const 1',
                        },
                        value: '1',
                      },
                    ],
                    expression: {
                      argumentTypes: [
                        {
                          typeIdentifier: 't_rational_1_by_1',
                          typeString: 'int_const 1',
                        },
                      ],
                      id: 39873,
                      name: 'price',
                      nodeType: 'Identifier',
                      overloadedDeclarations: [],
                      referencedDeclaration: 39893,
                      src: '11110:5:59',
                      typeDescriptions: {
                        typeIdentifier: 't_function_internal_view$_t_uint256_$returns$_t_uint256_$',
                        typeString: 'function (uint256) view returns (uint256)',
                      },
                    },
                    id: 39875,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    kind: 'functionCall',
                    lValueRequested: false,
                    nameLocations: [],
                    names: [],
                    nodeType: 'FunctionCall',
                    src: '11110:8:59',
                    tryCall: false,
                    typeDescriptions: {
                      typeIdentifier: 't_uint256',
                      typeString: 'uint256',
                    },
                  },
                  functionReturnParameters: 39872,
                  id: 39876,
                  nodeType: 'Return',
                  src: '11103:15:59',
                },
              ],
            },
            documentation: {
              id: 39868,
              nodeType: 'StructuredDocumentation',
              src: '10935:100:59',
              text: ' @notice Cost in wei to rent one storage unit.\n @return uint256 cost in wei.',
            },
            functionSelector: 'e73faa2d',
            implemented: true,
            kind: 'function',
            modifiers: [],
            name: 'unitPrice',
            nameLocation: '11049:9:59',
            parameters: {
              id: 39869,
              nodeType: 'ParameterList',
              parameters: [],
              src: '11058:2:59',
            },
            returnParameters: {
              id: 39872,
              nodeType: 'ParameterList',
              parameters: [
                {
                  constant: false,
                  id: 39871,
                  mutability: 'mutable',
                  name: '',
                  nameLocation: '-1:-1:-1',
                  nodeType: 'VariableDeclaration',
                  scope: 39878,
                  src: '11084:7:59',
                  stateVariable: false,
                  storageLocation: 'default',
                  typeDescriptions: {
                    typeIdentifier: 't_uint256',
                    typeString: 'uint256',
                  },
                  typeName: {
                    id: 39870,
                    name: 'uint256',
                    nodeType: 'ElementaryTypeName',
                    src: '11084:7:59',
                    typeDescriptions: {
                      typeIdentifier: 't_uint256',
                      typeString: 'uint256',
                    },
                  },
                  visibility: 'internal',
                },
              ],
              src: '11083:9:59',
            },
            scope: 40314,
            stateMutability: 'view',
            virtual: false,
            visibility: 'external',
          },
          {
            id: 39893,
            nodeType: 'FunctionDefinition',
            src: '11319:124:59',
            nodes: [],
            body: {
              id: 39892,
              nodeType: 'Block',
              src: '11379:64:59',
              nodes: [],
              statements: [
                {
                  expression: {
                    arguments: [
                      {
                        id: 39887,
                        name: 'units',
                        nodeType: 'Identifier',
                        overloadedDeclarations: [],
                        referencedDeclaration: 39881,
                        src: '11403:5:59',
                        typeDescriptions: {
                          typeIdentifier: 't_uint256',
                          typeString: 'uint256',
                        },
                      },
                      {
                        id: 39888,
                        name: 'usdUnitPrice',
                        nodeType: 'Identifier',
                        overloadedDeclarations: [],
                        referencedDeclaration: 39564,
                        src: '11410:12:59',
                        typeDescriptions: {
                          typeIdentifier: 't_uint256',
                          typeString: 'uint256',
                        },
                      },
                      {
                        id: 39889,
                        name: 'ethUsdPrice',
                        nodeType: 'Identifier',
                        overloadedDeclarations: [],
                        referencedDeclaration: 39579,
                        src: '11424:11:59',
                        typeDescriptions: {
                          typeIdentifier: 't_uint256',
                          typeString: 'uint256',
                        },
                      },
                    ],
                    expression: {
                      argumentTypes: [
                        {
                          typeIdentifier: 't_uint256',
                          typeString: 'uint256',
                        },
                        {
                          typeIdentifier: 't_uint256',
                          typeString: 'uint256',
                        },
                        {
                          typeIdentifier: 't_uint256',
                          typeString: 'uint256',
                        },
                      ],
                      id: 39886,
                      name: '_price',
                      nodeType: 'Identifier',
                      overloadedDeclarations: [40044, 40065],
                      referencedDeclaration: 40065,
                      src: '11396:6:59',
                      typeDescriptions: {
                        typeIdentifier:
                          't_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$',
                        typeString: 'function (uint256,uint256,uint256) pure returns (uint256)',
                      },
                    },
                    id: 39890,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    kind: 'functionCall',
                    lValueRequested: false,
                    nameLocations: [],
                    names: [],
                    nodeType: 'FunctionCall',
                    src: '11396:40:59',
                    tryCall: false,
                    typeDescriptions: {
                      typeIdentifier: 't_uint256',
                      typeString: 'uint256',
                    },
                  },
                  functionReturnParameters: 39885,
                  id: 39891,
                  nodeType: 'Return',
                  src: '11389:47:59',
                },
              ],
            },
            documentation: {
              id: 39879,
              nodeType: 'StructuredDocumentation',
              src: '11131:183:59',
              text: ' @notice Calculate the cost in wei to rent the given number of storage units.\n @param units Number of storage units.\n @return uint256 cost in wei.',
            },
            functionSelector: '26a49e37',
            implemented: true,
            kind: 'function',
            modifiers: [],
            name: 'price',
            nameLocation: '11328:5:59',
            parameters: {
              id: 39882,
              nodeType: 'ParameterList',
              parameters: [
                {
                  constant: false,
                  id: 39881,
                  mutability: 'mutable',
                  name: 'units',
                  nameLocation: '11342:5:59',
                  nodeType: 'VariableDeclaration',
                  scope: 39893,
                  src: '11334:13:59',
                  stateVariable: false,
                  storageLocation: 'default',
                  typeDescriptions: {
                    typeIdentifier: 't_uint256',
                    typeString: 'uint256',
                  },
                  typeName: {
                    id: 39880,
                    name: 'uint256',
                    nodeType: 'ElementaryTypeName',
                    src: '11334:7:59',
                    typeDescriptions: {
                      typeIdentifier: 't_uint256',
                      typeString: 'uint256',
                    },
                  },
                  visibility: 'internal',
                },
              ],
              src: '11333:15:59',
            },
            returnParameters: {
              id: 39885,
              nodeType: 'ParameterList',
              parameters: [
                {
                  constant: false,
                  id: 39884,
                  mutability: 'mutable',
                  name: '',
                  nameLocation: '-1:-1:-1',
                  nodeType: 'VariableDeclaration',
                  scope: 39893,
                  src: '11370:7:59',
                  stateVariable: false,
                  storageLocation: 'default',
                  typeDescriptions: {
                    typeIdentifier: 't_uint256',
                    typeString: 'uint256',
                  },
                  typeName: {
                    id: 39883,
                    name: 'uint256',
                    nodeType: 'ElementaryTypeName',
                    src: '11370:7:59',
                    typeDescriptions: {
                      typeIdentifier: 't_uint256',
                      typeString: 'uint256',
                    },
                  },
                  visibility: 'internal',
                },
              ],
              src: '11369:9:59',
            },
            scope: 40314,
            stateMutability: 'view',
            virtual: false,
            visibility: 'public',
          },
          {
            id: 39918,
            nodeType: 'FunctionDefinition',
            src: '11621:468:59',
            nodes: [],
            body: {
              id: 39917,
              nodeType: 'Block',
              src: '11672:417:59',
              nodes: [],
              statements: [
                {
                  condition: {
                    commonType: {
                      typeIdentifier: 't_uint256',
                      typeString: 'uint256',
                    },
                    id: 39904,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    lValueRequested: false,
                    leftExpression: {
                      commonType: {
                        typeIdentifier: 't_uint256',
                        typeString: 'uint256',
                      },
                      id: 39902,
                      isConstant: false,
                      isLValue: false,
                      isPure: false,
                      lValueRequested: false,
                      leftExpression: {
                        expression: {
                          id: 39899,
                          name: 'block',
                          nodeType: 'Identifier',
                          overloadedDeclarations: [],
                          referencedDeclaration: -4,
                          src: '11686:5:59',
                          typeDescriptions: {
                            typeIdentifier: 't_magic_block',
                            typeString: 'block',
                          },
                        },
                        id: 39900,
                        isConstant: false,
                        isLValue: false,
                        isPure: false,
                        lValueRequested: false,
                        memberLocation: '11692:9:59',
                        memberName: 'timestamp',
                        nodeType: 'MemberAccess',
                        src: '11686:15:59',
                        typeDescriptions: {
                          typeIdentifier: 't_uint256',
                          typeString: 'uint256',
                        },
                      },
                      nodeType: 'BinaryOperation',
                      operator: '-',
                      rightExpression: {
                        id: 39901,
                        name: 'lastPriceFeedUpdate',
                        nodeType: 'Identifier',
                        overloadedDeclarations: [],
                        referencedDeclaration: 39582,
                        src: '11704:19:59',
                        typeDescriptions: {
                          typeIdentifier: 't_uint256',
                          typeString: 'uint256',
                        },
                      },
                      src: '11686:37:59',
                      typeDescriptions: {
                        typeIdentifier: 't_uint256',
                        typeString: 'uint256',
                      },
                    },
                    nodeType: 'BinaryOperation',
                    operator: '>',
                    rightExpression: {
                      id: 39903,
                      name: 'priceFeedCacheDuration',
                      nodeType: 'Identifier',
                      overloadedDeclarations: [],
                      referencedDeclaration: 39570,
                      src: '11726:22:59',
                      typeDescriptions: {
                        typeIdentifier: 't_uint256',
                        typeString: 'uint256',
                      },
                    },
                    src: '11686:62:59',
                    typeDescriptions: {
                      typeIdentifier: 't_bool',
                      typeString: 'bool',
                    },
                  },
                  falseBody: {
                    id: 39915,
                    nodeType: 'Block',
                    src: '12040:43:59',
                    statements: [
                      {
                        expression: {
                          id: 39913,
                          name: 'ethUsdPrice',
                          nodeType: 'Identifier',
                          overloadedDeclarations: [],
                          referencedDeclaration: 39579,
                          src: '12061:11:59',
                          typeDescriptions: {
                            typeIdentifier: 't_uint256',
                            typeString: 'uint256',
                          },
                        },
                        functionReturnParameters: 39898,
                        id: 39914,
                        nodeType: 'Return',
                        src: '12054:18:59',
                      },
                    ],
                  },
                  id: 39916,
                  nodeType: 'IfStatement',
                  src: '11682:401:59',
                  trueBody: {
                    id: 39912,
                    nodeType: 'Block',
                    src: '11750:284:59',
                    statements: [
                      {
                        assignments: [39906, null],
                        declarations: [
                          {
                            constant: false,
                            id: 39906,
                            mutability: 'mutable',
                            name: 'cachedPrice',
                            nameLocation: '11960:11:59',
                            nodeType: 'VariableDeclaration',
                            scope: 39912,
                            src: '11952:19:59',
                            stateVariable: false,
                            storageLocation: 'default',
                            typeDescriptions: {
                              typeIdentifier: 't_uint256',
                              typeString: 'uint256',
                            },
                            typeName: {
                              id: 39905,
                              name: 'uint256',
                              nodeType: 'ElementaryTypeName',
                              src: '11952:7:59',
                              typeDescriptions: {
                                typeIdentifier: 't_uint256',
                                typeString: 'uint256',
                              },
                            },
                            visibility: 'internal',
                          },
                          null,
                        ],
                        documentation:
                          '  The call to _refreshPrice will cache the new price in storage\n  for the next call, but we honor the old price for this call.',
                        id: 39909,
                        initialValue: {
                          arguments: [],
                          expression: {
                            argumentTypes: [],
                            id: 39907,
                            name: '_refreshPrice',
                            nodeType: 'Identifier',
                            overloadedDeclarations: [],
                            referencedDeclaration: 40029,
                            src: '11976:13:59',
                            typeDescriptions: {
                              typeIdentifier: 't_function_internal_nonpayable$__$returns$_t_uint256_$_t_uint256_$',
                              typeString: 'function () returns (uint256,uint256)',
                            },
                          },
                          id: 39908,
                          isConstant: false,
                          isLValue: false,
                          isPure: false,
                          kind: 'functionCall',
                          lValueRequested: false,
                          nameLocations: [],
                          names: [],
                          nodeType: 'FunctionCall',
                          src: '11976:15:59',
                          tryCall: false,
                          typeDescriptions: {
                            typeIdentifier: 't_tuple$_t_uint256_$_t_uint256_$',
                            typeString: 'tuple(uint256,uint256)',
                          },
                        },
                        nodeType: 'VariableDeclarationStatement',
                        src: '11951:40:59',
                      },
                      {
                        expression: {
                          id: 39910,
                          name: 'cachedPrice',
                          nodeType: 'Identifier',
                          overloadedDeclarations: [],
                          referencedDeclaration: 39906,
                          src: '12012:11:59',
                          typeDescriptions: {
                            typeIdentifier: 't_uint256',
                            typeString: 'uint256',
                          },
                        },
                        functionReturnParameters: 39898,
                        id: 39911,
                        nodeType: 'Return',
                        src: '12005:18:59',
                      },
                    ],
                  },
                },
              ],
            },
            documentation: {
              id: 39894,
              nodeType: 'StructuredDocumentation',
              src: '11449:167:59',
              text: " @dev Return the cached ethUsdPrice if it's still valid, otherwise get the\n      latest ETH/USD price from the price feed and update the cache.",
            },
            implemented: true,
            kind: 'function',
            modifiers: [],
            name: '_ethUsdPrice',
            nameLocation: '11630:12:59',
            parameters: {
              id: 39895,
              nodeType: 'ParameterList',
              parameters: [],
              src: '11642:2:59',
            },
            returnParameters: {
              id: 39898,
              nodeType: 'ParameterList',
              parameters: [
                {
                  constant: false,
                  id: 39897,
                  mutability: 'mutable',
                  name: '',
                  nameLocation: '-1:-1:-1',
                  nodeType: 'VariableDeclaration',
                  scope: 39918,
                  src: '11663:7:59',
                  stateVariable: false,
                  storageLocation: 'default',
                  typeDescriptions: {
                    typeIdentifier: 't_uint256',
                    typeString: 'uint256',
                  },
                  typeName: {
                    id: 39896,
                    name: 'uint256',
                    nodeType: 'ElementaryTypeName',
                    src: '11663:7:59',
                    typeDescriptions: {
                      typeIdentifier: 't_uint256',
                      typeString: 'uint256',
                    },
                  },
                  visibility: 'internal',
                },
              ],
              src: '11662:9:59',
            },
            scope: 40314,
            stateMutability: 'nonpayable',
            virtual: false,
            visibility: 'internal',
          },
          {
            id: 40029,
            nodeType: 'FunctionDefinition',
            src: '12201:1333:59',
            nodes: [],
            body: {
              id: 40028,
              nodeType: 'Block',
              src: '12283:1251:59',
              nodes: [],
              statements: [
                {
                  assignments: [39927, 39929, 39931, 39933, 39935],
                  declarations: [
                    {
                      constant: false,
                      id: 39927,
                      mutability: 'mutable',
                      name: 'uptimeRoundId',
                      nameLocation: '12370:13:59',
                      nodeType: 'VariableDeclaration',
                      scope: 40028,
                      src: '12363:20:59',
                      stateVariable: false,
                      storageLocation: 'default',
                      typeDescriptions: {
                        typeIdentifier: 't_uint80',
                        typeString: 'uint80',
                      },
                      typeName: {
                        id: 39926,
                        name: 'uint80',
                        nodeType: 'ElementaryTypeName',
                        src: '12363:6:59',
                        typeDescriptions: {
                          typeIdentifier: 't_uint80',
                          typeString: 'uint80',
                        },
                      },
                      visibility: 'internal',
                    },
                    {
                      constant: false,
                      id: 39929,
                      mutability: 'mutable',
                      name: 'sequencerUp',
                      nameLocation: '12404:11:59',
                      nodeType: 'VariableDeclaration',
                      scope: 40028,
                      src: '12397:18:59',
                      stateVariable: false,
                      storageLocation: 'default',
                      typeDescriptions: {
                        typeIdentifier: 't_int256',
                        typeString: 'int256',
                      },
                      typeName: {
                        id: 39928,
                        name: 'int256',
                        nodeType: 'ElementaryTypeName',
                        src: '12397:6:59',
                        typeDescriptions: {
                          typeIdentifier: 't_int256',
                          typeString: 'int256',
                        },
                      },
                      visibility: 'internal',
                    },
                    {
                      constant: false,
                      id: 39931,
                      mutability: 'mutable',
                      name: 'uptimeStartedAt',
                      nameLocation: '12437:15:59',
                      nodeType: 'VariableDeclaration',
                      scope: 40028,
                      src: '12429:23:59',
                      stateVariable: false,
                      storageLocation: 'default',
                      typeDescriptions: {
                        typeIdentifier: 't_uint256',
                        typeString: 'uint256',
                      },
                      typeName: {
                        id: 39930,
                        name: 'uint256',
                        nodeType: 'ElementaryTypeName',
                        src: '12429:7:59',
                        typeDescriptions: {
                          typeIdentifier: 't_uint256',
                          typeString: 'uint256',
                        },
                      },
                      visibility: 'internal',
                    },
                    {
                      constant: false,
                      id: 39933,
                      mutability: 'mutable',
                      name: 'uptimeUpdatedAt',
                      nameLocation: '12474:15:59',
                      nodeType: 'VariableDeclaration',
                      scope: 40028,
                      src: '12466:23:59',
                      stateVariable: false,
                      storageLocation: 'default',
                      typeDescriptions: {
                        typeIdentifier: 't_uint256',
                        typeString: 'uint256',
                      },
                      typeName: {
                        id: 39932,
                        name: 'uint256',
                        nodeType: 'ElementaryTypeName',
                        src: '12466:7:59',
                        typeDescriptions: {
                          typeIdentifier: 't_uint256',
                          typeString: 'uint256',
                        },
                      },
                      visibility: 'internal',
                    },
                    {
                      constant: false,
                      id: 39935,
                      mutability: 'mutable',
                      name: 'uptimeAnsweredInRound',
                      nameLocation: '12510:21:59',
                      nodeType: 'VariableDeclaration',
                      scope: 40028,
                      src: '12503:28:59',
                      stateVariable: false,
                      storageLocation: 'default',
                      typeDescriptions: {
                        typeIdentifier: 't_uint80',
                        typeString: 'uint80',
                      },
                      typeName: {
                        id: 39934,
                        name: 'uint80',
                        nodeType: 'ElementaryTypeName',
                        src: '12503:6:59',
                        typeDescriptions: {
                          typeIdentifier: 't_uint80',
                          typeString: 'uint80',
                        },
                      },
                      visibility: 'internal',
                    },
                  ],
                  id: 39939,
                  initialValue: {
                    arguments: [],
                    expression: {
                      argumentTypes: [],
                      expression: {
                        id: 39936,
                        name: 'uptimeFeed',
                        nodeType: 'Identifier',
                        overloadedDeclarations: [],
                        referencedDeclaration: 39558,
                        src: '12544:10:59',
                        typeDescriptions: {
                          typeIdentifier: 't_contract$_AggregatorV3Interface_$45',
                          typeString: 'contract AggregatorV3Interface',
                        },
                      },
                      id: 39937,
                      isConstant: false,
                      isLValue: false,
                      isPure: false,
                      lValueRequested: false,
                      memberLocation: '12555:15:59',
                      memberName: 'latestRoundData',
                      nodeType: 'MemberAccess',
                      referencedDeclaration: 44,
                      src: '12544:26:59',
                      typeDescriptions: {
                        typeIdentifier:
                          't_function_external_view$__$returns$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$',
                        typeString: 'function () view external returns (uint80,int256,uint256,uint256,uint80)',
                      },
                    },
                    id: 39938,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    kind: 'functionCall',
                    lValueRequested: false,
                    nameLocations: [],
                    names: [],
                    nodeType: 'FunctionCall',
                    src: '12544:28:59',
                    tryCall: false,
                    typeDescriptions: {
                      typeIdentifier: 't_tuple$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$',
                      typeString: 'tuple(uint80,int256,uint256,uint256,uint80)',
                    },
                  },
                  nodeType: 'VariableDeclarationStatement',
                  src: '12349:223:59',
                },
                {
                  condition: {
                    commonType: {
                      typeIdentifier: 't_int256',
                      typeString: 'int256',
                    },
                    id: 39942,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    lValueRequested: false,
                    leftExpression: {
                      id: 39940,
                      name: 'sequencerUp',
                      nodeType: 'Identifier',
                      overloadedDeclarations: [],
                      referencedDeclaration: 39929,
                      src: '12586:11:59',
                      typeDescriptions: {
                        typeIdentifier: 't_int256',
                        typeString: 'int256',
                      },
                    },
                    nodeType: 'BinaryOperation',
                    operator: '!=',
                    rightExpression: {
                      hexValue: '30',
                      id: 39941,
                      isConstant: false,
                      isLValue: false,
                      isPure: true,
                      kind: 'number',
                      lValueRequested: false,
                      nodeType: 'Literal',
                      src: '12601:1:59',
                      typeDescriptions: {
                        typeIdentifier: 't_rational_0_by_1',
                        typeString: 'int_const 0',
                      },
                      value: '0',
                    },
                    src: '12586:16:59',
                    typeDescriptions: {
                      typeIdentifier: 't_bool',
                      typeString: 'bool',
                    },
                  },
                  id: 39946,
                  nodeType: 'IfStatement',
                  src: '12582:44:59',
                  trueBody: {
                    errorCall: {
                      arguments: [],
                      expression: {
                        argumentTypes: [],
                        id: 39943,
                        name: 'SequencerDown',
                        nodeType: 'Identifier',
                        overloadedDeclarations: [],
                        referencedDeclaration: 39489,
                        src: '12611:13:59',
                        typeDescriptions: {
                          typeIdentifier: 't_function_error_pure$__$returns$__$',
                          typeString: 'function () pure',
                        },
                      },
                      id: 39944,
                      isConstant: false,
                      isLValue: false,
                      isPure: false,
                      kind: 'functionCall',
                      lValueRequested: false,
                      nameLocations: [],
                      names: [],
                      nodeType: 'FunctionCall',
                      src: '12611:15:59',
                      tryCall: false,
                      typeDescriptions: {
                        typeIdentifier: 't_tuple$__$',
                        typeString: 'tuple()',
                      },
                    },
                    id: 39945,
                    nodeType: 'RevertStatement',
                    src: '12604:22:59',
                  },
                },
                {
                  condition: {
                    commonType: {
                      typeIdentifier: 't_uint256',
                      typeString: 'uint256',
                    },
                    id: 39949,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    lValueRequested: false,
                    leftExpression: {
                      id: 39947,
                      name: 'uptimeUpdatedAt',
                      nodeType: 'Identifier',
                      overloadedDeclarations: [],
                      referencedDeclaration: 39933,
                      src: '12640:15:59',
                      typeDescriptions: {
                        typeIdentifier: 't_uint256',
                        typeString: 'uint256',
                      },
                    },
                    nodeType: 'BinaryOperation',
                    operator: '==',
                    rightExpression: {
                      hexValue: '30',
                      id: 39948,
                      isConstant: false,
                      isLValue: false,
                      isPure: true,
                      kind: 'number',
                      lValueRequested: false,
                      nodeType: 'Literal',
                      src: '12659:1:59',
                      typeDescriptions: {
                        typeIdentifier: 't_rational_0_by_1',
                        typeString: 'int_const 0',
                      },
                      value: '0',
                    },
                    src: '12640:20:59',
                    typeDescriptions: {
                      typeIdentifier: 't_bool',
                      typeString: 'bool',
                    },
                  },
                  id: 39953,
                  nodeType: 'IfStatement',
                  src: '12636:50:59',
                  trueBody: {
                    errorCall: {
                      arguments: [],
                      expression: {
                        argumentTypes: [],
                        id: 39950,
                        name: 'IncompleteRound',
                        nodeType: 'Identifier',
                        overloadedDeclarations: [],
                        referencedDeclaration: 39483,
                        src: '12669:15:59',
                        typeDescriptions: {
                          typeIdentifier: 't_function_error_pure$__$returns$__$',
                          typeString: 'function () pure',
                        },
                      },
                      id: 39951,
                      isConstant: false,
                      isLValue: false,
                      isPure: false,
                      kind: 'functionCall',
                      lValueRequested: false,
                      nameLocations: [],
                      names: [],
                      nodeType: 'FunctionCall',
                      src: '12669:17:59',
                      tryCall: false,
                      typeDescriptions: {
                        typeIdentifier: 't_tuple$__$',
                        typeString: 'tuple()',
                      },
                    },
                    id: 39952,
                    nodeType: 'RevertStatement',
                    src: '12662:24:59',
                  },
                },
                {
                  condition: {
                    commonType: {
                      typeIdentifier: 't_uint80',
                      typeString: 'uint80',
                    },
                    id: 39956,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    lValueRequested: false,
                    leftExpression: {
                      id: 39954,
                      name: 'uptimeAnsweredInRound',
                      nodeType: 'Identifier',
                      overloadedDeclarations: [],
                      referencedDeclaration: 39935,
                      src: '12700:21:59',
                      typeDescriptions: {
                        typeIdentifier: 't_uint80',
                        typeString: 'uint80',
                      },
                    },
                    nodeType: 'BinaryOperation',
                    operator: '<',
                    rightExpression: {
                      id: 39955,
                      name: 'uptimeRoundId',
                      nodeType: 'Identifier',
                      overloadedDeclarations: [],
                      referencedDeclaration: 39927,
                      src: '12724:13:59',
                      typeDescriptions: {
                        typeIdentifier: 't_uint80',
                        typeString: 'uint80',
                      },
                    },
                    src: '12700:37:59',
                    typeDescriptions: {
                      typeIdentifier: 't_bool',
                      typeString: 'bool',
                    },
                  },
                  id: 39960,
                  nodeType: 'IfStatement',
                  src: '12696:63:59',
                  trueBody: {
                    errorCall: {
                      arguments: [],
                      expression: {
                        argumentTypes: [],
                        id: 39957,
                        name: 'StaleAnswer',
                        nodeType: 'Identifier',
                        overloadedDeclarations: [],
                        referencedDeclaration: 39480,
                        src: '12746:11:59',
                        typeDescriptions: {
                          typeIdentifier: 't_function_error_pure$__$returns$__$',
                          typeString: 'function () pure',
                        },
                      },
                      id: 39958,
                      isConstant: false,
                      isLValue: false,
                      isPure: false,
                      kind: 'functionCall',
                      lValueRequested: false,
                      nameLocations: [],
                      names: [],
                      nodeType: 'FunctionCall',
                      src: '12746:13:59',
                      tryCall: false,
                      typeDescriptions: {
                        typeIdentifier: 't_tuple$__$',
                        typeString: 'tuple()',
                      },
                    },
                    id: 39959,
                    nodeType: 'RevertStatement',
                    src: '12739:20:59',
                  },
                },
                {
                  assignments: [39962],
                  declarations: [
                    {
                      constant: false,
                      id: 39962,
                      mutability: 'mutable',
                      name: 'timeSinceUp',
                      nameLocation: '12869:11:59',
                      nodeType: 'VariableDeclaration',
                      scope: 40028,
                      src: '12861:19:59',
                      stateVariable: false,
                      storageLocation: 'default',
                      typeDescriptions: {
                        typeIdentifier: 't_uint256',
                        typeString: 'uint256',
                      },
                      typeName: {
                        id: 39961,
                        name: 'uint256',
                        nodeType: 'ElementaryTypeName',
                        src: '12861:7:59',
                        typeDescriptions: {
                          typeIdentifier: 't_uint256',
                          typeString: 'uint256',
                        },
                      },
                      visibility: 'internal',
                    },
                  ],
                  id: 39967,
                  initialValue: {
                    commonType: {
                      typeIdentifier: 't_uint256',
                      typeString: 'uint256',
                    },
                    id: 39966,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    lValueRequested: false,
                    leftExpression: {
                      expression: {
                        id: 39963,
                        name: 'block',
                        nodeType: 'Identifier',
                        overloadedDeclarations: [],
                        referencedDeclaration: -4,
                        src: '12883:5:59',
                        typeDescriptions: {
                          typeIdentifier: 't_magic_block',
                          typeString: 'block',
                        },
                      },
                      id: 39964,
                      isConstant: false,
                      isLValue: false,
                      isPure: false,
                      lValueRequested: false,
                      memberLocation: '12889:9:59',
                      memberName: 'timestamp',
                      nodeType: 'MemberAccess',
                      src: '12883:15:59',
                      typeDescriptions: {
                        typeIdentifier: 't_uint256',
                        typeString: 'uint256',
                      },
                    },
                    nodeType: 'BinaryOperation',
                    operator: '-',
                    rightExpression: {
                      id: 39965,
                      name: 'uptimeStartedAt',
                      nodeType: 'Identifier',
                      overloadedDeclarations: [],
                      referencedDeclaration: 39931,
                      src: '12901:15:59',
                      typeDescriptions: {
                        typeIdentifier: 't_uint256',
                        typeString: 'uint256',
                      },
                    },
                    src: '12883:33:59',
                    typeDescriptions: {
                      typeIdentifier: 't_uint256',
                      typeString: 'uint256',
                    },
                  },
                  nodeType: 'VariableDeclarationStatement',
                  src: '12861:55:59',
                },
                {
                  condition: {
                    commonType: {
                      typeIdentifier: 't_uint256',
                      typeString: 'uint256',
                    },
                    id: 39970,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    lValueRequested: false,
                    leftExpression: {
                      id: 39968,
                      name: 'timeSinceUp',
                      nodeType: 'Identifier',
                      overloadedDeclarations: [],
                      referencedDeclaration: 39962,
                      src: '12930:11:59',
                      typeDescriptions: {
                        typeIdentifier: 't_uint256',
                        typeString: 'uint256',
                      },
                    },
                    nodeType: 'BinaryOperation',
                    operator: '<',
                    rightExpression: {
                      id: 39969,
                      name: 'uptimeFeedGracePeriod',
                      nodeType: 'Identifier',
                      overloadedDeclarations: [],
                      referencedDeclaration: 39573,
                      src: '12944:21:59',
                      typeDescriptions: {
                        typeIdentifier: 't_uint256',
                        typeString: 'uint256',
                      },
                    },
                    src: '12930:35:59',
                    typeDescriptions: {
                      typeIdentifier: 't_bool',
                      typeString: 'bool',
                    },
                  },
                  id: 39974,
                  nodeType: 'IfStatement',
                  src: '12926:68:59',
                  trueBody: {
                    errorCall: {
                      arguments: [],
                      expression: {
                        argumentTypes: [],
                        id: 39971,
                        name: 'GracePeriodNotOver',
                        nodeType: 'Identifier',
                        overloadedDeclarations: [],
                        referencedDeclaration: 39492,
                        src: '12974:18:59',
                        typeDescriptions: {
                          typeIdentifier: 't_function_error_pure$__$returns$__$',
                          typeString: 'function () pure',
                        },
                      },
                      id: 39972,
                      isConstant: false,
                      isLValue: false,
                      isPure: false,
                      kind: 'functionCall',
                      lValueRequested: false,
                      nameLocations: [],
                      names: [],
                      nodeType: 'FunctionCall',
                      src: '12974:20:59',
                      tryCall: false,
                      typeDescriptions: {
                        typeIdentifier: 't_tuple$__$',
                        typeString: 'tuple()',
                      },
                    },
                    id: 39973,
                    nodeType: 'RevertStatement',
                    src: '12967:27:59',
                  },
                },
                {
                  assignments: [39976, 39978, null, 39980, 39982],
                  declarations: [
                    {
                      constant: false,
                      id: 39976,
                      mutability: 'mutable',
                      name: 'priceRoundId',
                      nameLocation: '13073:12:59',
                      nodeType: 'VariableDeclaration',
                      scope: 40028,
                      src: '13066:19:59',
                      stateVariable: false,
                      storageLocation: 'default',
                      typeDescriptions: {
                        typeIdentifier: 't_uint80',
                        typeString: 'uint80',
                      },
                      typeName: {
                        id: 39975,
                        name: 'uint80',
                        nodeType: 'ElementaryTypeName',
                        src: '13066:6:59',
                        typeDescriptions: {
                          typeIdentifier: 't_uint80',
                          typeString: 'uint80',
                        },
                      },
                      visibility: 'internal',
                    },
                    {
                      constant: false,
                      id: 39978,
                      mutability: 'mutable',
                      name: 'answer',
                      nameLocation: '13094:6:59',
                      nodeType: 'VariableDeclaration',
                      scope: 40028,
                      src: '13087:13:59',
                      stateVariable: false,
                      storageLocation: 'default',
                      typeDescriptions: {
                        typeIdentifier: 't_int256',
                        typeString: 'int256',
                      },
                      typeName: {
                        id: 39977,
                        name: 'int256',
                        nodeType: 'ElementaryTypeName',
                        src: '13087:6:59',
                        typeDescriptions: {
                          typeIdentifier: 't_int256',
                          typeString: 'int256',
                        },
                      },
                      visibility: 'internal',
                    },
                    null,
                    {
                      constant: false,
                      id: 39980,
                      mutability: 'mutable',
                      name: 'priceUpdatedAt',
                      nameLocation: '13111:14:59',
                      nodeType: 'VariableDeclaration',
                      scope: 40028,
                      src: '13103:22:59',
                      stateVariable: false,
                      storageLocation: 'default',
                      typeDescriptions: {
                        typeIdentifier: 't_uint256',
                        typeString: 'uint256',
                      },
                      typeName: {
                        id: 39979,
                        name: 'uint256',
                        nodeType: 'ElementaryTypeName',
                        src: '13103:7:59',
                        typeDescriptions: {
                          typeIdentifier: 't_uint256',
                          typeString: 'uint256',
                        },
                      },
                      visibility: 'internal',
                    },
                    {
                      constant: false,
                      id: 39982,
                      mutability: 'mutable',
                      name: 'priceAnsweredInRound',
                      nameLocation: '13134:20:59',
                      nodeType: 'VariableDeclaration',
                      scope: 40028,
                      src: '13127:27:59',
                      stateVariable: false,
                      storageLocation: 'default',
                      typeDescriptions: {
                        typeIdentifier: 't_uint80',
                        typeString: 'uint80',
                      },
                      typeName: {
                        id: 39981,
                        name: 'uint80',
                        nodeType: 'ElementaryTypeName',
                        src: '13127:6:59',
                        typeDescriptions: {
                          typeIdentifier: 't_uint80',
                          typeString: 'uint80',
                        },
                      },
                      visibility: 'internal',
                    },
                  ],
                  id: 39986,
                  initialValue: {
                    arguments: [],
                    expression: {
                      argumentTypes: [],
                      expression: {
                        id: 39983,
                        name: 'priceFeed',
                        nodeType: 'Identifier',
                        overloadedDeclarations: [],
                        referencedDeclaration: 39554,
                        src: '13170:9:59',
                        typeDescriptions: {
                          typeIdentifier: 't_contract$_AggregatorV3Interface_$45',
                          typeString: 'contract AggregatorV3Interface',
                        },
                      },
                      id: 39984,
                      isConstant: false,
                      isLValue: false,
                      isPure: false,
                      lValueRequested: false,
                      memberLocation: '13180:15:59',
                      memberName: 'latestRoundData',
                      nodeType: 'MemberAccess',
                      referencedDeclaration: 44,
                      src: '13170:25:59',
                      typeDescriptions: {
                        typeIdentifier:
                          't_function_external_view$__$returns$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$',
                        typeString: 'function () view external returns (uint80,int256,uint256,uint256,uint80)',
                      },
                    },
                    id: 39985,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    kind: 'functionCall',
                    lValueRequested: false,
                    nameLocations: [],
                    names: [],
                    nodeType: 'FunctionCall',
                    src: '13170:27:59',
                    tryCall: false,
                    typeDescriptions: {
                      typeIdentifier: 't_tuple$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$',
                      typeString: 'tuple(uint80,int256,uint256,uint256,uint80)',
                    },
                  },
                  nodeType: 'VariableDeclarationStatement',
                  src: '13065:132:59',
                },
                {
                  condition: {
                    commonType: {
                      typeIdentifier: 't_int256',
                      typeString: 'int256',
                    },
                    id: 39989,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    lValueRequested: false,
                    leftExpression: {
                      id: 39987,
                      name: 'answer',
                      nodeType: 'Identifier',
                      overloadedDeclarations: [],
                      referencedDeclaration: 39978,
                      src: '13211:6:59',
                      typeDescriptions: {
                        typeIdentifier: 't_int256',
                        typeString: 'int256',
                      },
                    },
                    nodeType: 'BinaryOperation',
                    operator: '<=',
                    rightExpression: {
                      hexValue: '30',
                      id: 39988,
                      isConstant: false,
                      isLValue: false,
                      isPure: true,
                      kind: 'number',
                      lValueRequested: false,
                      nodeType: 'Literal',
                      src: '13221:1:59',
                      typeDescriptions: {
                        typeIdentifier: 't_rational_0_by_1',
                        typeString: 'int_const 0',
                      },
                      value: '0',
                    },
                    src: '13211:11:59',
                    typeDescriptions: {
                      typeIdentifier: 't_bool',
                      typeString: 'bool',
                    },
                  },
                  id: 39993,
                  nodeType: 'IfStatement',
                  src: '13207:38:59',
                  trueBody: {
                    errorCall: {
                      arguments: [],
                      expression: {
                        argumentTypes: [],
                        id: 39990,
                        name: 'InvalidPrice',
                        nodeType: 'Identifier',
                        overloadedDeclarations: [],
                        referencedDeclaration: 39486,
                        src: '13231:12:59',
                        typeDescriptions: {
                          typeIdentifier: 't_function_error_pure$__$returns$__$',
                          typeString: 'function () pure',
                        },
                      },
                      id: 39991,
                      isConstant: false,
                      isLValue: false,
                      isPure: false,
                      kind: 'functionCall',
                      lValueRequested: false,
                      nameLocations: [],
                      names: [],
                      nodeType: 'FunctionCall',
                      src: '13231:14:59',
                      tryCall: false,
                      typeDescriptions: {
                        typeIdentifier: 't_tuple$__$',
                        typeString: 'tuple()',
                      },
                    },
                    id: 39992,
                    nodeType: 'RevertStatement',
                    src: '13224:21:59',
                  },
                },
                {
                  condition: {
                    commonType: {
                      typeIdentifier: 't_uint256',
                      typeString: 'uint256',
                    },
                    id: 39996,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    lValueRequested: false,
                    leftExpression: {
                      id: 39994,
                      name: 'priceUpdatedAt',
                      nodeType: 'Identifier',
                      overloadedDeclarations: [],
                      referencedDeclaration: 39980,
                      src: '13259:14:59',
                      typeDescriptions: {
                        typeIdentifier: 't_uint256',
                        typeString: 'uint256',
                      },
                    },
                    nodeType: 'BinaryOperation',
                    operator: '==',
                    rightExpression: {
                      hexValue: '30',
                      id: 39995,
                      isConstant: false,
                      isLValue: false,
                      isPure: true,
                      kind: 'number',
                      lValueRequested: false,
                      nodeType: 'Literal',
                      src: '13277:1:59',
                      typeDescriptions: {
                        typeIdentifier: 't_rational_0_by_1',
                        typeString: 'int_const 0',
                      },
                      value: '0',
                    },
                    src: '13259:19:59',
                    typeDescriptions: {
                      typeIdentifier: 't_bool',
                      typeString: 'bool',
                    },
                  },
                  id: 40000,
                  nodeType: 'IfStatement',
                  src: '13255:49:59',
                  trueBody: {
                    errorCall: {
                      arguments: [],
                      expression: {
                        argumentTypes: [],
                        id: 39997,
                        name: 'IncompleteRound',
                        nodeType: 'Identifier',
                        overloadedDeclarations: [],
                        referencedDeclaration: 39483,
                        src: '13287:15:59',
                        typeDescriptions: {
                          typeIdentifier: 't_function_error_pure$__$returns$__$',
                          typeString: 'function () pure',
                        },
                      },
                      id: 39998,
                      isConstant: false,
                      isLValue: false,
                      isPure: false,
                      kind: 'functionCall',
                      lValueRequested: false,
                      nameLocations: [],
                      names: [],
                      nodeType: 'FunctionCall',
                      src: '13287:17:59',
                      tryCall: false,
                      typeDescriptions: {
                        typeIdentifier: 't_tuple$__$',
                        typeString: 'tuple()',
                      },
                    },
                    id: 39999,
                    nodeType: 'RevertStatement',
                    src: '13280:24:59',
                  },
                },
                {
                  condition: {
                    commonType: {
                      typeIdentifier: 't_uint80',
                      typeString: 'uint80',
                    },
                    id: 40003,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    lValueRequested: false,
                    leftExpression: {
                      id: 40001,
                      name: 'priceAnsweredInRound',
                      nodeType: 'Identifier',
                      overloadedDeclarations: [],
                      referencedDeclaration: 39982,
                      src: '13318:20:59',
                      typeDescriptions: {
                        typeIdentifier: 't_uint80',
                        typeString: 'uint80',
                      },
                    },
                    nodeType: 'BinaryOperation',
                    operator: '<',
                    rightExpression: {
                      id: 40002,
                      name: 'priceRoundId',
                      nodeType: 'Identifier',
                      overloadedDeclarations: [],
                      referencedDeclaration: 39976,
                      src: '13341:12:59',
                      typeDescriptions: {
                        typeIdentifier: 't_uint80',
                        typeString: 'uint80',
                      },
                    },
                    src: '13318:35:59',
                    typeDescriptions: {
                      typeIdentifier: 't_bool',
                      typeString: 'bool',
                    },
                  },
                  id: 40007,
                  nodeType: 'IfStatement',
                  src: '13314:61:59',
                  trueBody: {
                    errorCall: {
                      arguments: [],
                      expression: {
                        argumentTypes: [],
                        id: 40004,
                        name: 'StaleAnswer',
                        nodeType: 'Identifier',
                        overloadedDeclarations: [],
                        referencedDeclaration: 39480,
                        src: '13362:11:59',
                        typeDescriptions: {
                          typeIdentifier: 't_function_error_pure$__$returns$__$',
                          typeString: 'function () pure',
                        },
                      },
                      id: 40005,
                      isConstant: false,
                      isLValue: false,
                      isPure: false,
                      kind: 'functionCall',
                      lValueRequested: false,
                      nameLocations: [],
                      names: [],
                      nodeType: 'FunctionCall',
                      src: '13362:13:59',
                      tryCall: false,
                      typeDescriptions: {
                        typeIdentifier: 't_tuple$__$',
                        typeString: 'tuple()',
                      },
                    },
                    id: 40006,
                    nodeType: 'RevertStatement',
                    src: '13355:20:59',
                  },
                },
                {
                  expression: {
                    id: 40010,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    lValueRequested: false,
                    leftHandSide: {
                      id: 40008,
                      name: 'cachedPrice',
                      nodeType: 'Identifier',
                      overloadedDeclarations: [],
                      referencedDeclaration: 39922,
                      src: '13386:11:59',
                      typeDescriptions: {
                        typeIdentifier: 't_uint256',
                        typeString: 'uint256',
                      },
                    },
                    nodeType: 'Assignment',
                    operator: '=',
                    rightHandSide: {
                      id: 40009,
                      name: 'ethUsdPrice',
                      nodeType: 'Identifier',
                      overloadedDeclarations: [],
                      referencedDeclaration: 39579,
                      src: '13400:11:59',
                      typeDescriptions: {
                        typeIdentifier: 't_uint256',
                        typeString: 'uint256',
                      },
                    },
                    src: '13386:25:59',
                    typeDescriptions: {
                      typeIdentifier: 't_uint256',
                      typeString: 'uint256',
                    },
                  },
                  id: 40011,
                  nodeType: 'ExpressionStatement',
                  src: '13386:25:59',
                },
                {
                  expression: {
                    id: 40017,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    lValueRequested: false,
                    leftHandSide: {
                      id: 40012,
                      name: 'newPrice',
                      nodeType: 'Identifier',
                      overloadedDeclarations: [],
                      referencedDeclaration: 39924,
                      src: '13421:8:59',
                      typeDescriptions: {
                        typeIdentifier: 't_uint256',
                        typeString: 'uint256',
                      },
                    },
                    nodeType: 'Assignment',
                    operator: '=',
                    rightHandSide: {
                      arguments: [
                        {
                          id: 40015,
                          name: 'answer',
                          nodeType: 'Identifier',
                          overloadedDeclarations: [],
                          referencedDeclaration: 39978,
                          src: '13440:6:59',
                          typeDescriptions: {
                            typeIdentifier: 't_int256',
                            typeString: 'int256',
                          },
                        },
                      ],
                      expression: {
                        argumentTypes: [
                          {
                            typeIdentifier: 't_int256',
                            typeString: 'int256',
                          },
                        ],
                        id: 40014,
                        isConstant: false,
                        isLValue: false,
                        isPure: true,
                        lValueRequested: false,
                        nodeType: 'ElementaryTypeNameExpression',
                        src: '13432:7:59',
                        typeDescriptions: {
                          typeIdentifier: 't_type$_t_uint256_$',
                          typeString: 'type(uint256)',
                        },
                        typeName: {
                          id: 40013,
                          name: 'uint256',
                          nodeType: 'ElementaryTypeName',
                          src: '13432:7:59',
                          typeDescriptions: {},
                        },
                      },
                      id: 40016,
                      isConstant: false,
                      isLValue: false,
                      isPure: false,
                      kind: 'typeConversion',
                      lValueRequested: false,
                      nameLocations: [],
                      names: [],
                      nodeType: 'FunctionCall',
                      src: '13432:15:59',
                      tryCall: false,
                      typeDescriptions: {
                        typeIdentifier: 't_uint256',
                        typeString: 'uint256',
                      },
                    },
                    src: '13421:26:59',
                    typeDescriptions: {
                      typeIdentifier: 't_uint256',
                      typeString: 'uint256',
                    },
                  },
                  id: 40018,
                  nodeType: 'ExpressionStatement',
                  src: '13421:26:59',
                },
                {
                  expression: {
                    id: 40022,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    lValueRequested: false,
                    leftHandSide: {
                      id: 40019,
                      name: 'lastPriceFeedUpdate',
                      nodeType: 'Identifier',
                      overloadedDeclarations: [],
                      referencedDeclaration: 39582,
                      src: '13458:19:59',
                      typeDescriptions: {
                        typeIdentifier: 't_uint256',
                        typeString: 'uint256',
                      },
                    },
                    nodeType: 'Assignment',
                    operator: '=',
                    rightHandSide: {
                      expression: {
                        id: 40020,
                        name: 'block',
                        nodeType: 'Identifier',
                        overloadedDeclarations: [],
                        referencedDeclaration: -4,
                        src: '13480:5:59',
                        typeDescriptions: {
                          typeIdentifier: 't_magic_block',
                          typeString: 'block',
                        },
                      },
                      id: 40021,
                      isConstant: false,
                      isLValue: false,
                      isPure: false,
                      lValueRequested: false,
                      memberLocation: '13486:9:59',
                      memberName: 'timestamp',
                      nodeType: 'MemberAccess',
                      src: '13480:15:59',
                      typeDescriptions: {
                        typeIdentifier: 't_uint256',
                        typeString: 'uint256',
                      },
                    },
                    src: '13458:37:59',
                    typeDescriptions: {
                      typeIdentifier: 't_uint256',
                      typeString: 'uint256',
                    },
                  },
                  id: 40023,
                  nodeType: 'ExpressionStatement',
                  src: '13458:37:59',
                },
                {
                  expression: {
                    id: 40026,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    lValueRequested: false,
                    leftHandSide: {
                      id: 40024,
                      name: 'ethUsdPrice',
                      nodeType: 'Identifier',
                      overloadedDeclarations: [],
                      referencedDeclaration: 39579,
                      src: '13505:11:59',
                      typeDescriptions: {
                        typeIdentifier: 't_uint256',
                        typeString: 'uint256',
                      },
                    },
                    nodeType: 'Assignment',
                    operator: '=',
                    rightHandSide: {
                      id: 40025,
                      name: 'newPrice',
                      nodeType: 'Identifier',
                      overloadedDeclarations: [],
                      referencedDeclaration: 39924,
                      src: '13519:8:59',
                      typeDescriptions: {
                        typeIdentifier: 't_uint256',
                        typeString: 'uint256',
                      },
                    },
                    src: '13505:22:59',
                    typeDescriptions: {
                      typeIdentifier: 't_uint256',
                      typeString: 'uint256',
                    },
                  },
                  id: 40027,
                  nodeType: 'ExpressionStatement',
                  src: '13505:22:59',
                },
              ],
            },
            documentation: {
              id: 39919,
              nodeType: 'StructuredDocumentation',
              src: '12095:101:59',
              text: ' @dev Get the latest ETH/USD price from the price feed and update the cached price.',
            },
            implemented: true,
            kind: 'function',
            modifiers: [],
            name: '_refreshPrice',
            nameLocation: '12210:13:59',
            parameters: {
              id: 39920,
              nodeType: 'ParameterList',
              parameters: [],
              src: '12223:2:59',
            },
            returnParameters: {
              id: 39925,
              nodeType: 'ParameterList',
              parameters: [
                {
                  constant: false,
                  id: 39922,
                  mutability: 'mutable',
                  name: 'cachedPrice',
                  nameLocation: '12252:11:59',
                  nodeType: 'VariableDeclaration',
                  scope: 40029,
                  src: '12244:19:59',
                  stateVariable: false,
                  storageLocation: 'default',
                  typeDescriptions: {
                    typeIdentifier: 't_uint256',
                    typeString: 'uint256',
                  },
                  typeName: {
                    id: 39921,
                    name: 'uint256',
                    nodeType: 'ElementaryTypeName',
                    src: '12244:7:59',
                    typeDescriptions: {
                      typeIdentifier: 't_uint256',
                      typeString: 'uint256',
                    },
                  },
                  visibility: 'internal',
                },
                {
                  constant: false,
                  id: 39924,
                  mutability: 'mutable',
                  name: 'newPrice',
                  nameLocation: '12273:8:59',
                  nodeType: 'VariableDeclaration',
                  scope: 40029,
                  src: '12265:16:59',
                  stateVariable: false,
                  storageLocation: 'default',
                  typeDescriptions: {
                    typeIdentifier: 't_uint256',
                    typeString: 'uint256',
                  },
                  typeName: {
                    id: 39923,
                    name: 'uint256',
                    nodeType: 'ElementaryTypeName',
                    src: '12265:7:59',
                    typeDescriptions: {
                      typeIdentifier: 't_uint256',
                      typeString: 'uint256',
                    },
                  },
                  visibility: 'internal',
                },
              ],
              src: '12243:39:59',
            },
            scope: 40314,
            stateMutability: 'nonpayable',
            virtual: false,
            visibility: 'internal',
          },
          {
            id: 40044,
            nodeType: 'FunctionDefinition',
            src: '13540:125:59',
            nodes: [],
            body: {
              id: 40043,
              nodeType: 'Block',
              src: '13598:67:59',
              nodes: [],
              statements: [
                {
                  expression: {
                    arguments: [
                      {
                        id: 40037,
                        name: 'units',
                        nodeType: 'Identifier',
                        overloadedDeclarations: [],
                        referencedDeclaration: 40031,
                        src: '13622:5:59',
                        typeDescriptions: {
                          typeIdentifier: 't_uint256',
                          typeString: 'uint256',
                        },
                      },
                      {
                        id: 40038,
                        name: 'usdUnitPrice',
                        nodeType: 'Identifier',
                        overloadedDeclarations: [],
                        referencedDeclaration: 39564,
                        src: '13629:12:59',
                        typeDescriptions: {
                          typeIdentifier: 't_uint256',
                          typeString: 'uint256',
                        },
                      },
                      {
                        arguments: [],
                        expression: {
                          argumentTypes: [],
                          id: 40039,
                          name: '_ethUsdPrice',
                          nodeType: 'Identifier',
                          overloadedDeclarations: [],
                          referencedDeclaration: 39918,
                          src: '13643:12:59',
                          typeDescriptions: {
                            typeIdentifier: 't_function_internal_nonpayable$__$returns$_t_uint256_$',
                            typeString: 'function () returns (uint256)',
                          },
                        },
                        id: 40040,
                        isConstant: false,
                        isLValue: false,
                        isPure: false,
                        kind: 'functionCall',
                        lValueRequested: false,
                        nameLocations: [],
                        names: [],
                        nodeType: 'FunctionCall',
                        src: '13643:14:59',
                        tryCall: false,
                        typeDescriptions: {
                          typeIdentifier: 't_uint256',
                          typeString: 'uint256',
                        },
                      },
                    ],
                    expression: {
                      argumentTypes: [
                        {
                          typeIdentifier: 't_uint256',
                          typeString: 'uint256',
                        },
                        {
                          typeIdentifier: 't_uint256',
                          typeString: 'uint256',
                        },
                        {
                          typeIdentifier: 't_uint256',
                          typeString: 'uint256',
                        },
                      ],
                      id: 40036,
                      name: '_price',
                      nodeType: 'Identifier',
                      overloadedDeclarations: [40044, 40065],
                      referencedDeclaration: 40065,
                      src: '13615:6:59',
                      typeDescriptions: {
                        typeIdentifier:
                          't_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$',
                        typeString: 'function (uint256,uint256,uint256) pure returns (uint256)',
                      },
                    },
                    id: 40041,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    kind: 'functionCall',
                    lValueRequested: false,
                    nameLocations: [],
                    names: [],
                    nodeType: 'FunctionCall',
                    src: '13615:43:59',
                    tryCall: false,
                    typeDescriptions: {
                      typeIdentifier: 't_uint256',
                      typeString: 'uint256',
                    },
                  },
                  functionReturnParameters: 40035,
                  id: 40042,
                  nodeType: 'Return',
                  src: '13608:50:59',
                },
              ],
            },
            implemented: true,
            kind: 'function',
            modifiers: [],
            name: '_price',
            nameLocation: '13549:6:59',
            parameters: {
              id: 40032,
              nodeType: 'ParameterList',
              parameters: [
                {
                  constant: false,
                  id: 40031,
                  mutability: 'mutable',
                  name: 'units',
                  nameLocation: '13564:5:59',
                  nodeType: 'VariableDeclaration',
                  scope: 40044,
                  src: '13556:13:59',
                  stateVariable: false,
                  storageLocation: 'default',
                  typeDescriptions: {
                    typeIdentifier: 't_uint256',
                    typeString: 'uint256',
                  },
                  typeName: {
                    id: 40030,
                    name: 'uint256',
                    nodeType: 'ElementaryTypeName',
                    src: '13556:7:59',
                    typeDescriptions: {
                      typeIdentifier: 't_uint256',
                      typeString: 'uint256',
                    },
                  },
                  visibility: 'internal',
                },
              ],
              src: '13555:15:59',
            },
            returnParameters: {
              id: 40035,
              nodeType: 'ParameterList',
              parameters: [
                {
                  constant: false,
                  id: 40034,
                  mutability: 'mutable',
                  name: '',
                  nameLocation: '-1:-1:-1',
                  nodeType: 'VariableDeclaration',
                  scope: 40044,
                  src: '13589:7:59',
                  stateVariable: false,
                  storageLocation: 'default',
                  typeDescriptions: {
                    typeIdentifier: 't_uint256',
                    typeString: 'uint256',
                  },
                  typeName: {
                    id: 40033,
                    name: 'uint256',
                    nodeType: 'ElementaryTypeName',
                    src: '13589:7:59',
                    typeDescriptions: {
                      typeIdentifier: 't_uint256',
                      typeString: 'uint256',
                    },
                  },
                  visibility: 'internal',
                },
              ],
              src: '13588:9:59',
            },
            scope: 40314,
            stateMutability: 'nonpayable',
            virtual: false,
            visibility: 'internal',
          },
          {
            id: 40065,
            nodeType: 'FunctionDefinition',
            src: '13963:166:59',
            nodes: [],
            body: {
              id: 40064,
              nodeType: 'Block',
              src: '14065:64:59',
              nodes: [],
              statements: [
                {
                  expression: {
                    arguments: [
                      {
                        id: 40061,
                        name: 'ethPerUsd',
                        nodeType: 'Identifier',
                        overloadedDeclarations: [],
                        referencedDeclaration: 40051,
                        src: '14112:9:59',
                        typeDescriptions: {
                          typeIdentifier: 't_uint256',
                          typeString: 'uint256',
                        },
                      },
                    ],
                    expression: {
                      argumentTypes: [
                        {
                          typeIdentifier: 't_uint256',
                          typeString: 'uint256',
                        },
                      ],
                      expression: {
                        components: [
                          {
                            commonType: {
                              typeIdentifier: 't_uint256',
                              typeString: 'uint256',
                            },
                            id: 40058,
                            isConstant: false,
                            isLValue: false,
                            isPure: false,
                            lValueRequested: false,
                            leftExpression: {
                              id: 40056,
                              name: 'units',
                              nodeType: 'Identifier',
                              overloadedDeclarations: [],
                              referencedDeclaration: 40047,
                              src: '14083:5:59',
                              typeDescriptions: {
                                typeIdentifier: 't_uint256',
                                typeString: 'uint256',
                              },
                            },
                            nodeType: 'BinaryOperation',
                            operator: '*',
                            rightExpression: {
                              id: 40057,
                              name: 'usdPerUnit',
                              nodeType: 'Identifier',
                              overloadedDeclarations: [],
                              referencedDeclaration: 40049,
                              src: '14091:10:59',
                              typeDescriptions: {
                                typeIdentifier: 't_uint256',
                                typeString: 'uint256',
                              },
                            },
                            src: '14083:18:59',
                            typeDescriptions: {
                              typeIdentifier: 't_uint256',
                              typeString: 'uint256',
                            },
                          },
                        ],
                        id: 40059,
                        isConstant: false,
                        isInlineArray: false,
                        isLValue: false,
                        isPure: false,
                        lValueRequested: false,
                        nodeType: 'TupleExpression',
                        src: '14082:20:59',
                        typeDescriptions: {
                          typeIdentifier: 't_uint256',
                          typeString: 'uint256',
                        },
                      },
                      id: 40060,
                      isConstant: false,
                      isLValue: false,
                      isPure: false,
                      lValueRequested: false,
                      memberLocation: '14103:8:59',
                      memberName: 'divWadUp',
                      nodeType: 'MemberAccess',
                      referencedDeclaration: 36134,
                      src: '14082:29:59',
                      typeDescriptions: {
                        typeIdentifier:
                          't_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$',
                        typeString: 'function (uint256,uint256) pure returns (uint256)',
                      },
                    },
                    id: 40062,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    kind: 'functionCall',
                    lValueRequested: false,
                    nameLocations: [],
                    names: [],
                    nodeType: 'FunctionCall',
                    src: '14082:40:59',
                    tryCall: false,
                    typeDescriptions: {
                      typeIdentifier: 't_uint256',
                      typeString: 'uint256',
                    },
                  },
                  functionReturnParameters: 40055,
                  id: 40063,
                  nodeType: 'Return',
                  src: '14075:47:59',
                },
              ],
            },
            documentation: {
              id: 40045,
              nodeType: 'StructuredDocumentation',
              src: '13671:287:59',
              text: ' @param units      Number of storage units. Integer, no decimals.\n @param usdPerUnit Unit price in USD. Fixed point with 8 decimals.\n @param ethPerUsd  ETH/USD price. Fixed point with 8 decimals.\n @return uint256 price in wei, i.e. 18 decimals.',
            },
            implemented: true,
            kind: 'function',
            modifiers: [],
            name: '_price',
            nameLocation: '13972:6:59',
            parameters: {
              id: 40052,
              nodeType: 'ParameterList',
              parameters: [
                {
                  constant: false,
                  id: 40047,
                  mutability: 'mutable',
                  name: 'units',
                  nameLocation: '13987:5:59',
                  nodeType: 'VariableDeclaration',
                  scope: 40065,
                  src: '13979:13:59',
                  stateVariable: false,
                  storageLocation: 'default',
                  typeDescriptions: {
                    typeIdentifier: 't_uint256',
                    typeString: 'uint256',
                  },
                  typeName: {
                    id: 40046,
                    name: 'uint256',
                    nodeType: 'ElementaryTypeName',
                    src: '13979:7:59',
                    typeDescriptions: {
                      typeIdentifier: 't_uint256',
                      typeString: 'uint256',
                    },
                  },
                  visibility: 'internal',
                },
                {
                  constant: false,
                  id: 40049,
                  mutability: 'mutable',
                  name: 'usdPerUnit',
                  nameLocation: '14002:10:59',
                  nodeType: 'VariableDeclaration',
                  scope: 40065,
                  src: '13994:18:59',
                  stateVariable: false,
                  storageLocation: 'default',
                  typeDescriptions: {
                    typeIdentifier: 't_uint256',
                    typeString: 'uint256',
                  },
                  typeName: {
                    id: 40048,
                    name: 'uint256',
                    nodeType: 'ElementaryTypeName',
                    src: '13994:7:59',
                    typeDescriptions: {
                      typeIdentifier: 't_uint256',
                      typeString: 'uint256',
                    },
                  },
                  visibility: 'internal',
                },
                {
                  constant: false,
                  id: 40051,
                  mutability: 'mutable',
                  name: 'ethPerUsd',
                  nameLocation: '14022:9:59',
                  nodeType: 'VariableDeclaration',
                  scope: 40065,
                  src: '14014:17:59',
                  stateVariable: false,
                  storageLocation: 'default',
                  typeDescriptions: {
                    typeIdentifier: 't_uint256',
                    typeString: 'uint256',
                  },
                  typeName: {
                    id: 40050,
                    name: 'uint256',
                    nodeType: 'ElementaryTypeName',
                    src: '14014:7:59',
                    typeDescriptions: {
                      typeIdentifier: 't_uint256',
                      typeString: 'uint256',
                    },
                  },
                  visibility: 'internal',
                },
              ],
              src: '13978:54:59',
            },
            returnParameters: {
              id: 40055,
              nodeType: 'ParameterList',
              parameters: [
                {
                  constant: false,
                  id: 40054,
                  mutability: 'mutable',
                  name: '',
                  nameLocation: '-1:-1:-1',
                  nodeType: 'VariableDeclaration',
                  scope: 40065,
                  src: '14056:7:59',
                  stateVariable: false,
                  storageLocation: 'default',
                  typeDescriptions: {
                    typeIdentifier: 't_uint256',
                    typeString: 'uint256',
                  },
                  typeName: {
                    id: 40053,
                    name: 'uint256',
                    nodeType: 'ElementaryTypeName',
                    src: '14056:7:59',
                    typeDescriptions: {
                      typeIdentifier: 't_uint256',
                      typeString: 'uint256',
                    },
                  },
                  visibility: 'internal',
                },
              ],
              src: '14055:9:59',
            },
            scope: 40314,
            stateMutability: 'pure',
            virtual: false,
            visibility: 'internal',
          },
          {
            id: 40105,
            nodeType: 'FunctionDefinition',
            src: '14538:280:59',
            nodes: [],
            body: {
              id: 40104,
              nodeType: 'Block',
              src: '14619:199:59',
              nodes: [],
              statements: [
                {
                  condition: {
                    commonType: {
                      typeIdentifier: 't_uint256',
                      typeString: 'uint256',
                    },
                    id: 40079,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    lValueRequested: false,
                    leftExpression: {
                      id: 40077,
                      name: 'units',
                      nodeType: 'Identifier',
                      overloadedDeclarations: [],
                      referencedDeclaration: 40070,
                      src: '14633:5:59',
                      typeDescriptions: {
                        typeIdentifier: 't_uint256',
                        typeString: 'uint256',
                      },
                    },
                    nodeType: 'BinaryOperation',
                    operator: '==',
                    rightExpression: {
                      hexValue: '30',
                      id: 40078,
                      isConstant: false,
                      isLValue: false,
                      isPure: true,
                      kind: 'number',
                      lValueRequested: false,
                      nodeType: 'Literal',
                      src: '14642:1:59',
                      typeDescriptions: {
                        typeIdentifier: 't_rational_0_by_1',
                        typeString: 'int_const 0',
                      },
                      value: '0',
                    },
                    src: '14633:10:59',
                    typeDescriptions: {
                      typeIdentifier: 't_bool',
                      typeString: 'bool',
                    },
                  },
                  id: 40083,
                  nodeType: 'IfStatement',
                  src: '14629:38:59',
                  trueBody: {
                    errorCall: {
                      arguments: [],
                      expression: {
                        argumentTypes: [],
                        id: 40080,
                        name: 'InvalidAmount',
                        nodeType: 'Identifier',
                        overloadedDeclarations: [],
                        referencedDeclaration: 39465,
                        src: '14652:13:59',
                        typeDescriptions: {
                          typeIdentifier: 't_function_error_pure$__$returns$__$',
                          typeString: 'function () pure',
                        },
                      },
                      id: 40081,
                      isConstant: false,
                      isLValue: false,
                      isPure: false,
                      kind: 'functionCall',
                      lValueRequested: false,
                      nameLocations: [],
                      names: [],
                      nodeType: 'FunctionCall',
                      src: '14652:15:59',
                      tryCall: false,
                      typeDescriptions: {
                        typeIdentifier: 't_tuple$__$',
                        typeString: 'tuple()',
                      },
                    },
                    id: 40082,
                    nodeType: 'RevertStatement',
                    src: '14645:22:59',
                  },
                },
                {
                  condition: {
                    commonType: {
                      typeIdentifier: 't_uint256',
                      typeString: 'uint256',
                    },
                    id: 40088,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    lValueRequested: false,
                    leftExpression: {
                      commonType: {
                        typeIdentifier: 't_uint256',
                        typeString: 'uint256',
                      },
                      id: 40086,
                      isConstant: false,
                      isLValue: false,
                      isPure: false,
                      lValueRequested: false,
                      leftExpression: {
                        id: 40084,
                        name: 'rentedUnits',
                        nodeType: 'Identifier',
                        overloadedDeclarations: [],
                        referencedDeclaration: 39576,
                        src: '14681:11:59',
                        typeDescriptions: {
                          typeIdentifier: 't_uint256',
                          typeString: 'uint256',
                        },
                      },
                      nodeType: 'BinaryOperation',
                      operator: '+',
                      rightExpression: {
                        id: 40085,
                        name: 'units',
                        nodeType: 'Identifier',
                        overloadedDeclarations: [],
                        referencedDeclaration: 40070,
                        src: '14695:5:59',
                        typeDescriptions: {
                          typeIdentifier: 't_uint256',
                          typeString: 'uint256',
                        },
                      },
                      src: '14681:19:59',
                      typeDescriptions: {
                        typeIdentifier: 't_uint256',
                        typeString: 'uint256',
                      },
                    },
                    nodeType: 'BinaryOperation',
                    operator: '>',
                    rightExpression: {
                      id: 40087,
                      name: 'maxUnits',
                      nodeType: 'Identifier',
                      overloadedDeclarations: [],
                      referencedDeclaration: 39567,
                      src: '14703:8:59',
                      typeDescriptions: {
                        typeIdentifier: 't_uint256',
                        typeString: 'uint256',
                      },
                    },
                    src: '14681:30:59',
                    typeDescriptions: {
                      typeIdentifier: 't_bool',
                      typeString: 'bool',
                    },
                  },
                  id: 40092,
                  nodeType: 'IfStatement',
                  src: '14677:60:59',
                  trueBody: {
                    errorCall: {
                      arguments: [],
                      expression: {
                        argumentTypes: [],
                        id: 40089,
                        name: 'ExceedsCapacity',
                        nodeType: 'Identifier',
                        overloadedDeclarations: [],
                        referencedDeclaration: 39462,
                        src: '14720:15:59',
                        typeDescriptions: {
                          typeIdentifier: 't_function_error_pure$__$returns$__$',
                          typeString: 'function () pure',
                        },
                      },
                      id: 40090,
                      isConstant: false,
                      isLValue: false,
                      isPure: false,
                      kind: 'functionCall',
                      lValueRequested: false,
                      nameLocations: [],
                      names: [],
                      nodeType: 'FunctionCall',
                      src: '14720:17:59',
                      tryCall: false,
                      typeDescriptions: {
                        typeIdentifier: 't_tuple$__$',
                        typeString: 'tuple()',
                      },
                    },
                    id: 40091,
                    nodeType: 'RevertStatement',
                    src: '14713:24:59',
                  },
                },
                {
                  expression: {
                    id: 40095,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    lValueRequested: false,
                    leftHandSide: {
                      id: 40093,
                      name: 'rentedUnits',
                      nodeType: 'Identifier',
                      overloadedDeclarations: [],
                      referencedDeclaration: 39576,
                      src: '14748:11:59',
                      typeDescriptions: {
                        typeIdentifier: 't_uint256',
                        typeString: 'uint256',
                      },
                    },
                    nodeType: 'Assignment',
                    operator: '+=',
                    rightHandSide: {
                      id: 40094,
                      name: 'units',
                      nodeType: 'Identifier',
                      overloadedDeclarations: [],
                      referencedDeclaration: 40070,
                      src: '14763:5:59',
                      typeDescriptions: {
                        typeIdentifier: 't_uint256',
                        typeString: 'uint256',
                      },
                    },
                    src: '14748:20:59',
                    typeDescriptions: {
                      typeIdentifier: 't_uint256',
                      typeString: 'uint256',
                    },
                  },
                  id: 40096,
                  nodeType: 'ExpressionStatement',
                  src: '14748:20:59',
                },
                {
                  eventCall: {
                    arguments: [
                      {
                        expression: {
                          id: 40098,
                          name: 'msg',
                          nodeType: 'Identifier',
                          overloadedDeclarations: [],
                          referencedDeclaration: -15,
                          src: '14788:3:59',
                          typeDescriptions: {
                            typeIdentifier: 't_magic_message',
                            typeString: 'msg',
                          },
                        },
                        id: 40099,
                        isConstant: false,
                        isLValue: false,
                        isPure: false,
                        lValueRequested: false,
                        memberLocation: '14792:6:59',
                        memberName: 'sender',
                        nodeType: 'MemberAccess',
                        src: '14788:10:59',
                        typeDescriptions: {
                          typeIdentifier: 't_address',
                          typeString: 'address',
                        },
                      },
                      {
                        id: 40100,
                        name: 'fid',
                        nodeType: 'Identifier',
                        overloadedDeclarations: [],
                        referencedDeclaration: 40068,
                        src: '14800:3:59',
                        typeDescriptions: {
                          typeIdentifier: 't_uint256',
                          typeString: 'uint256',
                        },
                      },
                      {
                        id: 40101,
                        name: 'units',
                        nodeType: 'Identifier',
                        overloadedDeclarations: [],
                        referencedDeclaration: 40070,
                        src: '14805:5:59',
                        typeDescriptions: {
                          typeIdentifier: 't_uint256',
                          typeString: 'uint256',
                        },
                      },
                    ],
                    expression: {
                      argumentTypes: [
                        {
                          typeIdentifier: 't_address',
                          typeString: 'address',
                        },
                        {
                          typeIdentifier: 't_uint256',
                          typeString: 'uint256',
                        },
                        {
                          typeIdentifier: 't_uint256',
                          typeString: 'uint256',
                        },
                      ],
                      id: 40097,
                      name: 'Rent',
                      nodeType: 'Identifier',
                      overloadedDeclarations: [],
                      referencedDeclaration: 39504,
                      src: '14783:4:59',
                      typeDescriptions: {
                        typeIdentifier: 't_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$',
                        typeString: 'function (address,uint256,uint256)',
                      },
                    },
                    id: 40102,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    kind: 'functionCall',
                    lValueRequested: false,
                    nameLocations: [],
                    names: [],
                    nodeType: 'FunctionCall',
                    src: '14783:28:59',
                    tryCall: false,
                    typeDescriptions: {
                      typeIdentifier: 't_tuple$__$',
                      typeString: 'tuple()',
                    },
                  },
                  id: 40103,
                  nodeType: 'EmitStatement',
                  src: '14778:33:59',
                },
              ],
            },
            documentation: {
              id: 40066,
              nodeType: 'StructuredDocumentation',
              src: '14318:215:59',
              text: ' @notice Credit a single fid with free storage units. Only callable by owner.\n @param fid   The fid that will receive the credit.\n @param units Number of storage units to credit.',
            },
            functionSelector: 'ab7ccc1c',
            implemented: true,
            kind: 'function',
            modifiers: [
              {
                id: 40073,
                kind: 'modifierInvocation',
                modifierName: {
                  id: 40072,
                  name: 'onlyOwner',
                  nameLocations: ['14591:9:59'],
                  nodeType: 'IdentifierPath',
                  referencedDeclaration: 33256,
                  src: '14591:9:59',
                },
                nodeType: 'ModifierInvocation',
                src: '14591:9:59',
              },
              {
                id: 40075,
                kind: 'modifierInvocation',
                modifierName: {
                  id: 40074,
                  name: 'whenNotDeprecated',
                  nameLocations: ['14601:17:59'],
                  nodeType: 'IdentifierPath',
                  referencedDeclaration: 39651,
                  src: '14601:17:59',
                },
                nodeType: 'ModifierInvocation',
                src: '14601:17:59',
              },
            ],
            name: 'credit',
            nameLocation: '14547:6:59',
            parameters: {
              id: 40071,
              nodeType: 'ParameterList',
              parameters: [
                {
                  constant: false,
                  id: 40068,
                  mutability: 'mutable',
                  name: 'fid',
                  nameLocation: '14562:3:59',
                  nodeType: 'VariableDeclaration',
                  scope: 40105,
                  src: '14554:11:59',
                  stateVariable: false,
                  storageLocation: 'default',
                  typeDescriptions: {
                    typeIdentifier: 't_uint256',
                    typeString: 'uint256',
                  },
                  typeName: {
                    id: 40067,
                    name: 'uint256',
                    nodeType: 'ElementaryTypeName',
                    src: '14554:7:59',
                    typeDescriptions: {
                      typeIdentifier: 't_uint256',
                      typeString: 'uint256',
                    },
                  },
                  visibility: 'internal',
                },
                {
                  constant: false,
                  id: 40070,
                  mutability: 'mutable',
                  name: 'units',
                  nameLocation: '14575:5:59',
                  nodeType: 'VariableDeclaration',
                  scope: 40105,
                  src: '14567:13:59',
                  stateVariable: false,
                  storageLocation: 'default',
                  typeDescriptions: {
                    typeIdentifier: 't_uint256',
                    typeString: 'uint256',
                  },
                  typeName: {
                    id: 40069,
                    name: 'uint256',
                    nodeType: 'ElementaryTypeName',
                    src: '14567:7:59',
                    typeDescriptions: {
                      typeIdentifier: 't_uint256',
                      typeString: 'uint256',
                    },
                  },
                  visibility: 'internal',
                },
              ],
              src: '14553:28:59',
            },
            returnParameters: {
              id: 40076,
              nodeType: 'ParameterList',
              parameters: [],
              src: '14619:0:59',
            },
            scope: 40314,
            stateMutability: 'nonpayable',
            virtual: false,
            visibility: 'external',
          },
          {
            id: 40160,
            nodeType: 'FunctionDefinition',
            src: '15023:374:59',
            nodes: [],
            body: {
              id: 40159,
              nodeType: 'Block',
              src: '15121:276:59',
              nodes: [],
              statements: [
                {
                  assignments: [40119],
                  declarations: [
                    {
                      constant: false,
                      id: 40119,
                      mutability: 'mutable',
                      name: 'totalUnits',
                      nameLocation: '15139:10:59',
                      nodeType: 'VariableDeclaration',
                      scope: 40159,
                      src: '15131:18:59',
                      stateVariable: false,
                      storageLocation: 'default',
                      typeDescriptions: {
                        typeIdentifier: 't_uint256',
                        typeString: 'uint256',
                      },
                      typeName: {
                        id: 40118,
                        name: 'uint256',
                        nodeType: 'ElementaryTypeName',
                        src: '15131:7:59',
                        typeDescriptions: {
                          typeIdentifier: 't_uint256',
                          typeString: 'uint256',
                        },
                      },
                      visibility: 'internal',
                    },
                  ],
                  id: 40124,
                  initialValue: {
                    commonType: {
                      typeIdentifier: 't_uint256',
                      typeString: 'uint256',
                    },
                    id: 40123,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    lValueRequested: false,
                    leftExpression: {
                      expression: {
                        id: 40120,
                        name: 'fids',
                        nodeType: 'Identifier',
                        overloadedDeclarations: [],
                        referencedDeclaration: 40109,
                        src: '15152:4:59',
                        typeDescriptions: {
                          typeIdentifier: 't_array$_t_uint256_$dyn_calldata_ptr',
                          typeString: 'uint256[] calldata',
                        },
                      },
                      id: 40121,
                      isConstant: false,
                      isLValue: false,
                      isPure: false,
                      lValueRequested: false,
                      memberLocation: '15157:6:59',
                      memberName: 'length',
                      nodeType: 'MemberAccess',
                      src: '15152:11:59',
                      typeDescriptions: {
                        typeIdentifier: 't_uint256',
                        typeString: 'uint256',
                      },
                    },
                    nodeType: 'BinaryOperation',
                    operator: '*',
                    rightExpression: {
                      id: 40122,
                      name: 'units',
                      nodeType: 'Identifier',
                      overloadedDeclarations: [],
                      referencedDeclaration: 40111,
                      src: '15166:5:59',
                      typeDescriptions: {
                        typeIdentifier: 't_uint256',
                        typeString: 'uint256',
                      },
                    },
                    src: '15152:19:59',
                    typeDescriptions: {
                      typeIdentifier: 't_uint256',
                      typeString: 'uint256',
                    },
                  },
                  nodeType: 'VariableDeclarationStatement',
                  src: '15131:40:59',
                },
                {
                  condition: {
                    commonType: {
                      typeIdentifier: 't_uint256',
                      typeString: 'uint256',
                    },
                    id: 40129,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    lValueRequested: false,
                    leftExpression: {
                      commonType: {
                        typeIdentifier: 't_uint256',
                        typeString: 'uint256',
                      },
                      id: 40127,
                      isConstant: false,
                      isLValue: false,
                      isPure: false,
                      lValueRequested: false,
                      leftExpression: {
                        id: 40125,
                        name: 'rentedUnits',
                        nodeType: 'Identifier',
                        overloadedDeclarations: [],
                        referencedDeclaration: 39576,
                        src: '15185:11:59',
                        typeDescriptions: {
                          typeIdentifier: 't_uint256',
                          typeString: 'uint256',
                        },
                      },
                      nodeType: 'BinaryOperation',
                      operator: '+',
                      rightExpression: {
                        id: 40126,
                        name: 'totalUnits',
                        nodeType: 'Identifier',
                        overloadedDeclarations: [],
                        referencedDeclaration: 40119,
                        src: '15199:10:59',
                        typeDescriptions: {
                          typeIdentifier: 't_uint256',
                          typeString: 'uint256',
                        },
                      },
                      src: '15185:24:59',
                      typeDescriptions: {
                        typeIdentifier: 't_uint256',
                        typeString: 'uint256',
                      },
                    },
                    nodeType: 'BinaryOperation',
                    operator: '>',
                    rightExpression: {
                      id: 40128,
                      name: 'maxUnits',
                      nodeType: 'Identifier',
                      overloadedDeclarations: [],
                      referencedDeclaration: 39567,
                      src: '15212:8:59',
                      typeDescriptions: {
                        typeIdentifier: 't_uint256',
                        typeString: 'uint256',
                      },
                    },
                    src: '15185:35:59',
                    typeDescriptions: {
                      typeIdentifier: 't_bool',
                      typeString: 'bool',
                    },
                  },
                  id: 40133,
                  nodeType: 'IfStatement',
                  src: '15181:65:59',
                  trueBody: {
                    errorCall: {
                      arguments: [],
                      expression: {
                        argumentTypes: [],
                        id: 40130,
                        name: 'ExceedsCapacity',
                        nodeType: 'Identifier',
                        overloadedDeclarations: [],
                        referencedDeclaration: 39462,
                        src: '15229:15:59',
                        typeDescriptions: {
                          typeIdentifier: 't_function_error_pure$__$returns$__$',
                          typeString: 'function () pure',
                        },
                      },
                      id: 40131,
                      isConstant: false,
                      isLValue: false,
                      isPure: false,
                      kind: 'functionCall',
                      lValueRequested: false,
                      nameLocations: [],
                      names: [],
                      nodeType: 'FunctionCall',
                      src: '15229:17:59',
                      tryCall: false,
                      typeDescriptions: {
                        typeIdentifier: 't_tuple$__$',
                        typeString: 'tuple()',
                      },
                    },
                    id: 40132,
                    nodeType: 'RevertStatement',
                    src: '15222:24:59',
                  },
                },
                {
                  expression: {
                    id: 40136,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    lValueRequested: false,
                    leftHandSide: {
                      id: 40134,
                      name: 'rentedUnits',
                      nodeType: 'Identifier',
                      overloadedDeclarations: [],
                      referencedDeclaration: 39576,
                      src: '15256:11:59',
                      typeDescriptions: {
                        typeIdentifier: 't_uint256',
                        typeString: 'uint256',
                      },
                    },
                    nodeType: 'Assignment',
                    operator: '+=',
                    rightHandSide: {
                      id: 40135,
                      name: 'totalUnits',
                      nodeType: 'Identifier',
                      overloadedDeclarations: [],
                      referencedDeclaration: 40119,
                      src: '15271:10:59',
                      typeDescriptions: {
                        typeIdentifier: 't_uint256',
                        typeString: 'uint256',
                      },
                    },
                    src: '15256:25:59',
                    typeDescriptions: {
                      typeIdentifier: 't_uint256',
                      typeString: 'uint256',
                    },
                  },
                  id: 40137,
                  nodeType: 'ExpressionStatement',
                  src: '15256:25:59',
                },
                {
                  body: {
                    id: 40157,
                    nodeType: 'Block',
                    src: '15329:62:59',
                    statements: [
                      {
                        eventCall: {
                          arguments: [
                            {
                              expression: {
                                id: 40149,
                                name: 'msg',
                                nodeType: 'Identifier',
                                overloadedDeclarations: [],
                                referencedDeclaration: -15,
                                src: '15353:3:59',
                                typeDescriptions: {
                                  typeIdentifier: 't_magic_message',
                                  typeString: 'msg',
                                },
                              },
                              id: 40150,
                              isConstant: false,
                              isLValue: false,
                              isPure: false,
                              lValueRequested: false,
                              memberLocation: '15357:6:59',
                              memberName: 'sender',
                              nodeType: 'MemberAccess',
                              src: '15353:10:59',
                              typeDescriptions: {
                                typeIdentifier: 't_address',
                                typeString: 'address',
                              },
                            },
                            {
                              baseExpression: {
                                id: 40151,
                                name: 'fids',
                                nodeType: 'Identifier',
                                overloadedDeclarations: [],
                                referencedDeclaration: 40109,
                                src: '15365:4:59',
                                typeDescriptions: {
                                  typeIdentifier: 't_array$_t_uint256_$dyn_calldata_ptr',
                                  typeString: 'uint256[] calldata',
                                },
                              },
                              id: 40153,
                              indexExpression: {
                                id: 40152,
                                name: 'i',
                                nodeType: 'Identifier',
                                overloadedDeclarations: [],
                                referencedDeclaration: 40139,
                                src: '15370:1:59',
                                typeDescriptions: {
                                  typeIdentifier: 't_uint256',
                                  typeString: 'uint256',
                                },
                              },
                              isConstant: false,
                              isLValue: false,
                              isPure: false,
                              lValueRequested: false,
                              nodeType: 'IndexAccess',
                              src: '15365:7:59',
                              typeDescriptions: {
                                typeIdentifier: 't_uint256',
                                typeString: 'uint256',
                              },
                            },
                            {
                              id: 40154,
                              name: 'units',
                              nodeType: 'Identifier',
                              overloadedDeclarations: [],
                              referencedDeclaration: 40111,
                              src: '15374:5:59',
                              typeDescriptions: {
                                typeIdentifier: 't_uint256',
                                typeString: 'uint256',
                              },
                            },
                          ],
                          expression: {
                            argumentTypes: [
                              {
                                typeIdentifier: 't_address',
                                typeString: 'address',
                              },
                              {
                                typeIdentifier: 't_uint256',
                                typeString: 'uint256',
                              },
                              {
                                typeIdentifier: 't_uint256',
                                typeString: 'uint256',
                              },
                            ],
                            id: 40148,
                            name: 'Rent',
                            nodeType: 'Identifier',
                            overloadedDeclarations: [],
                            referencedDeclaration: 39504,
                            src: '15348:4:59',
                            typeDescriptions: {
                              typeIdentifier:
                                't_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$',
                              typeString: 'function (address,uint256,uint256)',
                            },
                          },
                          id: 40155,
                          isConstant: false,
                          isLValue: false,
                          isPure: false,
                          kind: 'functionCall',
                          lValueRequested: false,
                          nameLocations: [],
                          names: [],
                          nodeType: 'FunctionCall',
                          src: '15348:32:59',
                          tryCall: false,
                          typeDescriptions: {
                            typeIdentifier: 't_tuple$__$',
                            typeString: 'tuple()',
                          },
                        },
                        id: 40156,
                        nodeType: 'EmitStatement',
                        src: '15343:37:59',
                      },
                    ],
                  },
                  condition: {
                    commonType: {
                      typeIdentifier: 't_uint256',
                      typeString: 'uint256',
                    },
                    id: 40144,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    lValueRequested: false,
                    leftExpression: {
                      id: 40141,
                      name: 'i',
                      nodeType: 'Identifier',
                      overloadedDeclarations: [],
                      referencedDeclaration: 40139,
                      src: '15307:1:59',
                      typeDescriptions: {
                        typeIdentifier: 't_uint256',
                        typeString: 'uint256',
                      },
                    },
                    nodeType: 'BinaryOperation',
                    operator: '<',
                    rightExpression: {
                      expression: {
                        id: 40142,
                        name: 'fids',
                        nodeType: 'Identifier',
                        overloadedDeclarations: [],
                        referencedDeclaration: 40109,
                        src: '15311:4:59',
                        typeDescriptions: {
                          typeIdentifier: 't_array$_t_uint256_$dyn_calldata_ptr',
                          typeString: 'uint256[] calldata',
                        },
                      },
                      id: 40143,
                      isConstant: false,
                      isLValue: false,
                      isPure: false,
                      lValueRequested: false,
                      memberLocation: '15316:6:59',
                      memberName: 'length',
                      nodeType: 'MemberAccess',
                      src: '15311:11:59',
                      typeDescriptions: {
                        typeIdentifier: 't_uint256',
                        typeString: 'uint256',
                      },
                    },
                    src: '15307:15:59',
                    typeDescriptions: {
                      typeIdentifier: 't_bool',
                      typeString: 'bool',
                    },
                  },
                  id: 40158,
                  initializationExpression: {
                    assignments: [40139],
                    declarations: [
                      {
                        constant: false,
                        id: 40139,
                        mutability: 'mutable',
                        name: 'i',
                        nameLocation: '15304:1:59',
                        nodeType: 'VariableDeclaration',
                        scope: 40158,
                        src: '15296:9:59',
                        stateVariable: false,
                        storageLocation: 'default',
                        typeDescriptions: {
                          typeIdentifier: 't_uint256',
                          typeString: 'uint256',
                        },
                        typeName: {
                          id: 40138,
                          name: 'uint256',
                          nodeType: 'ElementaryTypeName',
                          src: '15296:7:59',
                          typeDescriptions: {
                            typeIdentifier: 't_uint256',
                            typeString: 'uint256',
                          },
                        },
                        visibility: 'internal',
                      },
                    ],
                    id: 40140,
                    nodeType: 'VariableDeclarationStatement',
                    src: '15296:9:59',
                  },
                  loopExpression: {
                    expression: {
                      id: 40146,
                      isConstant: false,
                      isLValue: false,
                      isPure: false,
                      lValueRequested: false,
                      nodeType: 'UnaryOperation',
                      operator: '++',
                      prefix: true,
                      src: '15324:3:59',
                      subExpression: {
                        id: 40145,
                        name: 'i',
                        nodeType: 'Identifier',
                        overloadedDeclarations: [],
                        referencedDeclaration: 40139,
                        src: '15326:1:59',
                        typeDescriptions: {
                          typeIdentifier: 't_uint256',
                          typeString: 'uint256',
                        },
                      },
                      typeDescriptions: {
                        typeIdentifier: 't_uint256',
                        typeString: 'uint256',
                      },
                    },
                    id: 40147,
                    nodeType: 'ExpressionStatement',
                    src: '15324:3:59',
                  },
                  nodeType: 'ForStatement',
                  src: '15291:100:59',
                },
              ],
            },
            documentation: {
              id: 40106,
              nodeType: 'StructuredDocumentation',
              src: '14824:194:59',
              text: ' @notice Credit multiple fids with free storage units. Only callable by owner.\n @param fids  An array of fids.\n @param units Number of storage units per fid.',
            },
            functionSelector: 'b3a90c67',
            implemented: true,
            kind: 'function',
            modifiers: [
              {
                id: 40114,
                kind: 'modifierInvocation',
                modifierName: {
                  id: 40113,
                  name: 'onlyOwner',
                  nameLocations: ['15093:9:59'],
                  nodeType: 'IdentifierPath',
                  referencedDeclaration: 33256,
                  src: '15093:9:59',
                },
                nodeType: 'ModifierInvocation',
                src: '15093:9:59',
              },
              {
                id: 40116,
                kind: 'modifierInvocation',
                modifierName: {
                  id: 40115,
                  name: 'whenNotDeprecated',
                  nameLocations: ['15103:17:59'],
                  nodeType: 'IdentifierPath',
                  referencedDeclaration: 39651,
                  src: '15103:17:59',
                },
                nodeType: 'ModifierInvocation',
                src: '15103:17:59',
              },
            ],
            name: 'batchCredit',
            nameLocation: '15032:11:59',
            parameters: {
              id: 40112,
              nodeType: 'ParameterList',
              parameters: [
                {
                  constant: false,
                  id: 40109,
                  mutability: 'mutable',
                  name: 'fids',
                  nameLocation: '15063:4:59',
                  nodeType: 'VariableDeclaration',
                  scope: 40160,
                  src: '15044:23:59',
                  stateVariable: false,
                  storageLocation: 'calldata',
                  typeDescriptions: {
                    typeIdentifier: 't_array$_t_uint256_$dyn_calldata_ptr',
                    typeString: 'uint256[]',
                  },
                  typeName: {
                    baseType: {
                      id: 40107,
                      name: 'uint256',
                      nodeType: 'ElementaryTypeName',
                      src: '15044:7:59',
                      typeDescriptions: {
                        typeIdentifier: 't_uint256',
                        typeString: 'uint256',
                      },
                    },
                    id: 40108,
                    nodeType: 'ArrayTypeName',
                    src: '15044:9:59',
                    typeDescriptions: {
                      typeIdentifier: 't_array$_t_uint256_$dyn_storage_ptr',
                      typeString: 'uint256[]',
                    },
                  },
                  visibility: 'internal',
                },
                {
                  constant: false,
                  id: 40111,
                  mutability: 'mutable',
                  name: 'units',
                  nameLocation: '15077:5:59',
                  nodeType: 'VariableDeclaration',
                  scope: 40160,
                  src: '15069:13:59',
                  stateVariable: false,
                  storageLocation: 'default',
                  typeDescriptions: {
                    typeIdentifier: 't_uint256',
                    typeString: 'uint256',
                  },
                  typeName: {
                    id: 40110,
                    name: 'uint256',
                    nodeType: 'ElementaryTypeName',
                    src: '15069:7:59',
                    typeDescriptions: {
                      typeIdentifier: 't_uint256',
                      typeString: 'uint256',
                    },
                  },
                  visibility: 'internal',
                },
              ],
              src: '15043:40:59',
            },
            returnParameters: {
              id: 40117,
              nodeType: 'ParameterList',
              parameters: [],
              src: '15121:0:59',
            },
            scope: 40314,
            stateMutability: 'nonpayable',
            virtual: false,
            visibility: 'external',
          },
          {
            id: 40170,
            nodeType: 'FunctionDefinition',
            src: '15484:75:59',
            nodes: [],
            body: {
              id: 40169,
              nodeType: 'Block',
              src: '15527:32:59',
              nodes: [],
              statements: [
                {
                  expression: {
                    arguments: [],
                    expression: {
                      argumentTypes: [],
                      id: 40166,
                      name: '_refreshPrice',
                      nodeType: 'Identifier',
                      overloadedDeclarations: [],
                      referencedDeclaration: 40029,
                      src: '15537:13:59',
                      typeDescriptions: {
                        typeIdentifier: 't_function_internal_nonpayable$__$returns$_t_uint256_$_t_uint256_$',
                        typeString: 'function () returns (uint256,uint256)',
                      },
                    },
                    id: 40167,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    kind: 'functionCall',
                    lValueRequested: false,
                    nameLocations: [],
                    names: [],
                    nodeType: 'FunctionCall',
                    src: '15537:15:59',
                    tryCall: false,
                    typeDescriptions: {
                      typeIdentifier: 't_tuple$_t_uint256_$_t_uint256_$',
                      typeString: 'tuple(uint256,uint256)',
                    },
                  },
                  id: 40168,
                  nodeType: 'ExpressionStatement',
                  src: '15537:15:59',
                },
              ],
            },
            documentation: {
              id: 40161,
              nodeType: 'StructuredDocumentation',
              src: '15403:76:59',
              text: ' @notice Force refresh the cached Chainlink ETH/USD price.',
            },
            functionSelector: '3c67a5b2',
            implemented: true,
            kind: 'function',
            modifiers: [
              {
                id: 40164,
                kind: 'modifierInvocation',
                modifierName: {
                  id: 40163,
                  name: 'onlyOwner',
                  nameLocations: ['15517:9:59'],
                  nodeType: 'IdentifierPath',
                  referencedDeclaration: 33256,
                  src: '15517:9:59',
                },
                nodeType: 'ModifierInvocation',
                src: '15517:9:59',
              },
            ],
            name: 'refreshPrice',
            nameLocation: '15493:12:59',
            parameters: {
              id: 40162,
              nodeType: 'ParameterList',
              parameters: [],
              src: '15505:2:59',
            },
            returnParameters: {
              id: 40165,
              nodeType: 'ParameterList',
              parameters: [],
              src: '15527:0:59',
            },
            scope: 40314,
            stateMutability: 'nonpayable',
            virtual: false,
            visibility: 'external',
          },
          {
            id: 40188,
            nodeType: 'FunctionDefinition',
            src: '15727:142:59',
            nodes: [],
            body: {
              id: 40187,
              nodeType: 'Block',
              src: '15782:87:59',
              nodes: [],
              statements: [
                {
                  eventCall: {
                    arguments: [
                      {
                        id: 40179,
                        name: 'usdUnitPrice',
                        nodeType: 'Identifier',
                        overloadedDeclarations: [],
                        referencedDeclaration: 39564,
                        src: '15806:12:59',
                        typeDescriptions: {
                          typeIdentifier: 't_uint256',
                          typeString: 'uint256',
                        },
                      },
                      {
                        id: 40180,
                        name: 'usdPrice',
                        nodeType: 'Identifier',
                        overloadedDeclarations: [],
                        referencedDeclaration: 40173,
                        src: '15820:8:59',
                        typeDescriptions: {
                          typeIdentifier: 't_uint256',
                          typeString: 'uint256',
                        },
                      },
                    ],
                    expression: {
                      argumentTypes: [
                        {
                          typeIdentifier: 't_uint256',
                          typeString: 'uint256',
                        },
                        {
                          typeIdentifier: 't_uint256',
                          typeString: 'uint256',
                        },
                      ],
                      id: 40178,
                      name: 'SetPrice',
                      nodeType: 'Identifier',
                      overloadedDeclarations: [],
                      referencedDeclaration: 39511,
                      src: '15797:8:59',
                      typeDescriptions: {
                        typeIdentifier: 't_function_event_nonpayable$_t_uint256_$_t_uint256_$returns$__$',
                        typeString: 'function (uint256,uint256)',
                      },
                    },
                    id: 40181,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    kind: 'functionCall',
                    lValueRequested: false,
                    nameLocations: [],
                    names: [],
                    nodeType: 'FunctionCall',
                    src: '15797:32:59',
                    tryCall: false,
                    typeDescriptions: {
                      typeIdentifier: 't_tuple$__$',
                      typeString: 'tuple()',
                    },
                  },
                  id: 40182,
                  nodeType: 'EmitStatement',
                  src: '15792:37:59',
                },
                {
                  expression: {
                    id: 40185,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    lValueRequested: false,
                    leftHandSide: {
                      id: 40183,
                      name: 'usdUnitPrice',
                      nodeType: 'Identifier',
                      overloadedDeclarations: [],
                      referencedDeclaration: 39564,
                      src: '15839:12:59',
                      typeDescriptions: {
                        typeIdentifier: 't_uint256',
                        typeString: 'uint256',
                      },
                    },
                    nodeType: 'Assignment',
                    operator: '=',
                    rightHandSide: {
                      id: 40184,
                      name: 'usdPrice',
                      nodeType: 'Identifier',
                      overloadedDeclarations: [],
                      referencedDeclaration: 40173,
                      src: '15854:8:59',
                      typeDescriptions: {
                        typeIdentifier: 't_uint256',
                        typeString: 'uint256',
                      },
                    },
                    src: '15839:23:59',
                    typeDescriptions: {
                      typeIdentifier: 't_uint256',
                      typeString: 'uint256',
                    },
                  },
                  id: 40186,
                  nodeType: 'ExpressionStatement',
                  src: '15839:23:59',
                },
              ],
            },
            documentation: {
              id: 40171,
              nodeType: 'StructuredDocumentation',
              src: '15565:157:59',
              text: ' @notice Change the USD price per storage unit.\n @param usdPrice The new unit price in USD. Fixed point value with 8 decimals.',
            },
            functionSelector: '91b7f5ed',
            implemented: true,
            kind: 'function',
            modifiers: [
              {
                id: 40176,
                kind: 'modifierInvocation',
                modifierName: {
                  id: 40175,
                  name: 'onlyOwner',
                  nameLocations: ['15772:9:59'],
                  nodeType: 'IdentifierPath',
                  referencedDeclaration: 33256,
                  src: '15772:9:59',
                },
                nodeType: 'ModifierInvocation',
                src: '15772:9:59',
              },
            ],
            name: 'setPrice',
            nameLocation: '15736:8:59',
            parameters: {
              id: 40174,
              nodeType: 'ParameterList',
              parameters: [
                {
                  constant: false,
                  id: 40173,
                  mutability: 'mutable',
                  name: 'usdPrice',
                  nameLocation: '15753:8:59',
                  nodeType: 'VariableDeclaration',
                  scope: 40188,
                  src: '15745:16:59',
                  stateVariable: false,
                  storageLocation: 'default',
                  typeDescriptions: {
                    typeIdentifier: 't_uint256',
                    typeString: 'uint256',
                  },
                  typeName: {
                    id: 40172,
                    name: 'uint256',
                    nodeType: 'ElementaryTypeName',
                    src: '15745:7:59',
                    typeDescriptions: {
                      typeIdentifier: 't_uint256',
                      typeString: 'uint256',
                    },
                  },
                  visibility: 'internal',
                },
              ],
              src: '15744:18:59',
            },
            returnParameters: {
              id: 40177,
              nodeType: 'ParameterList',
              parameters: [],
              src: '15782:0:59',
            },
            scope: 40314,
            stateMutability: 'nonpayable',
            virtual: false,
            visibility: 'external',
          },
          {
            id: 40206,
            nodeType: 'FunctionDefinition',
            src: '16016:125:59',
            nodes: [],
            body: {
              id: 40205,
              nodeType: 'Block',
              src: '16069:72:59',
              nodes: [],
              statements: [
                {
                  eventCall: {
                    arguments: [
                      {
                        id: 40197,
                        name: 'maxUnits',
                        nodeType: 'Identifier',
                        overloadedDeclarations: [],
                        referencedDeclaration: 39567,
                        src: '16096:8:59',
                        typeDescriptions: {
                          typeIdentifier: 't_uint256',
                          typeString: 'uint256',
                        },
                      },
                      {
                        id: 40198,
                        name: 'max',
                        nodeType: 'Identifier',
                        overloadedDeclarations: [],
                        referencedDeclaration: 40191,
                        src: '16106:3:59',
                        typeDescriptions: {
                          typeIdentifier: 't_uint256',
                          typeString: 'uint256',
                        },
                      },
                    ],
                    expression: {
                      argumentTypes: [
                        {
                          typeIdentifier: 't_uint256',
                          typeString: 'uint256',
                        },
                        {
                          typeIdentifier: 't_uint256',
                          typeString: 'uint256',
                        },
                      ],
                      id: 40196,
                      name: 'SetMaxUnits',
                      nodeType: 'Identifier',
                      overloadedDeclarations: [],
                      referencedDeclaration: 39518,
                      src: '16084:11:59',
                      typeDescriptions: {
                        typeIdentifier: 't_function_event_nonpayable$_t_uint256_$_t_uint256_$returns$__$',
                        typeString: 'function (uint256,uint256)',
                      },
                    },
                    id: 40199,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    kind: 'functionCall',
                    lValueRequested: false,
                    nameLocations: [],
                    names: [],
                    nodeType: 'FunctionCall',
                    src: '16084:26:59',
                    tryCall: false,
                    typeDescriptions: {
                      typeIdentifier: 't_tuple$__$',
                      typeString: 'tuple()',
                    },
                  },
                  id: 40200,
                  nodeType: 'EmitStatement',
                  src: '16079:31:59',
                },
                {
                  expression: {
                    id: 40203,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    lValueRequested: false,
                    leftHandSide: {
                      id: 40201,
                      name: 'maxUnits',
                      nodeType: 'Identifier',
                      overloadedDeclarations: [],
                      referencedDeclaration: 39567,
                      src: '16120:8:59',
                      typeDescriptions: {
                        typeIdentifier: 't_uint256',
                        typeString: 'uint256',
                      },
                    },
                    nodeType: 'Assignment',
                    operator: '=',
                    rightHandSide: {
                      id: 40202,
                      name: 'max',
                      nodeType: 'Identifier',
                      overloadedDeclarations: [],
                      referencedDeclaration: 40191,
                      src: '16131:3:59',
                      typeDescriptions: {
                        typeIdentifier: 't_uint256',
                        typeString: 'uint256',
                      },
                    },
                    src: '16120:14:59',
                    typeDescriptions: {
                      typeIdentifier: 't_uint256',
                      typeString: 'uint256',
                    },
                  },
                  id: 40204,
                  nodeType: 'ExpressionStatement',
                  src: '16120:14:59',
                },
              ],
            },
            documentation: {
              id: 40189,
              nodeType: 'StructuredDocumentation',
              src: '15875:136:59',
              text: ' @notice Change the maximum supply of storage units.\n @param max The new maximum supply of storage units.',
            },
            functionSelector: 'd285e8fd',
            implemented: true,
            kind: 'function',
            modifiers: [
              {
                id: 40194,
                kind: 'modifierInvocation',
                modifierName: {
                  id: 40193,
                  name: 'onlyOwner',
                  nameLocations: ['16059:9:59'],
                  nodeType: 'IdentifierPath',
                  referencedDeclaration: 33256,
                  src: '16059:9:59',
                },
                nodeType: 'ModifierInvocation',
                src: '16059:9:59',
              },
            ],
            name: 'setMaxUnits',
            nameLocation: '16025:11:59',
            parameters: {
              id: 40192,
              nodeType: 'ParameterList',
              parameters: [
                {
                  constant: false,
                  id: 40191,
                  mutability: 'mutable',
                  name: 'max',
                  nameLocation: '16045:3:59',
                  nodeType: 'VariableDeclaration',
                  scope: 40206,
                  src: '16037:11:59',
                  stateVariable: false,
                  storageLocation: 'default',
                  typeDescriptions: {
                    typeIdentifier: 't_uint256',
                    typeString: 'uint256',
                  },
                  typeName: {
                    id: 40190,
                    name: 'uint256',
                    nodeType: 'ElementaryTypeName',
                    src: '16037:7:59',
                    typeDescriptions: {
                      typeIdentifier: 't_uint256',
                      typeString: 'uint256',
                    },
                  },
                  visibility: 'internal',
                },
              ],
              src: '16036:13:59',
            },
            returnParameters: {
              id: 40195,
              nodeType: 'ParameterList',
              parameters: [],
              src: '16069:0:59',
            },
            scope: 40314,
            stateMutability: 'nonpayable',
            virtual: false,
            visibility: 'external',
          },
          {
            id: 40232,
            nodeType: 'FunctionDefinition',
            src: '16272:270:59',
            nodes: [],
            body: {
              id: 40231,
              nodeType: 'Block',
              src: '16343:199:59',
              nodes: [],
              statements: [
                {
                  condition: {
                    commonType: {
                      typeIdentifier: 't_uint256',
                      typeString: 'uint256',
                    },
                    id: 40217,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    lValueRequested: false,
                    leftExpression: {
                      id: 40214,
                      name: 'timestamp',
                      nodeType: 'Identifier',
                      overloadedDeclarations: [],
                      referencedDeclaration: 40209,
                      src: '16357:9:59',
                      typeDescriptions: {
                        typeIdentifier: 't_uint256',
                        typeString: 'uint256',
                      },
                    },
                    nodeType: 'BinaryOperation',
                    operator: '<',
                    rightExpression: {
                      expression: {
                        id: 40215,
                        name: 'block',
                        nodeType: 'Identifier',
                        overloadedDeclarations: [],
                        referencedDeclaration: -4,
                        src: '16369:5:59',
                        typeDescriptions: {
                          typeIdentifier: 't_magic_block',
                          typeString: 'block',
                        },
                      },
                      id: 40216,
                      isConstant: false,
                      isLValue: false,
                      isPure: false,
                      lValueRequested: false,
                      memberLocation: '16375:9:59',
                      memberName: 'timestamp',
                      nodeType: 'MemberAccess',
                      src: '16369:15:59',
                      typeDescriptions: {
                        typeIdentifier: 't_uint256',
                        typeString: 'uint256',
                      },
                    },
                    src: '16357:27:59',
                    typeDescriptions: {
                      typeIdentifier: 't_bool',
                      typeString: 'bool',
                    },
                  },
                  id: 40221,
                  nodeType: 'IfStatement',
                  src: '16353:69:59',
                  trueBody: {
                    errorCall: {
                      arguments: [],
                      expression: {
                        argumentTypes: [],
                        id: 40218,
                        name: 'InvalidDeprecationTimestamp',
                        nodeType: 'Identifier',
                        overloadedDeclarations: [],
                        referencedDeclaration: 39495,
                        src: '16393:27:59',
                        typeDescriptions: {
                          typeIdentifier: 't_function_error_pure$__$returns$__$',
                          typeString: 'function () pure',
                        },
                      },
                      id: 40219,
                      isConstant: false,
                      isLValue: false,
                      isPure: false,
                      kind: 'functionCall',
                      lValueRequested: false,
                      nameLocations: [],
                      names: [],
                      nodeType: 'FunctionCall',
                      src: '16393:29:59',
                      tryCall: false,
                      typeDescriptions: {
                        typeIdentifier: 't_tuple$__$',
                        typeString: 'tuple()',
                      },
                    },
                    id: 40220,
                    nodeType: 'RevertStatement',
                    src: '16386:36:59',
                  },
                },
                {
                  eventCall: {
                    arguments: [
                      {
                        id: 40223,
                        name: 'deprecationTimestamp',
                        nodeType: 'Identifier',
                        overloadedDeclarations: [],
                        referencedDeclaration: 39561,
                        src: '16461:20:59',
                        typeDescriptions: {
                          typeIdentifier: 't_uint256',
                          typeString: 'uint256',
                        },
                      },
                      {
                        id: 40224,
                        name: 'timestamp',
                        nodeType: 'Identifier',
                        overloadedDeclarations: [],
                        referencedDeclaration: 40209,
                        src: '16483:9:59',
                        typeDescriptions: {
                          typeIdentifier: 't_uint256',
                          typeString: 'uint256',
                        },
                      },
                    ],
                    expression: {
                      argumentTypes: [
                        {
                          typeIdentifier: 't_uint256',
                          typeString: 'uint256',
                        },
                        {
                          typeIdentifier: 't_uint256',
                          typeString: 'uint256',
                        },
                      ],
                      id: 40222,
                      name: 'SetDeprecationTimestamp',
                      nodeType: 'Identifier',
                      overloadedDeclarations: [],
                      referencedDeclaration: 39525,
                      src: '16437:23:59',
                      typeDescriptions: {
                        typeIdentifier: 't_function_event_nonpayable$_t_uint256_$_t_uint256_$returns$__$',
                        typeString: 'function (uint256,uint256)',
                      },
                    },
                    id: 40225,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    kind: 'functionCall',
                    lValueRequested: false,
                    nameLocations: [],
                    names: [],
                    nodeType: 'FunctionCall',
                    src: '16437:56:59',
                    tryCall: false,
                    typeDescriptions: {
                      typeIdentifier: 't_tuple$__$',
                      typeString: 'tuple()',
                    },
                  },
                  id: 40226,
                  nodeType: 'EmitStatement',
                  src: '16432:61:59',
                },
                {
                  expression: {
                    id: 40229,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    lValueRequested: false,
                    leftHandSide: {
                      id: 40227,
                      name: 'deprecationTimestamp',
                      nodeType: 'Identifier',
                      overloadedDeclarations: [],
                      referencedDeclaration: 39561,
                      src: '16503:20:59',
                      typeDescriptions: {
                        typeIdentifier: 't_uint256',
                        typeString: 'uint256',
                      },
                    },
                    nodeType: 'Assignment',
                    operator: '=',
                    rightHandSide: {
                      id: 40228,
                      name: 'timestamp',
                      nodeType: 'Identifier',
                      overloadedDeclarations: [],
                      referencedDeclaration: 40209,
                      src: '16526:9:59',
                      typeDescriptions: {
                        typeIdentifier: 't_uint256',
                        typeString: 'uint256',
                      },
                    },
                    src: '16503:32:59',
                    typeDescriptions: {
                      typeIdentifier: 't_uint256',
                      typeString: 'uint256',
                    },
                  },
                  id: 40230,
                  nodeType: 'ExpressionStatement',
                  src: '16503:32:59',
                },
              ],
            },
            documentation: {
              id: 40207,
              nodeType: 'StructuredDocumentation',
              src: '16147:120:59',
              text: ' @notice Change the deprecationTimestamp.\n @param timestamp The new deprecationTimestamp.',
            },
            functionSelector: '8d567f86',
            implemented: true,
            kind: 'function',
            modifiers: [
              {
                id: 40212,
                kind: 'modifierInvocation',
                modifierName: {
                  id: 40211,
                  name: 'onlyOwner',
                  nameLocations: ['16333:9:59'],
                  nodeType: 'IdentifierPath',
                  referencedDeclaration: 33256,
                  src: '16333:9:59',
                },
                nodeType: 'ModifierInvocation',
                src: '16333:9:59',
              },
            ],
            name: 'setDeprecationTimestamp',
            nameLocation: '16281:23:59',
            parameters: {
              id: 40210,
              nodeType: 'ParameterList',
              parameters: [
                {
                  constant: false,
                  id: 40209,
                  mutability: 'mutable',
                  name: 'timestamp',
                  nameLocation: '16313:9:59',
                  nodeType: 'VariableDeclaration',
                  scope: 40232,
                  src: '16305:17:59',
                  stateVariable: false,
                  storageLocation: 'default',
                  typeDescriptions: {
                    typeIdentifier: 't_uint256',
                    typeString: 'uint256',
                  },
                  typeName: {
                    id: 40208,
                    name: 'uint256',
                    nodeType: 'ElementaryTypeName',
                    src: '16305:7:59',
                    typeDescriptions: {
                      typeIdentifier: 't_uint256',
                      typeString: 'uint256',
                    },
                  },
                  visibility: 'internal',
                },
              ],
              src: '16304:19:59',
            },
            returnParameters: {
              id: 40213,
              nodeType: 'ParameterList',
              parameters: [],
              src: '16343:0:59',
            },
            scope: 40314,
            stateMutability: 'nonpayable',
            virtual: false,
            visibility: 'external',
          },
          {
            id: 40250,
            nodeType: 'FunctionDefinition',
            src: '16676:178:59',
            nodes: [],
            body: {
              id: 40249,
              nodeType: 'Block',
              src: '16739:115:59',
              nodes: [],
              statements: [
                {
                  eventCall: {
                    arguments: [
                      {
                        id: 40241,
                        name: 'priceFeedCacheDuration',
                        nodeType: 'Identifier',
                        overloadedDeclarations: [],
                        referencedDeclaration: 39570,
                        src: '16771:22:59',
                        typeDescriptions: {
                          typeIdentifier: 't_uint256',
                          typeString: 'uint256',
                        },
                      },
                      {
                        id: 40242,
                        name: 'duration',
                        nodeType: 'Identifier',
                        overloadedDeclarations: [],
                        referencedDeclaration: 40235,
                        src: '16795:8:59',
                        typeDescriptions: {
                          typeIdentifier: 't_uint256',
                          typeString: 'uint256',
                        },
                      },
                    ],
                    expression: {
                      argumentTypes: [
                        {
                          typeIdentifier: 't_uint256',
                          typeString: 'uint256',
                        },
                        {
                          typeIdentifier: 't_uint256',
                          typeString: 'uint256',
                        },
                      ],
                      id: 40240,
                      name: 'SetCacheDuration',
                      nodeType: 'Identifier',
                      overloadedDeclarations: [],
                      referencedDeclaration: 39532,
                      src: '16754:16:59',
                      typeDescriptions: {
                        typeIdentifier: 't_function_event_nonpayable$_t_uint256_$_t_uint256_$returns$__$',
                        typeString: 'function (uint256,uint256)',
                      },
                    },
                    id: 40243,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    kind: 'functionCall',
                    lValueRequested: false,
                    nameLocations: [],
                    names: [],
                    nodeType: 'FunctionCall',
                    src: '16754:50:59',
                    tryCall: false,
                    typeDescriptions: {
                      typeIdentifier: 't_tuple$__$',
                      typeString: 'tuple()',
                    },
                  },
                  id: 40244,
                  nodeType: 'EmitStatement',
                  src: '16749:55:59',
                },
                {
                  expression: {
                    id: 40247,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    lValueRequested: false,
                    leftHandSide: {
                      id: 40245,
                      name: 'priceFeedCacheDuration',
                      nodeType: 'Identifier',
                      overloadedDeclarations: [],
                      referencedDeclaration: 39570,
                      src: '16814:22:59',
                      typeDescriptions: {
                        typeIdentifier: 't_uint256',
                        typeString: 'uint256',
                      },
                    },
                    nodeType: 'Assignment',
                    operator: '=',
                    rightHandSide: {
                      id: 40246,
                      name: 'duration',
                      nodeType: 'Identifier',
                      overloadedDeclarations: [],
                      referencedDeclaration: 40235,
                      src: '16839:8:59',
                      typeDescriptions: {
                        typeIdentifier: 't_uint256',
                        typeString: 'uint256',
                      },
                    },
                    src: '16814:33:59',
                    typeDescriptions: {
                      typeIdentifier: 't_uint256',
                      typeString: 'uint256',
                    },
                  },
                  id: 40248,
                  nodeType: 'ExpressionStatement',
                  src: '16814:33:59',
                },
              ],
            },
            documentation: {
              id: 40233,
              nodeType: 'StructuredDocumentation',
              src: '16548:123:59',
              text: ' @notice Change the priceFeedCacheDuration.\n @param duration The new priceFeedCacheDuration.',
            },
            functionSelector: '194e9951',
            implemented: true,
            kind: 'function',
            modifiers: [
              {
                id: 40238,
                kind: 'modifierInvocation',
                modifierName: {
                  id: 40237,
                  name: 'onlyOwner',
                  nameLocations: ['16729:9:59'],
                  nodeType: 'IdentifierPath',
                  referencedDeclaration: 33256,
                  src: '16729:9:59',
                },
                nodeType: 'ModifierInvocation',
                src: '16729:9:59',
              },
            ],
            name: 'setCacheDuration',
            nameLocation: '16685:16:59',
            parameters: {
              id: 40236,
              nodeType: 'ParameterList',
              parameters: [
                {
                  constant: false,
                  id: 40235,
                  mutability: 'mutable',
                  name: 'duration',
                  nameLocation: '16710:8:59',
                  nodeType: 'VariableDeclaration',
                  scope: 40250,
                  src: '16702:16:59',
                  stateVariable: false,
                  storageLocation: 'default',
                  typeDescriptions: {
                    typeIdentifier: 't_uint256',
                    typeString: 'uint256',
                  },
                  typeName: {
                    id: 40234,
                    name: 'uint256',
                    nodeType: 'ElementaryTypeName',
                    src: '16702:7:59',
                    typeDescriptions: {
                      typeIdentifier: 't_uint256',
                      typeString: 'uint256',
                    },
                  },
                  visibility: 'internal',
                },
              ],
              src: '16701:18:59',
            },
            returnParameters: {
              id: 40239,
              nodeType: 'ParameterList',
              parameters: [],
              src: '16739:0:59',
            },
            scope: 40314,
            stateMutability: 'nonpayable',
            virtual: false,
            visibility: 'external',
          },
          {
            id: 40268,
            nodeType: 'FunctionDefinition',
            src: '16984:166:59',
            nodes: [],
            body: {
              id: 40267,
              nodeType: 'Block',
              src: '17043:107:59',
              nodes: [],
              statements: [
                {
                  eventCall: {
                    arguments: [
                      {
                        id: 40259,
                        name: 'uptimeFeedGracePeriod',
                        nodeType: 'Identifier',
                        overloadedDeclarations: [],
                        referencedDeclaration: 39573,
                        src: '17073:21:59',
                        typeDescriptions: {
                          typeIdentifier: 't_uint256',
                          typeString: 'uint256',
                        },
                      },
                      {
                        id: 40260,
                        name: 'period',
                        nodeType: 'Identifier',
                        overloadedDeclarations: [],
                        referencedDeclaration: 40253,
                        src: '17096:6:59',
                        typeDescriptions: {
                          typeIdentifier: 't_uint256',
                          typeString: 'uint256',
                        },
                      },
                    ],
                    expression: {
                      argumentTypes: [
                        {
                          typeIdentifier: 't_uint256',
                          typeString: 'uint256',
                        },
                        {
                          typeIdentifier: 't_uint256',
                          typeString: 'uint256',
                        },
                      ],
                      id: 40258,
                      name: 'SetGracePeriod',
                      nodeType: 'Identifier',
                      overloadedDeclarations: [],
                      referencedDeclaration: 39539,
                      src: '17058:14:59',
                      typeDescriptions: {
                        typeIdentifier: 't_function_event_nonpayable$_t_uint256_$_t_uint256_$returns$__$',
                        typeString: 'function (uint256,uint256)',
                      },
                    },
                    id: 40261,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    kind: 'functionCall',
                    lValueRequested: false,
                    nameLocations: [],
                    names: [],
                    nodeType: 'FunctionCall',
                    src: '17058:45:59',
                    tryCall: false,
                    typeDescriptions: {
                      typeIdentifier: 't_tuple$__$',
                      typeString: 'tuple()',
                    },
                  },
                  id: 40262,
                  nodeType: 'EmitStatement',
                  src: '17053:50:59',
                },
                {
                  expression: {
                    id: 40265,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    lValueRequested: false,
                    leftHandSide: {
                      id: 40263,
                      name: 'uptimeFeedGracePeriod',
                      nodeType: 'Identifier',
                      overloadedDeclarations: [],
                      referencedDeclaration: 39573,
                      src: '17113:21:59',
                      typeDescriptions: {
                        typeIdentifier: 't_uint256',
                        typeString: 'uint256',
                      },
                    },
                    nodeType: 'Assignment',
                    operator: '=',
                    rightHandSide: {
                      id: 40264,
                      name: 'period',
                      nodeType: 'Identifier',
                      overloadedDeclarations: [],
                      referencedDeclaration: 40253,
                      src: '17137:6:59',
                      typeDescriptions: {
                        typeIdentifier: 't_uint256',
                        typeString: 'uint256',
                      },
                    },
                    src: '17113:30:59',
                    typeDescriptions: {
                      typeIdentifier: 't_uint256',
                      typeString: 'uint256',
                    },
                  },
                  id: 40266,
                  nodeType: 'ExpressionStatement',
                  src: '17113:30:59',
                },
              ],
            },
            documentation: {
              id: 40251,
              nodeType: 'StructuredDocumentation',
              src: '16860:119:59',
              text: ' @notice Change the uptimeFeedGracePeriod.\n @param period The new uptimeFeedGracePeriod.',
            },
            functionSelector: 'f2f65960',
            implemented: true,
            kind: 'function',
            modifiers: [
              {
                id: 40256,
                kind: 'modifierInvocation',
                modifierName: {
                  id: 40255,
                  name: 'onlyOwner',
                  nameLocations: ['17033:9:59'],
                  nodeType: 'IdentifierPath',
                  referencedDeclaration: 33256,
                  src: '17033:9:59',
                },
                nodeType: 'ModifierInvocation',
                src: '17033:9:59',
              },
            ],
            name: 'setGracePeriod',
            nameLocation: '16993:14:59',
            parameters: {
              id: 40254,
              nodeType: 'ParameterList',
              parameters: [
                {
                  constant: false,
                  id: 40253,
                  mutability: 'mutable',
                  name: 'period',
                  nameLocation: '17016:6:59',
                  nodeType: 'VariableDeclaration',
                  scope: 40268,
                  src: '17008:14:59',
                  stateVariable: false,
                  storageLocation: 'default',
                  typeDescriptions: {
                    typeIdentifier: 't_uint256',
                    typeString: 'uint256',
                  },
                  typeName: {
                    id: 40252,
                    name: 'uint256',
                    nodeType: 'ElementaryTypeName',
                    src: '17008:7:59',
                    typeDescriptions: {
                      typeIdentifier: 't_uint256',
                      typeString: 'uint256',
                    },
                  },
                  visibility: 'internal',
                },
              ],
              src: '17007:16:59',
            },
            returnParameters: {
              id: 40257,
              nodeType: 'ParameterList',
              parameters: [],
              src: '17043:0:59',
            },
            scope: 40314,
            stateMutability: 'nonpayable',
            virtual: false,
            visibility: 'external',
          },
          {
            id: 40313,
            nodeType: 'FunctionDefinition',
            src: '17374:285:59',
            nodes: [],
            body: {
              id: 40312,
              nodeType: 'Block',
              src: '17439:220:59',
              nodes: [],
              statements: [
                {
                  condition: {
                    commonType: {
                      typeIdentifier: 't_uint256',
                      typeString: 'uint256',
                    },
                    id: 40284,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    lValueRequested: false,
                    leftExpression: {
                      expression: {
                        arguments: [
                          {
                            id: 40280,
                            name: 'this',
                            nodeType: 'Identifier',
                            overloadedDeclarations: [],
                            referencedDeclaration: -28,
                            src: '17461:4:59',
                            typeDescriptions: {
                              typeIdentifier: 't_contract$_StorageRent_$40314',
                              typeString: 'contract StorageRent',
                            },
                          },
                        ],
                        expression: {
                          argumentTypes: [
                            {
                              typeIdentifier: 't_contract$_StorageRent_$40314',
                              typeString: 'contract StorageRent',
                            },
                          ],
                          id: 40279,
                          isConstant: false,
                          isLValue: false,
                          isPure: true,
                          lValueRequested: false,
                          nodeType: 'ElementaryTypeNameExpression',
                          src: '17453:7:59',
                          typeDescriptions: {
                            typeIdentifier: 't_type$_t_address_$',
                            typeString: 'type(address)',
                          },
                          typeName: {
                            id: 40278,
                            name: 'address',
                            nodeType: 'ElementaryTypeName',
                            src: '17453:7:59',
                            typeDescriptions: {},
                          },
                        },
                        id: 40281,
                        isConstant: false,
                        isLValue: false,
                        isPure: false,
                        kind: 'typeConversion',
                        lValueRequested: false,
                        nameLocations: [],
                        names: [],
                        nodeType: 'FunctionCall',
                        src: '17453:13:59',
                        tryCall: false,
                        typeDescriptions: {
                          typeIdentifier: 't_address',
                          typeString: 'address',
                        },
                      },
                      id: 40282,
                      isConstant: false,
                      isLValue: false,
                      isPure: false,
                      lValueRequested: false,
                      memberLocation: '17467:7:59',
                      memberName: 'balance',
                      nodeType: 'MemberAccess',
                      src: '17453:21:59',
                      typeDescriptions: {
                        typeIdentifier: 't_uint256',
                        typeString: 'uint256',
                      },
                    },
                    nodeType: 'BinaryOperation',
                    operator: '<',
                    rightExpression: {
                      id: 40283,
                      name: 'amount',
                      nodeType: 'Identifier',
                      overloadedDeclarations: [],
                      referencedDeclaration: 40273,
                      src: '17477:6:59',
                      typeDescriptions: {
                        typeIdentifier: 't_uint256',
                        typeString: 'uint256',
                      },
                    },
                    src: '17453:30:59',
                    typeDescriptions: {
                      typeIdentifier: 't_bool',
                      typeString: 'bool',
                    },
                  },
                  id: 40288,
                  nodeType: 'IfStatement',
                  src: '17449:62:59',
                  trueBody: {
                    errorCall: {
                      arguments: [],
                      expression: {
                        argumentTypes: [],
                        id: 40285,
                        name: 'InsufficientFunds',
                        nodeType: 'Identifier',
                        overloadedDeclarations: [],
                        referencedDeclaration: 39474,
                        src: '17492:17:59',
                        typeDescriptions: {
                          typeIdentifier: 't_function_error_pure$__$returns$__$',
                          typeString: 'function () pure',
                        },
                      },
                      id: 40286,
                      isConstant: false,
                      isLValue: false,
                      isPure: false,
                      kind: 'functionCall',
                      lValueRequested: false,
                      nameLocations: [],
                      names: [],
                      nodeType: 'FunctionCall',
                      src: '17492:19:59',
                      tryCall: false,
                      typeDescriptions: {
                        typeIdentifier: 't_tuple$__$',
                        typeString: 'tuple()',
                      },
                    },
                    id: 40287,
                    nodeType: 'RevertStatement',
                    src: '17485:26:59',
                  },
                },
                {
                  eventCall: {
                    arguments: [
                      {
                        id: 40290,
                        name: 'to',
                        nodeType: 'Identifier',
                        overloadedDeclarations: [],
                        referencedDeclaration: 40271,
                        src: '17535:2:59',
                        typeDescriptions: {
                          typeIdentifier: 't_address',
                          typeString: 'address',
                        },
                      },
                      {
                        id: 40291,
                        name: 'amount',
                        nodeType: 'Identifier',
                        overloadedDeclarations: [],
                        referencedDeclaration: 40273,
                        src: '17539:6:59',
                        typeDescriptions: {
                          typeIdentifier: 't_uint256',
                          typeString: 'uint256',
                        },
                      },
                    ],
                    expression: {
                      argumentTypes: [
                        {
                          typeIdentifier: 't_address',
                          typeString: 'address',
                        },
                        {
                          typeIdentifier: 't_uint256',
                          typeString: 'uint256',
                        },
                      ],
                      id: 40289,
                      name: 'Withdraw',
                      nodeType: 'Identifier',
                      overloadedDeclarations: [],
                      referencedDeclaration: 39546,
                      src: '17526:8:59',
                      typeDescriptions: {
                        typeIdentifier: 't_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$',
                        typeString: 'function (address,uint256)',
                      },
                    },
                    id: 40292,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    kind: 'functionCall',
                    lValueRequested: false,
                    nameLocations: [],
                    names: [],
                    nodeType: 'FunctionCall',
                    src: '17526:20:59',
                    tryCall: false,
                    typeDescriptions: {
                      typeIdentifier: 't_tuple$__$',
                      typeString: 'tuple()',
                    },
                  },
                  id: 40293,
                  nodeType: 'EmitStatement',
                  src: '17521:25:59',
                },
                {
                  assignments: [40295, null],
                  declarations: [
                    {
                      constant: false,
                      id: 40295,
                      mutability: 'mutable',
                      name: 'success',
                      nameLocation: '17562:7:59',
                      nodeType: 'VariableDeclaration',
                      scope: 40312,
                      src: '17557:12:59',
                      stateVariable: false,
                      storageLocation: 'default',
                      typeDescriptions: {
                        typeIdentifier: 't_bool',
                        typeString: 'bool',
                      },
                      typeName: {
                        id: 40294,
                        name: 'bool',
                        nodeType: 'ElementaryTypeName',
                        src: '17557:4:59',
                        typeDescriptions: {
                          typeIdentifier: 't_bool',
                          typeString: 'bool',
                        },
                      },
                      visibility: 'internal',
                    },
                    null,
                  ],
                  id: 40305,
                  initialValue: {
                    arguments: [
                      {
                        hexValue: '',
                        id: 40303,
                        isConstant: false,
                        isLValue: false,
                        isPure: true,
                        kind: 'string',
                        lValueRequested: false,
                        nodeType: 'Literal',
                        src: '17606:2:59',
                        typeDescriptions: {
                          typeIdentifier:
                            't_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470',
                          typeString: 'literal_string ""',
                        },
                        value: '',
                      },
                    ],
                    expression: {
                      argumentTypes: [
                        {
                          typeIdentifier:
                            't_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470',
                          typeString: 'literal_string ""',
                        },
                      ],
                      expression: {
                        argumentTypes: [
                          {
                            typeIdentifier:
                              't_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470',
                            typeString: 'literal_string ""',
                          },
                        ],
                        expression: {
                          arguments: [
                            {
                              id: 40298,
                              name: 'to',
                              nodeType: 'Identifier',
                              overloadedDeclarations: [],
                              referencedDeclaration: 40271,
                              src: '17582:2:59',
                              typeDescriptions: {
                                typeIdentifier: 't_address',
                                typeString: 'address',
                              },
                            },
                          ],
                          expression: {
                            argumentTypes: [
                              {
                                typeIdentifier: 't_address',
                                typeString: 'address',
                              },
                            ],
                            id: 40297,
                            isConstant: false,
                            isLValue: false,
                            isPure: true,
                            lValueRequested: false,
                            nodeType: 'ElementaryTypeNameExpression',
                            src: '17574:8:59',
                            typeDescriptions: {
                              typeIdentifier: 't_type$_t_address_payable_$',
                              typeString: 'type(address payable)',
                            },
                            typeName: {
                              id: 40296,
                              name: 'address',
                              nodeType: 'ElementaryTypeName',
                              src: '17574:8:59',
                              stateMutability: 'payable',
                              typeDescriptions: {},
                            },
                          },
                          id: 40299,
                          isConstant: false,
                          isLValue: false,
                          isPure: false,
                          kind: 'typeConversion',
                          lValueRequested: false,
                          nameLocations: [],
                          names: [],
                          nodeType: 'FunctionCall',
                          src: '17574:11:59',
                          tryCall: false,
                          typeDescriptions: {
                            typeIdentifier: 't_address_payable',
                            typeString: 'address payable',
                          },
                        },
                        id: 40300,
                        isConstant: false,
                        isLValue: false,
                        isPure: false,
                        lValueRequested: false,
                        memberLocation: '17586:4:59',
                        memberName: 'call',
                        nodeType: 'MemberAccess',
                        src: '17574:16:59',
                        typeDescriptions: {
                          typeIdentifier:
                            't_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$',
                          typeString: 'function (bytes memory) payable returns (bool,bytes memory)',
                        },
                      },
                      id: 40302,
                      isConstant: false,
                      isLValue: false,
                      isPure: false,
                      lValueRequested: false,
                      names: ['value'],
                      nodeType: 'FunctionCallOptions',
                      options: [
                        {
                          id: 40301,
                          name: 'amount',
                          nodeType: 'Identifier',
                          overloadedDeclarations: [],
                          referencedDeclaration: 40273,
                          src: '17598:6:59',
                          typeDescriptions: {
                            typeIdentifier: 't_uint256',
                            typeString: 'uint256',
                          },
                        },
                      ],
                      src: '17574:31:59',
                      typeDescriptions: {
                        typeIdentifier:
                          't_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value',
                        typeString: 'function (bytes memory) payable returns (bool,bytes memory)',
                      },
                    },
                    id: 40304,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    kind: 'functionCall',
                    lValueRequested: false,
                    nameLocations: [],
                    names: [],
                    nodeType: 'FunctionCall',
                    src: '17574:35:59',
                    tryCall: false,
                    typeDescriptions: {
                      typeIdentifier: 't_tuple$_t_bool_$_t_bytes_memory_ptr_$',
                      typeString: 'tuple(bool,bytes memory)',
                    },
                  },
                  nodeType: 'VariableDeclarationStatement',
                  src: '17556:53:59',
                },
                {
                  condition: {
                    id: 40307,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    lValueRequested: false,
                    nodeType: 'UnaryOperation',
                    operator: '!',
                    prefix: true,
                    src: '17623:8:59',
                    subExpression: {
                      id: 40306,
                      name: 'success',
                      nodeType: 'Identifier',
                      overloadedDeclarations: [],
                      referencedDeclaration: 40295,
                      src: '17624:7:59',
                      typeDescriptions: {
                        typeIdentifier: 't_bool',
                        typeString: 'bool',
                      },
                    },
                    typeDescriptions: {
                      typeIdentifier: 't_bool',
                      typeString: 'bool',
                    },
                  },
                  id: 40311,
                  nodeType: 'IfStatement',
                  src: '17619:33:59',
                  trueBody: {
                    errorCall: {
                      arguments: [],
                      expression: {
                        argumentTypes: [],
                        id: 40308,
                        name: 'CallFailed',
                        nodeType: 'Identifier',
                        overloadedDeclarations: [],
                        referencedDeclaration: 39477,
                        src: '17640:10:59',
                        typeDescriptions: {
                          typeIdentifier: 't_function_error_pure$__$returns$__$',
                          typeString: 'function () pure',
                        },
                      },
                      id: 40309,
                      isConstant: false,
                      isLValue: false,
                      isPure: false,
                      kind: 'functionCall',
                      lValueRequested: false,
                      nameLocations: [],
                      names: [],
                      nodeType: 'FunctionCall',
                      src: '17640:12:59',
                      tryCall: false,
                      typeDescriptions: {
                        typeIdentifier: 't_tuple$__$',
                        typeString: 'tuple()',
                      },
                    },
                    id: 40310,
                    nodeType: 'RevertStatement',
                    src: '17633:19:59',
                  },
                },
              ],
            },
            documentation: {
              id: 40269,
              nodeType: 'StructuredDocumentation',
              src: '17156:213:59',
              text: ' @notice Withdraw a specified amount of ether from the contract balance to a given address.\n @param to     Address of recipient.\n @param amount The amount of ether to withdraw.',
            },
            functionSelector: 'f3fef3a3',
            implemented: true,
            kind: 'function',
            modifiers: [
              {
                id: 40276,
                kind: 'modifierInvocation',
                modifierName: {
                  id: 40275,
                  name: 'onlyOwner',
                  nameLocations: ['17429:9:59'],
                  nodeType: 'IdentifierPath',
                  referencedDeclaration: 33256,
                  src: '17429:9:59',
                },
                nodeType: 'ModifierInvocation',
                src: '17429:9:59',
              },
            ],
            name: 'withdraw',
            nameLocation: '17383:8:59',
            parameters: {
              id: 40274,
              nodeType: 'ParameterList',
              parameters: [
                {
                  constant: false,
                  id: 40271,
                  mutability: 'mutable',
                  name: 'to',
                  nameLocation: '17400:2:59',
                  nodeType: 'VariableDeclaration',
                  scope: 40313,
                  src: '17392:10:59',
                  stateVariable: false,
                  storageLocation: 'default',
                  typeDescriptions: {
                    typeIdentifier: 't_address',
                    typeString: 'address',
                  },
                  typeName: {
                    id: 40270,
                    name: 'address',
                    nodeType: 'ElementaryTypeName',
                    src: '17392:7:59',
                    stateMutability: 'nonpayable',
                    typeDescriptions: {
                      typeIdentifier: 't_address',
                      typeString: 'address',
                    },
                  },
                  visibility: 'internal',
                },
                {
                  constant: false,
                  id: 40273,
                  mutability: 'mutable',
                  name: 'amount',
                  nameLocation: '17412:6:59',
                  nodeType: 'VariableDeclaration',
                  scope: 40313,
                  src: '17404:14:59',
                  stateVariable: false,
                  storageLocation: 'default',
                  typeDescriptions: {
                    typeIdentifier: 't_uint256',
                    typeString: 'uint256',
                  },
                  typeName: {
                    id: 40272,
                    name: 'uint256',
                    nodeType: 'ElementaryTypeName',
                    src: '17404:7:59',
                    typeDescriptions: {
                      typeIdentifier: 't_uint256',
                      typeString: 'uint256',
                    },
                  },
                  visibility: 'internal',
                },
              ],
              src: '17391:28:59',
            },
            returnParameters: {
              id: 40277,
              nodeType: 'ParameterList',
              parameters: [],
              src: '17439:0:59',
            },
            scope: 40314,
            stateMutability: 'nonpayable',
            virtual: false,
            visibility: 'external',
          },
        ],
        abstract: false,
        baseContracts: [
          {
            baseName: {
              id: 39452,
              name: 'Ownable2Step',
              nameLocations: ['332:12:59'],
              nodeType: 'IdentifierPath',
              referencedDeclaration: 33420,
              src: '332:12:59',
            },
            id: 39453,
            nodeType: 'InheritanceSpecifier',
            src: '332:12:59',
          },
        ],
        canonicalName: 'StorageRent',
        contractDependencies: [],
        contractKind: 'contract',
        fullyImplemented: true,
        linearizedBaseContracts: [40314, 33420, 33337, 34449],
        name: 'StorageRent',
        nameLocation: '317:11:59',
        scope: 40315,
        usedErrors: [39459, 39462, 39465, 39468, 39471, 39474, 39477, 39480, 39483, 39486, 39489, 39492, 39495],
      },
    ],
    license: 'UNLICENSED',
  },
  id: 59,
} as const;
