export const IdRegistry = {
  abi: [
    {
      inputs: [
        {
          internalType: 'address',
          name: '_forwarder',
          type: 'address',
        },
      ],
      stateMutability: 'nonpayable',
      type: 'constructor',
    },
    {
      inputs: [],
      name: 'Escrow',
      type: 'error',
    },
    {
      inputs: [],
      name: 'HasId',
      type: 'error',
    },
    {
      inputs: [],
      name: 'HasNoId',
      type: 'error',
    },
    {
      inputs: [],
      name: 'Invitable',
      type: 'error',
    },
    {
      inputs: [],
      name: 'NoRecovery',
      type: 'error',
    },
    {
      inputs: [],
      name: 'Registrable',
      type: 'error',
    },
    {
      inputs: [],
      name: 'Unauthorized',
      type: 'error',
    },
    {
      anonymous: false,
      inputs: [
        {
          indexed: true,
          internalType: 'address',
          name: 'by',
          type: 'address',
        },
        {
          indexed: true,
          internalType: 'uint256',
          name: 'id',
          type: 'uint256',
        },
      ],
      name: 'CancelRecovery',
      type: 'event',
    },
    {
      anonymous: false,
      inputs: [
        {
          indexed: true,
          internalType: 'uint256',
          name: 'id',
          type: 'uint256',
        },
        {
          indexed: false,
          internalType: 'string',
          name: 'url',
          type: 'string',
        },
      ],
      name: 'ChangeHome',
      type: 'event',
    },
    {
      anonymous: false,
      inputs: [
        {
          indexed: true,
          internalType: 'uint256',
          name: 'id',
          type: 'uint256',
        },
        {
          indexed: true,
          internalType: 'address',
          name: 'recovery',
          type: 'address',
        },
      ],
      name: 'ChangeRecoveryAddress',
      type: 'event',
    },
    {
      anonymous: false,
      inputs: [
        {
          indexed: true,
          internalType: 'address',
          name: 'trustedCaller',
          type: 'address',
        },
      ],
      name: 'ChangeTrustedCaller',
      type: 'event',
    },
    {
      anonymous: false,
      inputs: [],
      name: 'DisableTrustedOnly',
      type: 'event',
    },
    {
      anonymous: false,
      inputs: [
        {
          indexed: true,
          internalType: 'address',
          name: 'previousOwner',
          type: 'address',
        },
        {
          indexed: true,
          internalType: 'address',
          name: 'newOwner',
          type: 'address',
        },
      ],
      name: 'OwnershipTransferred',
      type: 'event',
    },
    {
      anonymous: false,
      inputs: [
        {
          indexed: true,
          internalType: 'address',
          name: 'to',
          type: 'address',
        },
        {
          indexed: true,
          internalType: 'uint256',
          name: 'id',
          type: 'uint256',
        },
        {
          indexed: false,
          internalType: 'address',
          name: 'recovery',
          type: 'address',
        },
        {
          indexed: false,
          internalType: 'string',
          name: 'url',
          type: 'string',
        },
      ],
      name: 'Register',
      type: 'event',
    },
    {
      anonymous: false,
      inputs: [
        {
          indexed: true,
          internalType: 'address',
          name: 'from',
          type: 'address',
        },
        {
          indexed: true,
          internalType: 'address',
          name: 'to',
          type: 'address',
        },
        {
          indexed: true,
          internalType: 'uint256',
          name: 'id',
          type: 'uint256',
        },
      ],
      name: 'RequestRecovery',
      type: 'event',
    },
    {
      anonymous: false,
      inputs: [
        {
          indexed: true,
          internalType: 'address',
          name: 'from',
          type: 'address',
        },
        {
          indexed: true,
          internalType: 'address',
          name: 'to',
          type: 'address',
        },
        {
          indexed: true,
          internalType: 'uint256',
          name: 'id',
          type: 'uint256',
        },
      ],
      name: 'Transfer',
      type: 'event',
    },
    {
      inputs: [
        {
          internalType: 'address',
          name: 'from',
          type: 'address',
        },
      ],
      name: 'cancelRecovery',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function',
    },
    {
      inputs: [
        {
          internalType: 'string',
          name: 'url',
          type: 'string',
        },
      ],
      name: 'changeHome',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function',
    },
    {
      inputs: [
        {
          internalType: 'address',
          name: 'recovery',
          type: 'address',
        },
      ],
      name: 'changeRecoveryAddress',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function',
    },
    {
      inputs: [
        {
          internalType: 'address',
          name: '_trustedCaller',
          type: 'address',
        },
      ],
      name: 'changeTrustedCaller',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function',
    },
    {
      inputs: [
        {
          internalType: 'address',
          name: 'from',
          type: 'address',
        },
      ],
      name: 'completeRecovery',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function',
    },
    {
      inputs: [],
      name: 'completeTransferOwnership',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function',
    },
    {
      inputs: [],
      name: 'disableTrustedOnly',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function',
    },
    {
      inputs: [
        {
          internalType: 'address',
          name: '',
          type: 'address',
        },
      ],
      name: 'idOf',
      outputs: [
        {
          internalType: 'uint256',
          name: '',
          type: 'uint256',
        },
      ],
      stateMutability: 'view',
      type: 'function',
    },
    {
      inputs: [
        {
          internalType: 'address',
          name: 'forwarder',
          type: 'address',
        },
      ],
      name: 'isTrustedForwarder',
      outputs: [
        {
          internalType: 'bool',
          name: '',
          type: 'bool',
        },
      ],
      stateMutability: 'view',
      type: 'function',
    },
    {
      inputs: [],
      name: 'owner',
      outputs: [
        {
          internalType: 'address',
          name: '',
          type: 'address',
        },
      ],
      stateMutability: 'view',
      type: 'function',
    },
    {
      inputs: [
        {
          internalType: 'address',
          name: 'to',
          type: 'address',
        },
        {
          internalType: 'address',
          name: 'recovery',
          type: 'address',
        },
        {
          internalType: 'string',
          name: 'url',
          type: 'string',
        },
      ],
      name: 'register',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function',
    },
    {
      inputs: [],
      name: 'renounceOwnership',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function',
    },
    {
      inputs: [
        {
          internalType: 'address',
          name: 'from',
          type: 'address',
        },
        {
          internalType: 'address',
          name: 'to',
          type: 'address',
        },
      ],
      name: 'requestRecovery',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function',
    },
    {
      inputs: [
        {
          internalType: 'address',
          name: 'newOwner',
          type: 'address',
        },
      ],
      name: 'requestTransferOwnership',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function',
    },
    {
      inputs: [
        {
          internalType: 'address',
          name: 'to',
          type: 'address',
        },
      ],
      name: 'transfer',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function',
    },
    {
      inputs: [
        {
          internalType: 'address',
          name: '',
          type: 'address',
        },
      ],
      name: 'transferOwnership',
      outputs: [],
      stateMutability: 'view',
      type: 'function',
    },
    {
      inputs: [
        {
          internalType: 'address',
          name: 'to',
          type: 'address',
        },
        {
          internalType: 'address',
          name: 'recovery',
          type: 'address',
        },
        {
          internalType: 'string',
          name: 'url',
          type: 'string',
        },
      ],
      name: 'trustedRegister',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function',
    },
  ],
};

export const NameRegistry = {
  abi: [
    {
      inputs: [
        {
          internalType: 'address',
          name: '_forwarder',
          type: 'address',
        },
      ],
      stateMutability: 'nonpayable',
      type: 'constructor',
    },
    {
      inputs: [],
      name: 'CallFailed',
      type: 'error',
    },
    {
      inputs: [],
      name: 'CommitReplay',
      type: 'error',
    },
    {
      inputs: [],
      name: 'Escrow',
      type: 'error',
    },
    {
      inputs: [],
      name: 'Expired',
      type: 'error',
    },
    {
      inputs: [],
      name: 'InsufficientFunds',
      type: 'error',
    },
    {
      inputs: [],
      name: 'InvalidCommit',
      type: 'error',
    },
    {
      inputs: [],
      name: 'InvalidName',
      type: 'error',
    },
    {
      inputs: [],
      name: 'InvalidRecovery',
      type: 'error',
    },
    {
      inputs: [],
      name: 'Invitable',
      type: 'error',
    },
    {
      inputs: [],
      name: 'NoRecovery',
      type: 'error',
    },
    {
      inputs: [],
      name: 'NotAdmin',
      type: 'error',
    },
    {
      inputs: [],
      name: 'NotBiddable',
      type: 'error',
    },
    {
      inputs: [],
      name: 'NotInvitable',
      type: 'error',
    },
    {
      inputs: [],
      name: 'NotModerator',
      type: 'error',
    },
    {
      inputs: [],
      name: 'NotOperator',
      type: 'error',
    },
    {
      inputs: [],
      name: 'NotRenewable',
      type: 'error',
    },
    {
      inputs: [],
      name: 'NotTreasurer',
      type: 'error',
    },
    {
      inputs: [],
      name: 'Registered',
      type: 'error',
    },
    {
      inputs: [],
      name: 'Registrable',
      type: 'error',
    },
    {
      inputs: [],
      name: 'Unauthorized',
      type: 'error',
    },
    {
      anonymous: false,
      inputs: [
        {
          indexed: false,
          internalType: 'address',
          name: 'previousAdmin',
          type: 'address',
        },
        {
          indexed: false,
          internalType: 'address',
          name: 'newAdmin',
          type: 'address',
        },
      ],
      name: 'AdminChanged',
      type: 'event',
    },
    {
      anonymous: false,
      inputs: [
        {
          indexed: true,
          internalType: 'address',
          name: 'owner',
          type: 'address',
        },
        {
          indexed: true,
          internalType: 'address',
          name: 'approved',
          type: 'address',
        },
        {
          indexed: true,
          internalType: 'uint256',
          name: 'tokenId',
          type: 'uint256',
        },
      ],
      name: 'Approval',
      type: 'event',
    },
    {
      anonymous: false,
      inputs: [
        {
          indexed: true,
          internalType: 'address',
          name: 'owner',
          type: 'address',
        },
        {
          indexed: true,
          internalType: 'address',
          name: 'operator',
          type: 'address',
        },
        {
          indexed: false,
          internalType: 'bool',
          name: 'approved',
          type: 'bool',
        },
      ],
      name: 'ApprovalForAll',
      type: 'event',
    },
    {
      anonymous: false,
      inputs: [
        {
          indexed: true,
          internalType: 'address',
          name: 'beacon',
          type: 'address',
        },
      ],
      name: 'BeaconUpgraded',
      type: 'event',
    },
    {
      anonymous: false,
      inputs: [
        {
          indexed: true,
          internalType: 'address',
          name: 'by',
          type: 'address',
        },
        {
          indexed: true,
          internalType: 'uint256',
          name: 'tokenId',
          type: 'uint256',
        },
      ],
      name: 'CancelRecovery',
      type: 'event',
    },
    {
      anonymous: false,
      inputs: [
        {
          indexed: false,
          internalType: 'uint256',
          name: 'fee',
          type: 'uint256',
        },
      ],
      name: 'ChangeFee',
      type: 'event',
    },
    {
      anonymous: false,
      inputs: [
        {
          indexed: true,
          internalType: 'address',
          name: 'pool',
          type: 'address',
        },
      ],
      name: 'ChangePool',
      type: 'event',
    },
    {
      anonymous: false,
      inputs: [
        {
          indexed: true,
          internalType: 'uint256',
          name: 'tokenId',
          type: 'uint256',
        },
        {
          indexed: true,
          internalType: 'address',
          name: 'recovery',
          type: 'address',
        },
      ],
      name: 'ChangeRecoveryAddress',
      type: 'event',
    },
    {
      anonymous: false,
      inputs: [
        {
          indexed: true,
          internalType: 'address',
          name: 'trustedCaller',
          type: 'address',
        },
      ],
      name: 'ChangeTrustedCaller',
      type: 'event',
    },
    {
      anonymous: false,
      inputs: [
        {
          indexed: true,
          internalType: 'address',
          name: 'vault',
          type: 'address',
        },
      ],
      name: 'ChangeVault',
      type: 'event',
    },
    {
      anonymous: false,
      inputs: [],
      name: 'DisableTrustedOnly',
      type: 'event',
    },
    {
      anonymous: false,
      inputs: [
        {
          indexed: false,
          internalType: 'uint8',
          name: 'version',
          type: 'uint8',
        },
      ],
      name: 'Initialized',
      type: 'event',
    },
    {
      anonymous: false,
      inputs: [
        {
          indexed: true,
          internalType: 'uint256',
          name: 'inviterId',
          type: 'uint256',
        },
        {
          indexed: true,
          internalType: 'uint256',
          name: 'inviteeId',
          type: 'uint256',
        },
        {
          indexed: true,
          internalType: 'bytes16',
          name: 'fname',
          type: 'bytes16',
        },
      ],
      name: 'Invite',
      type: 'event',
    },
    {
      anonymous: false,
      inputs: [
        {
          indexed: false,
          internalType: 'address',
          name: 'account',
          type: 'address',
        },
      ],
      name: 'Paused',
      type: 'event',
    },
    {
      anonymous: false,
      inputs: [
        {
          indexed: true,
          internalType: 'uint256',
          name: 'tokenId',
          type: 'uint256',
        },
        {
          indexed: false,
          internalType: 'uint256',
          name: 'expiry',
          type: 'uint256',
        },
      ],
      name: 'Renew',
      type: 'event',
    },
    {
      anonymous: false,
      inputs: [
        {
          indexed: true,
          internalType: 'address',
          name: 'from',
          type: 'address',
        },
        {
          indexed: true,
          internalType: 'address',
          name: 'to',
          type: 'address',
        },
        {
          indexed: true,
          internalType: 'uint256',
          name: 'tokenId',
          type: 'uint256',
        },
      ],
      name: 'RequestRecovery',
      type: 'event',
    },
    {
      anonymous: false,
      inputs: [
        {
          indexed: true,
          internalType: 'bytes32',
          name: 'role',
          type: 'bytes32',
        },
        {
          indexed: true,
          internalType: 'bytes32',
          name: 'previousAdminRole',
          type: 'bytes32',
        },
        {
          indexed: true,
          internalType: 'bytes32',
          name: 'newAdminRole',
          type: 'bytes32',
        },
      ],
      name: 'RoleAdminChanged',
      type: 'event',
    },
    {
      anonymous: false,
      inputs: [
        {
          indexed: true,
          internalType: 'bytes32',
          name: 'role',
          type: 'bytes32',
        },
        {
          indexed: true,
          internalType: 'address',
          name: 'account',
          type: 'address',
        },
        {
          indexed: true,
          internalType: 'address',
          name: 'sender',
          type: 'address',
        },
      ],
      name: 'RoleGranted',
      type: 'event',
    },
    {
      anonymous: false,
      inputs: [
        {
          indexed: true,
          internalType: 'bytes32',
          name: 'role',
          type: 'bytes32',
        },
        {
          indexed: true,
          internalType: 'address',
          name: 'account',
          type: 'address',
        },
        {
          indexed: true,
          internalType: 'address',
          name: 'sender',
          type: 'address',
        },
      ],
      name: 'RoleRevoked',
      type: 'event',
    },
    {
      anonymous: false,
      inputs: [
        {
          indexed: true,
          internalType: 'address',
          name: 'from',
          type: 'address',
        },
        {
          indexed: true,
          internalType: 'address',
          name: 'to',
          type: 'address',
        },
        {
          indexed: true,
          internalType: 'uint256',
          name: 'tokenId',
          type: 'uint256',
        },
      ],
      name: 'Transfer',
      type: 'event',
    },
    {
      anonymous: false,
      inputs: [
        {
          indexed: false,
          internalType: 'address',
          name: 'account',
          type: 'address',
        },
      ],
      name: 'Unpaused',
      type: 'event',
    },
    {
      anonymous: false,
      inputs: [
        {
          indexed: true,
          internalType: 'address',
          name: 'implementation',
          type: 'address',
        },
      ],
      name: 'Upgraded',
      type: 'event',
    },
    {
      inputs: [],
      name: 'DEFAULT_ADMIN_ROLE',
      outputs: [
        {
          internalType: 'bytes32',
          name: '',
          type: 'bytes32',
        },
      ],
      stateMutability: 'view',
      type: 'function',
    },
    {
      inputs: [
        {
          internalType: 'address',
          name: 'to',
          type: 'address',
        },
        {
          internalType: 'uint256',
          name: 'tokenId',
          type: 'uint256',
        },
      ],
      name: 'approve',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function',
    },
    {
      inputs: [
        {
          internalType: 'address',
          name: 'owner',
          type: 'address',
        },
      ],
      name: 'balanceOf',
      outputs: [
        {
          internalType: 'uint256',
          name: '',
          type: 'uint256',
        },
      ],
      stateMutability: 'view',
      type: 'function',
    },
    {
      inputs: [
        {
          internalType: 'address',
          name: 'to',
          type: 'address',
        },
        {
          internalType: 'uint256',
          name: 'tokenId',
          type: 'uint256',
        },
        {
          internalType: 'address',
          name: 'recovery',
          type: 'address',
        },
      ],
      name: 'bid',
      outputs: [],
      stateMutability: 'payable',
      type: 'function',
    },
    {
      inputs: [
        {
          internalType: 'uint256',
          name: 'tokenId',
          type: 'uint256',
        },
      ],
      name: 'cancelRecovery',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function',
    },
    {
      inputs: [
        {
          internalType: 'uint256',
          name: '_fee',
          type: 'uint256',
        },
      ],
      name: 'changeFee',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function',
    },
    {
      inputs: [
        {
          internalType: 'address',
          name: '_pool',
          type: 'address',
        },
      ],
      name: 'changePool',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function',
    },
    {
      inputs: [
        {
          internalType: 'uint256',
          name: 'tokenId',
          type: 'uint256',
        },
        {
          internalType: 'address',
          name: 'recovery',
          type: 'address',
        },
      ],
      name: 'changeRecoveryAddress',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function',
    },
    {
      inputs: [
        {
          internalType: 'address',
          name: '_trustedCaller',
          type: 'address',
        },
      ],
      name: 'changeTrustedCaller',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function',
    },
    {
      inputs: [
        {
          internalType: 'address',
          name: '_vault',
          type: 'address',
        },
      ],
      name: 'changeVault',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function',
    },
    {
      inputs: [
        {
          internalType: 'uint256',
          name: 'tokenId',
          type: 'uint256',
        },
      ],
      name: 'completeRecovery',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function',
    },
    {
      inputs: [],
      name: 'disableTrustedOnly',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function',
    },
    {
      inputs: [
        {
          internalType: 'uint256',
          name: '',
          type: 'uint256',
        },
      ],
      name: 'expiryOf',
      outputs: [
        {
          internalType: 'uint256',
          name: '',
          type: 'uint256',
        },
      ],
      stateMutability: 'view',
      type: 'function',
    },
    {
      inputs: [],
      name: 'fee',
      outputs: [
        {
          internalType: 'uint256',
          name: '',
          type: 'uint256',
        },
      ],
      stateMutability: 'view',
      type: 'function',
    },
    {
      inputs: [
        {
          internalType: 'bytes16',
          name: 'fname',
          type: 'bytes16',
        },
        {
          internalType: 'address',
          name: 'to',
          type: 'address',
        },
        {
          internalType: 'bytes32',
          name: 'secret',
          type: 'bytes32',
        },
        {
          internalType: 'address',
          name: 'recovery',
          type: 'address',
        },
      ],
      name: 'generateCommit',
      outputs: [
        {
          internalType: 'bytes32',
          name: 'commit',
          type: 'bytes32',
        },
      ],
      stateMutability: 'pure',
      type: 'function',
    },
    {
      inputs: [
        {
          internalType: 'uint256',
          name: 'tokenId',
          type: 'uint256',
        },
      ],
      name: 'getApproved',
      outputs: [
        {
          internalType: 'address',
          name: '',
          type: 'address',
        },
      ],
      stateMutability: 'view',
      type: 'function',
    },
    {
      inputs: [
        {
          internalType: 'bytes32',
          name: 'role',
          type: 'bytes32',
        },
      ],
      name: 'getRoleAdmin',
      outputs: [
        {
          internalType: 'bytes32',
          name: '',
          type: 'bytes32',
        },
      ],
      stateMutability: 'view',
      type: 'function',
    },
    {
      inputs: [
        {
          internalType: 'bytes32',
          name: 'role',
          type: 'bytes32',
        },
        {
          internalType: 'address',
          name: 'account',
          type: 'address',
        },
      ],
      name: 'grantRole',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function',
    },
    {
      inputs: [
        {
          internalType: 'bytes32',
          name: 'role',
          type: 'bytes32',
        },
        {
          internalType: 'address',
          name: 'account',
          type: 'address',
        },
      ],
      name: 'hasRole',
      outputs: [
        {
          internalType: 'bool',
          name: '',
          type: 'bool',
        },
      ],
      stateMutability: 'view',
      type: 'function',
    },
    {
      inputs: [
        {
          internalType: 'string',
          name: '_tokenName',
          type: 'string',
        },
        {
          internalType: 'string',
          name: '_tokenSymbol',
          type: 'string',
        },
        {
          internalType: 'address',
          name: '_vault',
          type: 'address',
        },
        {
          internalType: 'address',
          name: '_pool',
          type: 'address',
        },
      ],
      name: 'initialize',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function',
    },
    {
      inputs: [
        {
          internalType: 'address',
          name: 'owner',
          type: 'address',
        },
        {
          internalType: 'address',
          name: 'operator',
          type: 'address',
        },
      ],
      name: 'isApprovedForAll',
      outputs: [
        {
          internalType: 'bool',
          name: '',
          type: 'bool',
        },
      ],
      stateMutability: 'view',
      type: 'function',
    },
    {
      inputs: [
        {
          internalType: 'address',
          name: 'forwarder',
          type: 'address',
        },
      ],
      name: 'isTrustedForwarder',
      outputs: [
        {
          internalType: 'bool',
          name: '',
          type: 'bool',
        },
      ],
      stateMutability: 'view',
      type: 'function',
    },
    {
      inputs: [
        {
          internalType: 'bytes32',
          name: 'commit',
          type: 'bytes32',
        },
      ],
      name: 'makeCommit',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function',
    },
    {
      inputs: [],
      name: 'name',
      outputs: [
        {
          internalType: 'string',
          name: '',
          type: 'string',
        },
      ],
      stateMutability: 'view',
      type: 'function',
    },
    {
      inputs: [
        {
          internalType: 'uint256',
          name: 'tokenId',
          type: 'uint256',
        },
      ],
      name: 'ownerOf',
      outputs: [
        {
          internalType: 'address',
          name: '',
          type: 'address',
        },
      ],
      stateMutability: 'view',
      type: 'function',
    },
    {
      inputs: [],
      name: 'pause',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function',
    },
    {
      inputs: [],
      name: 'paused',
      outputs: [
        {
          internalType: 'bool',
          name: '',
          type: 'bool',
        },
      ],
      stateMutability: 'view',
      type: 'function',
    },
    {
      inputs: [],
      name: 'pool',
      outputs: [
        {
          internalType: 'address',
          name: '',
          type: 'address',
        },
      ],
      stateMutability: 'view',
      type: 'function',
    },
    {
      inputs: [],
      name: 'proxiableUUID',
      outputs: [
        {
          internalType: 'bytes32',
          name: '',
          type: 'bytes32',
        },
      ],
      stateMutability: 'view',
      type: 'function',
    },
    {
      inputs: [
        {
          internalType: 'uint256',
          name: 'tokenId',
          type: 'uint256',
        },
      ],
      name: 'reclaim',
      outputs: [],
      stateMutability: 'payable',
      type: 'function',
    },
    {
      inputs: [
        {
          internalType: 'uint256',
          name: '',
          type: 'uint256',
        },
      ],
      name: 'recoveryClockOf',
      outputs: [
        {
          internalType: 'uint256',
          name: '',
          type: 'uint256',
        },
      ],
      stateMutability: 'view',
      type: 'function',
    },
    {
      inputs: [
        {
          internalType: 'uint256',
          name: '',
          type: 'uint256',
        },
      ],
      name: 'recoveryDestinationOf',
      outputs: [
        {
          internalType: 'address',
          name: '',
          type: 'address',
        },
      ],
      stateMutability: 'view',
      type: 'function',
    },
    {
      inputs: [
        {
          internalType: 'uint256',
          name: '',
          type: 'uint256',
        },
      ],
      name: 'recoveryOf',
      outputs: [
        {
          internalType: 'address',
          name: '',
          type: 'address',
        },
      ],
      stateMutability: 'view',
      type: 'function',
    },
    {
      inputs: [
        {
          internalType: 'bytes16',
          name: 'fname',
          type: 'bytes16',
        },
        {
          internalType: 'address',
          name: 'to',
          type: 'address',
        },
        {
          internalType: 'bytes32',
          name: 'secret',
          type: 'bytes32',
        },
        {
          internalType: 'address',
          name: 'recovery',
          type: 'address',
        },
      ],
      name: 'register',
      outputs: [],
      stateMutability: 'payable',
      type: 'function',
    },
    {
      inputs: [
        {
          internalType: 'uint256',
          name: 'tokenId',
          type: 'uint256',
        },
      ],
      name: 'renew',
      outputs: [],
      stateMutability: 'payable',
      type: 'function',
    },
    {
      inputs: [
        {
          internalType: 'bytes32',
          name: 'role',
          type: 'bytes32',
        },
        {
          internalType: 'address',
          name: 'account',
          type: 'address',
        },
      ],
      name: 'renounceRole',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function',
    },
    {
      inputs: [
        {
          internalType: 'uint256',
          name: 'tokenId',
          type: 'uint256',
        },
        {
          internalType: 'address',
          name: 'to',
          type: 'address',
        },
      ],
      name: 'requestRecovery',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function',
    },
    {
      inputs: [
        {
          internalType: 'bytes32',
          name: 'role',
          type: 'bytes32',
        },
        {
          internalType: 'address',
          name: 'account',
          type: 'address',
        },
      ],
      name: 'revokeRole',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function',
    },
    {
      inputs: [
        {
          internalType: 'address',
          name: 'from',
          type: 'address',
        },
        {
          internalType: 'address',
          name: 'to',
          type: 'address',
        },
        {
          internalType: 'uint256',
          name: 'tokenId',
          type: 'uint256',
        },
      ],
      name: 'safeTransferFrom',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function',
    },
    {
      inputs: [
        {
          internalType: 'address',
          name: 'from',
          type: 'address',
        },
        {
          internalType: 'address',
          name: 'to',
          type: 'address',
        },
        {
          internalType: 'uint256',
          name: 'tokenId',
          type: 'uint256',
        },
        {
          internalType: 'bytes',
          name: 'data',
          type: 'bytes',
        },
      ],
      name: 'safeTransferFrom',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function',
    },
    {
      inputs: [
        {
          internalType: 'address',
          name: 'operator',
          type: 'address',
        },
        {
          internalType: 'bool',
          name: 'approved',
          type: 'bool',
        },
      ],
      name: 'setApprovalForAll',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function',
    },
    {
      inputs: [
        {
          internalType: 'bytes4',
          name: 'interfaceId',
          type: 'bytes4',
        },
      ],
      name: 'supportsInterface',
      outputs: [
        {
          internalType: 'bool',
          name: '',
          type: 'bool',
        },
      ],
      stateMutability: 'view',
      type: 'function',
    },
    {
      inputs: [],
      name: 'symbol',
      outputs: [
        {
          internalType: 'string',
          name: '',
          type: 'string',
        },
      ],
      stateMutability: 'view',
      type: 'function',
    },
    {
      inputs: [
        {
          internalType: 'bytes32',
          name: '',
          type: 'bytes32',
        },
      ],
      name: 'timestampOf',
      outputs: [
        {
          internalType: 'uint256',
          name: '',
          type: 'uint256',
        },
      ],
      stateMutability: 'view',
      type: 'function',
    },
    {
      inputs: [
        {
          internalType: 'uint256',
          name: 'tokenId',
          type: 'uint256',
        },
      ],
      name: 'tokenURI',
      outputs: [
        {
          internalType: 'string',
          name: '',
          type: 'string',
        },
      ],
      stateMutability: 'pure',
      type: 'function',
    },
    {
      inputs: [
        {
          internalType: 'address',
          name: 'from',
          type: 'address',
        },
        {
          internalType: 'address',
          name: 'to',
          type: 'address',
        },
        {
          internalType: 'uint256',
          name: 'tokenId',
          type: 'uint256',
        },
      ],
      name: 'transferFrom',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function',
    },
    {
      inputs: [],
      name: 'trustedCaller',
      outputs: [
        {
          internalType: 'address',
          name: '',
          type: 'address',
        },
      ],
      stateMutability: 'view',
      type: 'function',
    },
    {
      inputs: [],
      name: 'trustedOnly',
      outputs: [
        {
          internalType: 'uint256',
          name: '',
          type: 'uint256',
        },
      ],
      stateMutability: 'view',
      type: 'function',
    },
    {
      inputs: [
        {
          internalType: 'bytes16',
          name: 'fname',
          type: 'bytes16',
        },
        {
          internalType: 'address',
          name: 'to',
          type: 'address',
        },
        {
          internalType: 'address',
          name: 'recovery',
          type: 'address',
        },
        {
          internalType: 'uint256',
          name: 'inviter',
          type: 'uint256',
        },
        {
          internalType: 'uint256',
          name: 'invitee',
          type: 'uint256',
        },
      ],
      name: 'trustedRegister',
      outputs: [],
      stateMutability: 'payable',
      type: 'function',
    },
    {
      inputs: [],
      name: 'unpause',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function',
    },
    {
      inputs: [
        {
          internalType: 'address',
          name: 'newImplementation',
          type: 'address',
        },
      ],
      name: 'upgradeTo',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function',
    },
    {
      inputs: [
        {
          internalType: 'address',
          name: 'newImplementation',
          type: 'address',
        },
        {
          internalType: 'bytes',
          name: 'data',
          type: 'bytes',
        },
      ],
      name: 'upgradeToAndCall',
      outputs: [],
      stateMutability: 'payable',
      type: 'function',
    },
    {
      inputs: [],
      name: 'vault',
      outputs: [
        {
          internalType: 'address',
          name: '',
          type: 'address',
        },
      ],
      stateMutability: 'view',
      type: 'function',
    },
    {
      inputs: [
        {
          internalType: 'uint256',
          name: 'amount',
          type: 'uint256',
        },
      ],
      name: 'withdraw',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function',
    },
  ],
};

export const StorageRegistry = {
  abi: [
    {
      inputs: [
        {
          internalType: 'contract AggregatorV3Interface',
          name: '_priceFeed',
          type: 'address',
        },
        {
          internalType: 'contract AggregatorV3Interface',
          name: '_uptimeFeed',
          type: 'address',
        },
        {
          internalType: 'uint256',
          name: '_initialDeprecationPeriod',
          type: 'uint256',
        },
        {
          internalType: 'uint256',
          name: '_initialUsdUnitPrice',
          type: 'uint256',
        },
        {
          internalType: 'uint256',
          name: '_initialMaxUnits',
          type: 'uint256',
        },
        {
          internalType: 'uint256',
          name: '_initialPriceFeedCacheDuration',
          type: 'uint256',
        },
        {
          internalType: 'uint256',
          name: '_initialUptimeFeedGracePeriod',
          type: 'uint256',
        },
      ],
      stateMutability: 'nonpayable',
      type: 'constructor',
    },
    {
      inputs: [],
      name: 'CallFailed',
      type: 'error',
    },
    {
      inputs: [],
      name: 'ContractDeprecated',
      type: 'error',
    },
    {
      inputs: [],
      name: 'ExceedsCapacity',
      type: 'error',
    },
    {
      inputs: [],
      name: 'GracePeriodNotOver',
      type: 'error',
    },
    {
      inputs: [],
      name: 'IncompleteRound',
      type: 'error',
    },
    {
      inputs: [],
      name: 'InsufficientFunds',
      type: 'error',
    },
    {
      inputs: [],
      name: 'InvalidAmount',
      type: 'error',
    },
    {
      inputs: [],
      name: 'InvalidBatchInput',
      type: 'error',
    },
    {
      inputs: [],
      name: 'InvalidDeprecationTimestamp',
      type: 'error',
    },
    {
      inputs: [],
      name: 'InvalidPayment',
      type: 'error',
    },
    {
      inputs: [],
      name: 'InvalidPrice',
      type: 'error',
    },
    {
      inputs: [],
      name: 'SequencerDown',
      type: 'error',
    },
    {
      inputs: [],
      name: 'StaleAnswer',
      type: 'error',
    },
    {
      anonymous: false,
      inputs: [
        {
          indexed: true,
          internalType: 'address',
          name: 'previousOwner',
          type: 'address',
        },
        {
          indexed: true,
          internalType: 'address',
          name: 'newOwner',
          type: 'address',
        },
      ],
      name: 'OwnershipTransferStarted',
      type: 'event',
    },
    {
      anonymous: false,
      inputs: [
        {
          indexed: true,
          internalType: 'address',
          name: 'previousOwner',
          type: 'address',
        },
        {
          indexed: true,
          internalType: 'address',
          name: 'newOwner',
          type: 'address',
        },
      ],
      name: 'OwnershipTransferred',
      type: 'event',
    },
    {
      anonymous: false,
      inputs: [
        {
          indexed: true,
          internalType: 'address',
          name: 'payer',
          type: 'address',
        },
        {
          indexed: true,
          internalType: 'uint256',
          name: 'fid',
          type: 'uint256',
        },
        {
          indexed: false,
          internalType: 'uint256',
          name: 'units',
          type: 'uint256',
        },
      ],
      name: 'Rent',
      type: 'event',
    },
    {
      anonymous: false,
      inputs: [
        {
          indexed: false,
          internalType: 'uint256',
          name: 'oldDuration',
          type: 'uint256',
        },
        {
          indexed: false,
          internalType: 'uint256',
          name: 'newDuration',
          type: 'uint256',
        },
      ],
      name: 'SetCacheDuration',
      type: 'event',
    },
    {
      anonymous: false,
      inputs: [
        {
          indexed: false,
          internalType: 'uint256',
          name: 'oldTimestamp',
          type: 'uint256',
        },
        {
          indexed: false,
          internalType: 'uint256',
          name: 'newTimestamp',
          type: 'uint256',
        },
      ],
      name: 'SetDeprecationTimestamp',
      type: 'event',
    },
    {
      anonymous: false,
      inputs: [
        {
          indexed: false,
          internalType: 'uint256',
          name: 'oldPeriod',
          type: 'uint256',
        },
        {
          indexed: false,
          internalType: 'uint256',
          name: 'newPeriod',
          type: 'uint256',
        },
      ],
      name: 'SetGracePeriod',
      type: 'event',
    },
    {
      anonymous: false,
      inputs: [
        {
          indexed: false,
          internalType: 'uint256',
          name: 'oldMax',
          type: 'uint256',
        },
        {
          indexed: false,
          internalType: 'uint256',
          name: 'newMax',
          type: 'uint256',
        },
      ],
      name: 'SetMaxUnits',
      type: 'event',
    },
    {
      anonymous: false,
      inputs: [
        {
          indexed: false,
          internalType: 'uint256',
          name: 'oldPrice',
          type: 'uint256',
        },
        {
          indexed: false,
          internalType: 'uint256',
          name: 'newPrice',
          type: 'uint256',
        },
      ],
      name: 'SetPrice',
      type: 'event',
    },
    {
      anonymous: false,
      inputs: [
        {
          indexed: true,
          internalType: 'address',
          name: 'to',
          type: 'address',
        },
        {
          indexed: false,
          internalType: 'uint256',
          name: 'amount',
          type: 'uint256',
        },
      ],
      name: 'Withdraw',
      type: 'event',
    },
    {
      inputs: [],
      name: 'VERSION',
      outputs: [
        {
          internalType: 'string',
          name: '',
          type: 'string',
        },
      ],
      stateMutability: 'view',
      type: 'function',
    },
    {
      inputs: [],
      name: 'acceptOwnership',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function',
    },
    {
      inputs: [
        {
          internalType: 'uint256[]',
          name: 'fids',
          type: 'uint256[]',
        },
        {
          internalType: 'uint256',
          name: 'units',
          type: 'uint256',
        },
      ],
      name: 'batchCredit',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function',
    },
    {
      inputs: [
        {
          internalType: 'uint256[]',
          name: 'fids',
          type: 'uint256[]',
        },
        {
          internalType: 'uint256[]',
          name: 'units',
          type: 'uint256[]',
        },
      ],
      name: 'batchRent',
      outputs: [],
      stateMutability: 'payable',
      type: 'function',
    },
    {
      inputs: [
        {
          internalType: 'uint256',
          name: 'fid',
          type: 'uint256',
        },
        {
          internalType: 'uint256',
          name: 'units',
          type: 'uint256',
        },
      ],
      name: 'credit',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function',
    },
    {
      inputs: [],
      name: 'deprecationTimestamp',
      outputs: [
        {
          internalType: 'uint256',
          name: '',
          type: 'uint256',
        },
      ],
      stateMutability: 'view',
      type: 'function',
    },
    {
      inputs: [],
      name: 'ethUsdPrice',
      outputs: [
        {
          internalType: 'uint256',
          name: '',
          type: 'uint256',
        },
      ],
      stateMutability: 'view',
      type: 'function',
    },
    {
      inputs: [],
      name: 'lastPriceFeedUpdate',
      outputs: [
        {
          internalType: 'uint256',
          name: '',
          type: 'uint256',
        },
      ],
      stateMutability: 'view',
      type: 'function',
    },
    {
      inputs: [],
      name: 'maxUnits',
      outputs: [
        {
          internalType: 'uint256',
          name: '',
          type: 'uint256',
        },
      ],
      stateMutability: 'view',
      type: 'function',
    },
    {
      inputs: [],
      name: 'owner',
      outputs: [
        {
          internalType: 'address',
          name: '',
          type: 'address',
        },
      ],
      stateMutability: 'view',
      type: 'function',
    },
    {
      inputs: [],
      name: 'pendingOwner',
      outputs: [
        {
          internalType: 'address',
          name: '',
          type: 'address',
        },
      ],
      stateMutability: 'view',
      type: 'function',
    },
    {
      inputs: [
        {
          internalType: 'uint256',
          name: 'units',
          type: 'uint256',
        },
      ],
      name: 'price',
      outputs: [
        {
          internalType: 'uint256',
          name: '',
          type: 'uint256',
        },
      ],
      stateMutability: 'view',
      type: 'function',
    },
    {
      inputs: [],
      name: 'priceFeed',
      outputs: [
        {
          internalType: 'contract AggregatorV3Interface',
          name: '',
          type: 'address',
        },
      ],
      stateMutability: 'view',
      type: 'function',
    },
    {
      inputs: [],
      name: 'priceFeedCacheDuration',
      outputs: [
        {
          internalType: 'uint256',
          name: '',
          type: 'uint256',
        },
      ],
      stateMutability: 'view',
      type: 'function',
    },
    {
      inputs: [],
      name: 'refreshPrice',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function',
    },
    {
      inputs: [],
      name: 'renounceOwnership',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function',
    },
    {
      inputs: [
        {
          internalType: 'uint256',
          name: 'fid',
          type: 'uint256',
        },
        {
          internalType: 'uint256',
          name: 'units',
          type: 'uint256',
        },
      ],
      name: 'rent',
      outputs: [],
      stateMutability: 'payable',
      type: 'function',
    },
    {
      inputs: [],
      name: 'rentedUnits',
      outputs: [
        {
          internalType: 'uint256',
          name: '',
          type: 'uint256',
        },
      ],
      stateMutability: 'view',
      type: 'function',
    },
    {
      inputs: [
        {
          internalType: 'uint256',
          name: 'duration',
          type: 'uint256',
        },
      ],
      name: 'setCacheDuration',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function',
    },
    {
      inputs: [
        {
          internalType: 'uint256',
          name: 'timestamp',
          type: 'uint256',
        },
      ],
      name: 'setDeprecationTimestamp',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function',
    },
    {
      inputs: [
        {
          internalType: 'uint256',
          name: 'period',
          type: 'uint256',
        },
      ],
      name: 'setGracePeriod',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function',
    },
    {
      inputs: [
        {
          internalType: 'uint256',
          name: 'max',
          type: 'uint256',
        },
      ],
      name: 'setMaxUnits',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function',
    },
    {
      inputs: [
        {
          internalType: 'uint256',
          name: 'usdPrice',
          type: 'uint256',
        },
      ],
      name: 'setPrice',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function',
    },
    {
      inputs: [
        {
          internalType: 'address',
          name: 'newOwner',
          type: 'address',
        },
      ],
      name: 'transferOwnership',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function',
    },
    {
      inputs: [],
      name: 'unitPrice',
      outputs: [
        {
          internalType: 'uint256',
          name: '',
          type: 'uint256',
        },
      ],
      stateMutability: 'view',
      type: 'function',
    },
    {
      inputs: [],
      name: 'uptimeFeed',
      outputs: [
        {
          internalType: 'contract AggregatorV3Interface',
          name: '',
          type: 'address',
        },
      ],
      stateMutability: 'view',
      type: 'function',
    },
    {
      inputs: [],
      name: 'uptimeFeedGracePeriod',
      outputs: [
        {
          internalType: 'uint256',
          name: '',
          type: 'uint256',
        },
      ],
      stateMutability: 'view',
      type: 'function',
    },
    {
      inputs: [],
      name: 'usdUnitPrice',
      outputs: [
        {
          internalType: 'uint256',
          name: '',
          type: 'uint256',
        },
      ],
      stateMutability: 'view',
      type: 'function',
    },
    {
      inputs: [
        {
          internalType: 'address',
          name: 'to',
          type: 'address',
        },
        {
          internalType: 'uint256',
          name: 'amount',
          type: 'uint256',
        },
      ],
      name: 'withdraw',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function',
    },
  ],
  bytecode: {
    object:
      '0x60c06040523480156200001157600080fd5b5060405162001e4e38038062001e4e833981016040819052620000349162000356565b6200003f336200008e565b6001600160a01b03808816608052861660a0526200005e8542620003d3565b60025560038490556004839055600582905560068190556200007f620000b8565b50505050505050505062000472565b600180546001600160a01b0319169055620000b581620002e9602090811b6200111217901c565b50565b600080600080600080600060a0516001600160a01b031663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa15801562000104573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200012a919062000407565b9450945094509450945083600014620001555760405162032b3d60e81b815260040160405180910390fd5b816000036200017757604051638ad52bdd60e01b815260040160405180910390fd5b846001600160501b0316816001600160501b03161015620001ab57604051630e09c18960e31b815260040160405180910390fd5b6000620001b984426200045c565b9050600654811015620001df5760405163d15f73b560e01b815260040160405180910390fd5b6000806000806080516001600160a01b031663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa15801562000226573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200024c919062000407565b94509450509350935060008313620002765760405162bfc92160e01b815260040160405180910390fd5b816000036200029857604051638ad52bdd60e01b815260040160405180910390fd5b836001600160501b0316816001600160501b03161015620002cc57604051630e09c18960e31b815260040160405180910390fd5b50506008805442600955908290559a909950975050505050505050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80516001600160a01b03811681146200035157600080fd5b919050565b600080600080600080600060e0888a0312156200037257600080fd5b6200037d8862000339565b96506200038d6020890162000339565b604089015160608a015160808b015160a08c015160c0909c01519a9d939c50919a90999198509650945092505050565b634e487b7160e01b600052601160045260246000fd5b80820180821115620003e957620003e9620003bd565b92915050565b80516001600160501b03811681146200035157600080fd5b600080600080600060a086880312156200042057600080fd5b6200042b86620003ef565b94506020860151935060408601519250606086015191506200045060808701620003ef565b90509295509295909350565b81810381811115620003e957620003e9620003bd565b60805160a0516119a8620004a660003960008181610286015261123301526000818161033501526113e201526119a86000f3fe6080604052600436106101c25760003560e01c80638d567f86116100f7578063c2e46fe011610095578063f2f6596011610064578063f2f65960146104c9578063f2fde38b146104e9578063f3fef3a314610509578063ffa1ad741461052957600080fd5b8063c2e46fe014610453578063d285e8fd14610469578063e30c397814610489578063e73faa2d146104b457600080fd5b80639478ab8c116100d15780639478ab8c146103ea578063a82c356e14610400578063ab7ccc1c14610413578063b3a90c671461043357600080fd5b80638d567f861461037f5780638da5cb5b1461039f57806391b7f5ed146103ca57600080fd5b80633c67a5b211610164578063715018a61161013e578063715018a61461030e578063741bef1a14610323578063783a112b1461035757806379ba50971461036a57600080fd5b80633c67a5b2146102cd57806340df0ba0146102e25780637078cc1c146102f857600080fd5b806326a49e37116101a057806326a49e37146102285780632751c4fd146102485780632c39d6701461025e5780633b56125c1461027457600080fd5b806306517a29146101c7578063128d34ac146101f0578063194e995114610206575b600080fd5b3480156101d357600080fd5b506101dd60045481565b6040519081526020015b60405180910390f35b3480156101fc57600080fd5b506101dd60095481565b34801561021257600080fd5b5061022661022136600461161c565b61057f565b005b34801561023457600080fd5b506101dd61024336600461161c565b6105c8565b34801561025457600080fd5b506101dd60075481565b34801561026a57600080fd5b506101dd60025481565b34801561028057600080fd5b506102a87f000000000000000000000000000000000000000000000000000000000000000081565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020016101e7565b3480156102d957600080fd5b506102266105df565b3480156102ee57600080fd5b506101dd60035481565b34801561030457600080fd5b506101dd60065481565b34801561031a57600080fd5b506102266105f3565b34801561032f57600080fd5b506102a87f000000000000000000000000000000000000000000000000000000000000000081565b610226610365366004611635565b610607565b34801561037657600080fd5b506102266107f2565b34801561038b57600080fd5b5061022661039a36600461161c565b6108ac565b3480156103ab57600080fd5b5060005473ffffffffffffffffffffffffffffffffffffffff166102a8565b3480156103d657600080fd5b506102266103e536600461161c565b61092f565b3480156103f657600080fd5b506101dd60085481565b61022661040e3660046116a3565b610978565b34801561041f57600080fd5b5061022661042e366004611635565b610c3e565b34801561043f57600080fd5b5061022661044e36600461170f565b610d56565b34801561045f57600080fd5b506101dd60055481565b34801561047557600080fd5b5061022661048436600461161c565b610e93565b34801561049557600080fd5b5060015473ffffffffffffffffffffffffffffffffffffffff166102a8565b3480156104c057600080fd5b506101dd610edc565b3480156104d557600080fd5b506102266104e436600461161c565b610eed565b3480156104f557600080fd5b50610226610504366004611784565b610f36565b34801561051557600080fd5b5061022661052436600461179f565b610fe6565b34801561053557600080fd5b506105726040518060400160405280600a81526020017f323032332e30362e30310000000000000000000000000000000000000000000081525081565b6040516101e791906117c9565b610587611187565b60055460408051918252602082018390527fba21d40bb8770d5fa02e1971806473e12480167182e829c0fc86addb21e2b77d910160405180910390a1600555565b60006105d982600354600854611208565b92915050565b6105e7611187565b6105ef611226565b5050565b6105fb611187565b610605600061155a565b565b6002544210610642576040517fd17e0deb00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600061064d8261158b565b905081600003610689576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b803410156106c3576040517f3c6b4b2800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600454826007546106d49190611864565b111561070c576040517f2aa2ed7200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b816007600082825461071e9190611864565b9091555050604051828152839033907faabd75b90fb7114eb9587a54f00ce5ebe8cb4a70627f3a6c26e506ffd771fe2f9060200160405180910390a3803411156107ed5760003361076f8334611877565b604051600081818185875af1925050503d80600081146107ab576040519150601f19603f3d011682016040523d82523d6000602084013e6107b0565b606091505b50509050806107eb576040517f3204506f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b505b505050565b600154339073ffffffffffffffffffffffffffffffffffffffff1681146108a0576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602960248201527f4f776e61626c6532537465703a2063616c6c6572206973206e6f74207468652060448201527f6e6577206f776e6572000000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b6108a98161155a565b50565b6108b4611187565b428110156108ee576040517f4d9c314900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60025460408051918252602082018390527f27e030644fe653b53e98fbd0ca5004392da63705b0806619a43324647715bc6b910160405180910390a1600255565b610937611187565b60035460408051918252602082018390527ff9317dc3bc6dda0e00e43855c2c30847aeafb8dcea9d2ce86e9ce7a83d549f01910160405180910390a1600355565b60025442106109b3576040517fd17e0deb00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8215806109be575080155b156109f5576040517f0a514b9900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b828114610a2e576040517f0a514b9900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6003546000610a3b6115a1565b90506000805b86811015610b67576000868683818110610a5d57610a5d61188a565b90506020020135905080600003610a745750610b57565b60045481600754610a859190611864565b1115610abd576040517f2aa2ed7200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610ac8818686611208565b610ad29084611864565b92508060076000828254610ae69190611864565b909155508990508883818110610afe57610afe61188a565b905060200201353373ffffffffffffffffffffffffffffffffffffffff167faabd75b90fb7114eb9587a54f00ce5ebe8cb4a70627f3a6c26e506ffd771fe2f83604051610b4d91815260200190565b60405180910390a3505b610b60816118b9565b9050610a41565b5080341015610ba2576040517f3c6b4b2800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b80341115610c3557600033610bb78334611877565b604051600081818185875af1925050503d8060008114610bf3576040519150601f19603f3d011682016040523d82523d6000602084013e610bf8565b606091505b5050905080610c33576040517f3204506f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b505b50505050505050565b610c46611187565b6002544210610c81576040517fd17e0deb00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b80600003610cbb576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60045481600754610ccc9190611864565b1115610d04576040517f2aa2ed7200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8060076000828254610d169190611864565b9091555050604051818152829033907faabd75b90fb7114eb9587a54f00ce5ebe8cb4a70627f3a6c26e506ffd771fe2f9060200160405180910390a35050565b610d5e611187565b6002544210610d99576040517fd17e0deb00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000610da582846118f1565b905060045481600754610db89190611864565b1115610df0576040517f2aa2ed7200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8060076000828254610e029190611864565b90915550600090505b83811015610e8c57848482818110610e2557610e2561188a565b905060200201353373ffffffffffffffffffffffffffffffffffffffff167faabd75b90fb7114eb9587a54f00ce5ebe8cb4a70627f3a6c26e506ffd771fe2f85604051610e7491815260200190565b60405180910390a3610e85816118b9565b9050610e0b565b5050505050565b610e9b611187565b60045460408051918252602082018390527fa75b962aa425276de62bec76aeb43cacc12d2b132498ae1115500c23dc35fbe4910160405180910390a1600455565b6000610ee860016105c8565b905090565b610ef5611187565b60065460408051918252602082018390527f31c130faaf861e1e61ca087cc48c410d9099885350e9beb4dad1175cb77a6545910160405180910390a1600655565b610f3e611187565b6001805473ffffffffffffffffffffffffffffffffffffffff83167fffffffffffffffffffffffff00000000000000000000000000000000000000009091168117909155610fa160005473ffffffffffffffffffffffffffffffffffffffff1690565b73ffffffffffffffffffffffffffffffffffffffff167f38d16b8cac22d99fc7c124b9cd0de2d3fa1faef420bfe791d8c362d765e2270060405160405180910390a350565b610fee611187565b80471015611028576040517f356680b700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8173ffffffffffffffffffffffffffffffffffffffff167f884edad9ce6fa2440d8a54cc123490eb96d2768479d49ff9c7366125a94243648260405161107091815260200190565b60405180910390a260008273ffffffffffffffffffffffffffffffffffffffff168260405160006040518083038185875af1925050503d80600081146110d2576040519150601f19603f3d011682016040523d82523d6000602084013e6110d7565b606091505b50509050806107ed576040517f3204506f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000805473ffffffffffffffffffffffffffffffffffffffff8381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60005473ffffffffffffffffffffffffffffffffffffffff163314610605576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610897565b600061121e8261121885876118f1565b906115d2565b949350505050565b60008060008060008060007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa15801561129c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112c09190611922565b9450945094509450945083600014611304576040517f032b3d0000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8160000361133e576040517f8ad52bdd00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8469ffffffffffffffffffff168169ffffffffffffffffffff161015611390576040517f704e0c4800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600061139c8442611877565b90506006548110156113da576040517fd15f73b500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000806000807f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa15801561144b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061146f9190611922565b945094505093509350600083136114b1576040517ebfc92100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b816000036114eb576040517f8ad52bdd00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8369ffffffffffffffffffff168169ffffffffffffffffffff16101561153d576040517f704e0c4800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b50506008805442600955908290559a909950975050505050505050565b600180547fffffffffffffffffffffffff00000000000000000000000000000000000000001690556108a981611112565b60006105d98260035461159c6115a1565b611208565b6000600554600954426115b49190611877565b11156115cb5760006115c4611226565b5092915050565b5060085490565b60006115e783670de0b6b3a7640000846115ee565b9392505050565b82820281151584158583048514171661160657600080fd5b6001826001830304018115150290509392505050565b60006020828403121561162e57600080fd5b5035919050565b6000806040838503121561164857600080fd5b50508035926020909101359150565b60008083601f84011261166957600080fd5b50813567ffffffffffffffff81111561168157600080fd5b6020830191508360208260051b850101111561169c57600080fd5b9250929050565b600080600080604085870312156116b957600080fd5b843567ffffffffffffffff808211156116d157600080fd5b6116dd88838901611657565b909650945060208701359150808211156116f657600080fd5b5061170387828801611657565b95989497509550505050565b60008060006040848603121561172457600080fd5b833567ffffffffffffffff81111561173b57600080fd5b61174786828701611657565b909790965060209590950135949350505050565b803573ffffffffffffffffffffffffffffffffffffffff8116811461177f57600080fd5b919050565b60006020828403121561179657600080fd5b6115e78261175b565b600080604083850312156117b257600080fd5b6117bb8361175b565b946020939093013593505050565b600060208083528351808285015260005b818110156117f6578581018301518582016040015282016117da565b5060006040828601015260407fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f8301168501019250505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b808201808211156105d9576105d9611835565b818103818111156105d9576105d9611835565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036118ea576118ea611835565b5060010190565b80820281158282048414176105d9576105d9611835565b805169ffffffffffffffffffff8116811461177f57600080fd5b600080600080600060a0868803121561193a57600080fd5b61194386611908565b945060208601519350604086015192506060860151915061196660808701611908565b9050929550929590935056fea2646970667358221220c5c3ef4f5b0459c2820781d2a3a62742210efe64a44beb846c89a1abea5315f764736f6c63430008120033',
    sourceMap:
      '308:17353:59:-:0;;;7416:713;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;936:32:39;719:10:49;936:18:39;:32::i;:::-;-1:-1:-1;;;;;7754:22:59;;::::1;;::::0;7786:24;::::1;;::::0;7843:43:::1;7861:25:::0;7843:15:::1;:43;:::i;:::-;7820:20;:66:::0;7896:12:::1;:35:::0;;;7941:8:::1;:27:::0;;;7978:22:::1;:55:::0;;;8043:21:::1;:53:::0;;;8107:15:::1;:13;:15::i;:::-;;;7416:713:::0;;;;;;;308:17353;;1501:153:40;1590:13;1583:20;;-1:-1:-1;;;;;;1583:20:40;;;1613:34;1638:8;1613:24;;;;;;;:34;;:::i;:::-;1501:153;:::o;12201:1333:59:-;12244:19;12265:16;12363:20;12397:18;12429:23;12466;12503:28;12544:10;;-1:-1:-1;;;;;12544:26:59;;:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;12349:223;;;;;;;;;;12586:11;12601:1;12586:16;12582:44;;12611:15;;-1:-1:-1;;;12611:15:59;;;;;;;;;;;12582:44;12640:15;12659:1;12640:20;12636:50;;12669:17;;-1:-1:-1;;;12669:17:59;;;;;;;;;;;12636:50;12724:13;-1:-1:-1;;;;;12700:37:59;:21;-1:-1:-1;;;;;12700:37:59;;12696:63;;;12746:13;;-1:-1:-1;;;12746:13:59;;;;;;;;;;;12696:63;12861:19;12883:33;12901:15;12883;:33;:::i;:::-;12861:55;;12944:21;;12930:11;:35;12926:68;;;12974:20;;-1:-1:-1;;;12974:20:59;;;;;;;;;;;12926:68;13066:19;13087:13;13103:22;13127:27;13170:9;;-1:-1:-1;;;;;13170:25:59;;:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;13065:132;;;;;;;;;13221:1;13211:6;:11;13207:38;;13231:14;;-1:-1:-1;;;13231:14:59;;;;;;;;;;;13207:38;13259:14;13277:1;13259:19;13255:49;;13287:17;;-1:-1:-1;;;13287:17:59;;;;;;;;;;;13255:49;13341:12;-1:-1:-1;;;;;13318:35:59;:20;-1:-1:-1;;;;;13318:35:59;;13314:61;;;13362:13;;-1:-1:-1;;;13362:13:59;;;;;;;;;;;13314:61;-1:-1:-1;;13400:11:59;;;13480:15;13458:19;:37;13505:22;;;;13400:11;13440:6;;-1:-1:-1;12201:1333:59;-1:-1:-1;;;;;;;;12201:1333:59:o;2433:187:39:-;2506:16;2525:6;;-1:-1:-1;;;;;2541:17:39;;;-1:-1:-1;;;;;;2541:17:39;;;;;;2573:40;;2525:6;;;;;;;2573:40;;2506:16;2573:40;2496:124;2433:187;:::o;14:200:79:-;116:13;;-1:-1:-1;;;;;158:31:79;;148:42;;138:70;;204:1;201;194:12;138:70;14:200;;;:::o;219:704::-;399:6;407;415;423;431;439;447;500:3;488:9;479:7;475:23;471:33;468:53;;;517:1;514;507:12;468:53;540:63;593:9;540:63;:::i;:::-;530:73;;622:72;690:2;679:9;675:18;622:72;:::i;:::-;734:2;719:18;;713:25;778:2;763:18;;757:25;822:3;807:19;;801:26;867:3;852:19;;846:26;912:3;897:19;;;891:26;219:704;;612:82;;-1:-1:-1;713:25:79;;757;;801:26;;-1:-1:-1;846:26:79;-1:-1:-1;891:26:79;-1:-1:-1;219:704:79;-1:-1:-1;;;219:704:79:o;928:127::-;989:10;984:3;980:20;977:1;970:31;1020:4;1017:1;1010:15;1044:4;1041:1;1034:15;1060:125;1125:9;;;1146:10;;;1143:36;;;1159:18;;:::i;:::-;1060:125;;;;:::o;1190:175::-;1268:13;;-1:-1:-1;;;;;1310:30:79;;1300:41;;1290:69;;1355:1;1352;1345:12;1370:473;1473:6;1481;1489;1497;1505;1558:3;1546:9;1537:7;1533:23;1529:33;1526:53;;;1575:1;1572;1565:12;1526:53;1598:39;1627:9;1598:39;:::i;:::-;1588:49;;1677:2;1666:9;1662:18;1656:25;1646:35;;1721:2;1710:9;1706:18;1700:25;1690:35;;1765:2;1754:9;1750:18;1744:25;1734:35;;1788:49;1832:3;1821:9;1817:19;1788:49;:::i;:::-;1778:59;;1370:473;;;;;;;;:::o;1848:128::-;1915:9;;;1936:11;;;1933:37;;;1950:18;;:::i;1848:128::-;308:17353:59;;;;;;;;;;;;;;;;;;;;;;;;;;;;',
    linkReferences: {},
  },
  deployedBytecode: {
    object:
      '0x6080604052600436106101c25760003560e01c80638d567f86116100f7578063c2e46fe011610095578063f2f6596011610064578063f2f65960146104c9578063f2fde38b146104e9578063f3fef3a314610509578063ffa1ad741461052957600080fd5b8063c2e46fe014610453578063d285e8fd14610469578063e30c397814610489578063e73faa2d146104b457600080fd5b80639478ab8c116100d15780639478ab8c146103ea578063a82c356e14610400578063ab7ccc1c14610413578063b3a90c671461043357600080fd5b80638d567f861461037f5780638da5cb5b1461039f57806391b7f5ed146103ca57600080fd5b80633c67a5b211610164578063715018a61161013e578063715018a61461030e578063741bef1a14610323578063783a112b1461035757806379ba50971461036a57600080fd5b80633c67a5b2146102cd57806340df0ba0146102e25780637078cc1c146102f857600080fd5b806326a49e37116101a057806326a49e37146102285780632751c4fd146102485780632c39d6701461025e5780633b56125c1461027457600080fd5b806306517a29146101c7578063128d34ac146101f0578063194e995114610206575b600080fd5b3480156101d357600080fd5b506101dd60045481565b6040519081526020015b60405180910390f35b3480156101fc57600080fd5b506101dd60095481565b34801561021257600080fd5b5061022661022136600461161c565b61057f565b005b34801561023457600080fd5b506101dd61024336600461161c565b6105c8565b34801561025457600080fd5b506101dd60075481565b34801561026a57600080fd5b506101dd60025481565b34801561028057600080fd5b506102a87f000000000000000000000000000000000000000000000000000000000000000081565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020016101e7565b3480156102d957600080fd5b506102266105df565b3480156102ee57600080fd5b506101dd60035481565b34801561030457600080fd5b506101dd60065481565b34801561031a57600080fd5b506102266105f3565b34801561032f57600080fd5b506102a87f000000000000000000000000000000000000000000000000000000000000000081565b610226610365366004611635565b610607565b34801561037657600080fd5b506102266107f2565b34801561038b57600080fd5b5061022661039a36600461161c565b6108ac565b3480156103ab57600080fd5b5060005473ffffffffffffffffffffffffffffffffffffffff166102a8565b3480156103d657600080fd5b506102266103e536600461161c565b61092f565b3480156103f657600080fd5b506101dd60085481565b61022661040e3660046116a3565b610978565b34801561041f57600080fd5b5061022661042e366004611635565b610c3e565b34801561043f57600080fd5b5061022661044e36600461170f565b610d56565b34801561045f57600080fd5b506101dd60055481565b34801561047557600080fd5b5061022661048436600461161c565b610e93565b34801561049557600080fd5b5060015473ffffffffffffffffffffffffffffffffffffffff166102a8565b3480156104c057600080fd5b506101dd610edc565b3480156104d557600080fd5b506102266104e436600461161c565b610eed565b3480156104f557600080fd5b50610226610504366004611784565b610f36565b34801561051557600080fd5b5061022661052436600461179f565b610fe6565b34801561053557600080fd5b506105726040518060400160405280600a81526020017f323032332e30362e30310000000000000000000000000000000000000000000081525081565b6040516101e791906117c9565b610587611187565b60055460408051918252602082018390527fba21d40bb8770d5fa02e1971806473e12480167182e829c0fc86addb21e2b77d910160405180910390a1600555565b60006105d982600354600854611208565b92915050565b6105e7611187565b6105ef611226565b5050565b6105fb611187565b610605600061155a565b565b6002544210610642576040517fd17e0deb00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600061064d8261158b565b905081600003610689576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b803410156106c3576040517f3c6b4b2800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600454826007546106d49190611864565b111561070c576040517f2aa2ed7200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b816007600082825461071e9190611864565b9091555050604051828152839033907faabd75b90fb7114eb9587a54f00ce5ebe8cb4a70627f3a6c26e506ffd771fe2f9060200160405180910390a3803411156107ed5760003361076f8334611877565b604051600081818185875af1925050503d80600081146107ab576040519150601f19603f3d011682016040523d82523d6000602084013e6107b0565b606091505b50509050806107eb576040517f3204506f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b505b505050565b600154339073ffffffffffffffffffffffffffffffffffffffff1681146108a0576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602960248201527f4f776e61626c6532537465703a2063616c6c6572206973206e6f74207468652060448201527f6e6577206f776e6572000000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b6108a98161155a565b50565b6108b4611187565b428110156108ee576040517f4d9c314900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60025460408051918252602082018390527f27e030644fe653b53e98fbd0ca5004392da63705b0806619a43324647715bc6b910160405180910390a1600255565b610937611187565b60035460408051918252602082018390527ff9317dc3bc6dda0e00e43855c2c30847aeafb8dcea9d2ce86e9ce7a83d549f01910160405180910390a1600355565b60025442106109b3576040517fd17e0deb00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8215806109be575080155b156109f5576040517f0a514b9900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b828114610a2e576040517f0a514b9900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6003546000610a3b6115a1565b90506000805b86811015610b67576000868683818110610a5d57610a5d61188a565b90506020020135905080600003610a745750610b57565b60045481600754610a859190611864565b1115610abd576040517f2aa2ed7200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610ac8818686611208565b610ad29084611864565b92508060076000828254610ae69190611864565b909155508990508883818110610afe57610afe61188a565b905060200201353373ffffffffffffffffffffffffffffffffffffffff167faabd75b90fb7114eb9587a54f00ce5ebe8cb4a70627f3a6c26e506ffd771fe2f83604051610b4d91815260200190565b60405180910390a3505b610b60816118b9565b9050610a41565b5080341015610ba2576040517f3c6b4b2800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b80341115610c3557600033610bb78334611877565b604051600081818185875af1925050503d8060008114610bf3576040519150601f19603f3d011682016040523d82523d6000602084013e610bf8565b606091505b5050905080610c33576040517f3204506f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b505b50505050505050565b610c46611187565b6002544210610c81576040517fd17e0deb00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b80600003610cbb576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60045481600754610ccc9190611864565b1115610d04576040517f2aa2ed7200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8060076000828254610d169190611864565b9091555050604051818152829033907faabd75b90fb7114eb9587a54f00ce5ebe8cb4a70627f3a6c26e506ffd771fe2f9060200160405180910390a35050565b610d5e611187565b6002544210610d99576040517fd17e0deb00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000610da582846118f1565b905060045481600754610db89190611864565b1115610df0576040517f2aa2ed7200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8060076000828254610e029190611864565b90915550600090505b83811015610e8c57848482818110610e2557610e2561188a565b905060200201353373ffffffffffffffffffffffffffffffffffffffff167faabd75b90fb7114eb9587a54f00ce5ebe8cb4a70627f3a6c26e506ffd771fe2f85604051610e7491815260200190565b60405180910390a3610e85816118b9565b9050610e0b565b5050505050565b610e9b611187565b60045460408051918252602082018390527fa75b962aa425276de62bec76aeb43cacc12d2b132498ae1115500c23dc35fbe4910160405180910390a1600455565b6000610ee860016105c8565b905090565b610ef5611187565b60065460408051918252602082018390527f31c130faaf861e1e61ca087cc48c410d9099885350e9beb4dad1175cb77a6545910160405180910390a1600655565b610f3e611187565b6001805473ffffffffffffffffffffffffffffffffffffffff83167fffffffffffffffffffffffff00000000000000000000000000000000000000009091168117909155610fa160005473ffffffffffffffffffffffffffffffffffffffff1690565b73ffffffffffffffffffffffffffffffffffffffff167f38d16b8cac22d99fc7c124b9cd0de2d3fa1faef420bfe791d8c362d765e2270060405160405180910390a350565b610fee611187565b80471015611028576040517f356680b700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8173ffffffffffffffffffffffffffffffffffffffff167f884edad9ce6fa2440d8a54cc123490eb96d2768479d49ff9c7366125a94243648260405161107091815260200190565b60405180910390a260008273ffffffffffffffffffffffffffffffffffffffff168260405160006040518083038185875af1925050503d80600081146110d2576040519150601f19603f3d011682016040523d82523d6000602084013e6110d7565b606091505b50509050806107ed576040517f3204506f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000805473ffffffffffffffffffffffffffffffffffffffff8381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60005473ffffffffffffffffffffffffffffffffffffffff163314610605576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610897565b600061121e8261121885876118f1565b906115d2565b949350505050565b60008060008060008060007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa15801561129c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112c09190611922565b9450945094509450945083600014611304576040517f032b3d0000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8160000361133e576040517f8ad52bdd00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8469ffffffffffffffffffff168169ffffffffffffffffffff161015611390576040517f704e0c4800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600061139c8442611877565b90506006548110156113da576040517fd15f73b500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000806000807f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa15801561144b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061146f9190611922565b945094505093509350600083136114b1576040517ebfc92100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b816000036114eb576040517f8ad52bdd00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8369ffffffffffffffffffff168169ffffffffffffffffffff16101561153d576040517f704e0c4800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b50506008805442600955908290559a909950975050505050505050565b600180547fffffffffffffffffffffffff00000000000000000000000000000000000000001690556108a981611112565b60006105d98260035461159c6115a1565b611208565b6000600554600954426115b49190611877565b11156115cb5760006115c4611226565b5092915050565b5060085490565b60006115e783670de0b6b3a7640000846115ee565b9392505050565b82820281151584158583048514171661160657600080fd5b6001826001830304018115150290509392505050565b60006020828403121561162e57600080fd5b5035919050565b6000806040838503121561164857600080fd5b50508035926020909101359150565b60008083601f84011261166957600080fd5b50813567ffffffffffffffff81111561168157600080fd5b6020830191508360208260051b850101111561169c57600080fd5b9250929050565b600080600080604085870312156116b957600080fd5b843567ffffffffffffffff808211156116d157600080fd5b6116dd88838901611657565b909650945060208701359150808211156116f657600080fd5b5061170387828801611657565b95989497509550505050565b60008060006040848603121561172457600080fd5b833567ffffffffffffffff81111561173b57600080fd5b61174786828701611657565b909790965060209590950135949350505050565b803573ffffffffffffffffffffffffffffffffffffffff8116811461177f57600080fd5b919050565b60006020828403121561179657600080fd5b6115e78261175b565b600080604083850312156117b257600080fd5b6117bb8361175b565b946020939093013593505050565b600060208083528351808285015260005b818110156117f6578581018301518582016040015282016117da565b5060006040828601015260407fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f8301168501019250505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b808201808211156105d9576105d9611835565b818103818111156105d9576105d9611835565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036118ea576118ea611835565b5060010190565b80820281158282048414176105d9576105d9611835565b805169ffffffffffffffffffff8116811461177f57600080fd5b600080600080600060a0868803121561193a57600080fd5b61194386611908565b945060208601519350604086015192506060860151915061196660808701611908565b9050929550929590935056fea2646970667358221220c5c3ef4f5b0459c2820781d2a3a62742210efe64a44beb846c89a1abea5315f764736f6c63430008120033',
    sourceMap:
      '308:17353:59:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5635:23;;;;;;;;;;;;;;;;;;;160:25:79;;;148:2;133:18;5635:23:59;;;;;;;;6488:34;;;;;;;;;;;;;;;;16676:178;;;;;;;;;;-1:-1:-1;16676:178:59;;;;;:::i;:::-;;:::i;:::-;;11319:124;;;;;;;;;;-1:-1:-1;11319:124:59;;;;;:::i;:::-;;:::i;6289:26::-;;;;;;;;;;;;;;;;5343:35;;;;;;;;;;;;;;;;4974:49;;;;;;;;;;;;;;;;;;585:42:79;573:55;;;555:74;;543:2;528:18;4974:49:59;381:254:79;15484:75:59;;;;;;;;;;;;;:::i;5519:27::-;;;;;;;;;;;;;;;;5986:36;;;;;;;;;;;;;;;;1831:101:39;;;;;;;;;;;;;:::i;4855:48:59:-;;;;;;;;;;;;;;;8874:568;;;;;;:::i;:::-;;:::i;1734:206:40:-;;;;;;;;;;;;;:::i;16272:270:59:-;;;;;;;;;;-1:-1:-1;16272:270:59;;;;;:::i;:::-;;:::i;1201:85:39:-;;;;;;;;;;-1:-1:-1;1247:7:39;1273:6;;;1201:85;;15727:142:59;;;;;;;;;;-1:-1:-1;15727:142:59;;;;;:::i;:::-;;:::i;6382:26::-;;;;;;;;;;;;;;;;9785:963;;;;;;:::i;:::-;;:::i;14538:280::-;;;;;;;;;;-1:-1:-1;14538:280:59;;;;;:::i;:::-;;:::i;15023:374::-;;;;;;;;;;-1:-1:-1;15023:374:59;;;;;:::i;:::-;;:::i;5760:37::-;;;;;;;;;;;;;;;;16016:125;;;;;;;;;;-1:-1:-1;16016:125:59;;;;;:::i;:::-;;:::i;847:99:40:-;;;;;;;;;;-1:-1:-1;926:13:40;;;;847:99;;11040:85:59;;;;;;;;;;;;;:::i;16984:166::-;;;;;;;;;;-1:-1:-1;16984:166:59;;;;;:::i;:::-;;:::i;1139:178:40:-;;;;;;;;;;-1:-1:-1;1139:178:40;;;;;:::i;:::-;;:::i;17374:285:59:-;;;;;;;;;;-1:-1:-1;17374:285:59;;;;;:::i;:::-;;:::i;4563:45::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;16676:178::-;1094:13:39;:11;:13::i;:::-;16771:22:59::1;::::0;16754:50:::1;::::0;;4221:25:79;;;4277:2;4262:18;;4255:34;;;16754:50:59::1;::::0;4194:18:79;16754:50:59::1;;;;;;;16814:22;:33:::0;16676:178::o;11319:124::-;11370:7;11396:40;11403:5;11410:12;;11424:11;;11396:6;:40::i;:::-;11389:47;11319:124;-1:-1:-1;;11319:124:59:o;15484:75::-;1094:13:39;:11;:13::i;:::-;15537:15:59::1;:13;:15::i;:::-;;;15484:75::o:0;1831:101:39:-;1094:13;:11;:13::i;:::-;1895:30:::1;1922:1;1895:18;:30::i;:::-;1831:101::o:0;8874:568:59:-;8377:20;;8358:15;:39;8354:72;;8406:20;;;;;;;;;;;;;;8354:72;8961:18:::1;8982:13;8989:5;8982:6;:13::i;:::-;8961:34;;9009:5;9018:1;9009:10:::0;9005:38:::1;;9028:15;;;;;;;;;;;;;;9005:38;9069:10;9057:9;:22;9053:51;;;9088:16;;;;;;;;;;;;;;9053:51;9140:8;;9132:5;9118:11;;:19;;;;:::i;:::-;:30;9114:60;;;9157:17;;;;;;;;;;;;;;9114:60;9200:5;9185:11;;:20;;;;;;;:::i;:::-;::::0;;;-1:-1:-1;;9220:28:59::1;::::0;160:25:79;;;9237:3:59;;9225:10:::1;::::0;9220:28:::1;::::0;148:2:79;133:18;9220:28:59::1;;;;;;;9275:10;9263:9;:22;9259:177;;;9302:12;9327:10;9351:22;9363:10:::0;9351:9:::1;:22;:::i;:::-;9319:59;::::0;::::1;::::0;;;;;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9301:77;;;9397:7;9392:33;;9413:12;;;;;;;;;;;;;;9392:33;9287:149;9259:177;8951:491;8874:568:::0;;:::o;1734:206:40:-;926:13;;719:10:49;;1827:24:40;926:13;1827:24;;1819:78;;;;;;;5164:2:79;1819:78:40;;;5146:21:79;5203:2;5183:18;;;5176:30;5242:34;5222:18;;;5215:62;5313:11;5293:18;;;5286:39;5342:19;;1819:78:40;;;;;;;;;1907:26;1926:6;1907:18;:26::i;:::-;1770:170;1734:206::o;16272:270:59:-;1094:13:39;:11;:13::i;:::-;16369:15:59::1;16357:9;:27;16353:69;;;16393:29;;;;;;;;;;;;;;16353:69;16461:20;::::0;16437:56:::1;::::0;;4221:25:79;;;4277:2;4262:18;;4255:34;;;16437:56:59::1;::::0;4194:18:79;16437:56:59::1;;;;;;;16503:20;:32:::0;16272:270::o;15727:142::-;1094:13:39;:11;:13::i;:::-;15806:12:59::1;::::0;15797:32:::1;::::0;;4221:25:79;;;4277:2;4262:18;;4255:34;;;15797:32:59::1;::::0;4194:18:79;15797:32:59::1;;;;;;;15839:12;:23:::0;15727:142::o;9785:963::-;8377:20;;8358:15;:39;8354:72;;8406:20;;;;;;;;;;;;;;8354:72;9904:16;;;:37:::1;;-1:-1:-1::0;9924:17:59;;9904:37:::1;9900:69;;;9950:19;;;;;;;;;;;;;;9900:69;9983:27:::0;;::::1;9979:59;;10019:19;;;;;;;;;;;;;;9979:59;10069:12;::::0;10049:17:::1;10111:14;:12;:14::i;:::-;10091:34;;10136:17;10168:9:::0;10163:334:::1;10179:15:::0;;::::1;10163:334;;;10215:11;10229:5;;10235:1;10229:8;;;;;;;:::i;:::-;;;;;;;10215:22;;10255:3;10262:1;10255:8:::0;10251:22:::1;;10265:8;;;10251:22;10311:8;;10305:3;10291:11;;:17;;;;:::i;:::-;:28;10287:58;;;10328:17;;;;;;;;;;;;;;10287:58;10372:33;10379:3;10384:9;10395;10372:6;:33::i;:::-;10359:46;::::0;;::::1;:::i;:::-;;;10434:3;10419:11;;:18;;;;;;;:::i;:::-;::::0;;;-1:-1:-1;10473:4:59;;-1:-1:-1;10473:4:59;10478:1;10473:7;;::::1;;;;;:::i;:::-;;;;;;;10461:10;10456:30;;;10482:3;10456:30;;;;160:25:79::0;;148:2;133:18;;14:177;10456:30:59::1;;;;;;;;10201:296;10163:334;10196:3;::::0;::::1;:::i;:::-;;;10163:334;;;;10523:9;10511;:21;10507:50;;;10541:16;;;;;;;;;;;;;;10507:50;10583:9;10571;:21;10567:175;;;10609:12;10634:10;10658:21;10670:9:::0;10658::::1;:21;:::i;:::-;10626:58;::::0;::::1;::::0;;;;;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10608:76;;;10703:7;10698:33;;10719:12;;;;;;;;;;;;;;10698:33;10594:148;10567:175;9890:858;;;9785:963:::0;;;;:::o;14538:280::-;1094:13:39;:11;:13::i;:::-;8377:20:59::1;;8358:15;:39;8354:72;;8406:20;;;;;;;;;;;;;;8354:72;14633:5:::2;14642:1;14633:10:::0;14629:38:::2;;14652:15;;;;;;;;;;;;;;14629:38;14703:8;;14695:5;14681:11;;:19;;;;:::i;:::-;:30;14677:60;;;14720:17;;;;;;;;;;;;;;14677:60;14763:5;14748:11;;:20;;;;;;;:::i;:::-;::::0;;;-1:-1:-1;;14783:28:59::2;::::0;160:25:79;;;14800:3:59;;14788:10:::2;::::0;14783:28:::2;::::0;148:2:79;133:18;14783:28:59::2;;;;;;;14538:280:::0;;:::o;15023:374::-;1094:13:39;:11;:13::i;:::-;8377:20:59::1;;8358:15;:39;8354:72;;8406:20;;;;;;;;;;;;;;8354:72;15131:18:::2;15152:19;15166:5:::0;15152:4;:19:::2;:::i;:::-;15131:40;;15212:8;;15199:10;15185:11;;:24;;;;:::i;:::-;:35;15181:65;;;15229:17;;;;;;;;;;;;;;15181:65;15271:10;15256:11;;:25;;;;;;;:::i;:::-;::::0;;;-1:-1:-1;15296:9:59::2;::::0;-1:-1:-1;15291:100:59::2;15307:15:::0;;::::2;15291:100;;;15365:4;;15370:1;15365:7;;;;;;;:::i;:::-;;;;;;;15353:10;15348:32;;;15374:5;15348:32;;;;160:25:79::0;;148:2;133:18;;14:177;15348:32:59::2;;;;;;;;15324:3;::::0;::::2;:::i;:::-;;;15291:100;;;;15121:276;15023:374:::0;;;:::o;16016:125::-;1094:13:39;:11;:13::i;:::-;16096:8:59::1;::::0;16084:26:::1;::::0;;4221:25:79;;;4277:2;4262:18;;4255:34;;;16084:26:59::1;::::0;4194:18:79;16084:26:59::1;;;;;;;16120:8;:14:::0;16016:125::o;11040:85::-;11084:7;11110:8;11116:1;11110:5;:8::i;:::-;11103:15;;11040:85;:::o;16984:166::-;1094:13:39;:11;:13::i;:::-;17073:21:59::1;::::0;17058:45:::1;::::0;;4221:25:79;;;4277:2;4262:18;;4255:34;;;17058:45:59::1;::::0;4194:18:79;17058:45:59::1;;;;;;;17113:21;:30:::0;16984:166::o;1139:178:40:-;1094:13:39;:11;:13::i;:::-;1228::40::1;:24:::0;;::::1;::::0;::::1;::::0;;;::::1;::::0;::::1;::::0;;;1292:7:::1;1247::39::0;1273:6;;;;1201:85;1292:7:40::1;1267:43;;;;;;;;;;;;1139:178:::0;:::o;17374:285:59:-;1094:13:39;:11;:13::i;:::-;17477:6:59::1;17453:21;:30;17449:62;;;17492:19;;;;;;;;;;;;;;17449:62;17535:2;17526:20;;;17539:6;17526:20;;;;160:25:79::0;;148:2;133:18;;14:177;17526:20:59::1;;;;;;;;17557:12;17582:2;17574:16;;17598:6;17574:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;17556:53;;;17624:7;17619:33;;17640:12;;;;;;;;;;;;;;2433:187:39::0;2506:16;2525:6;;;2541:17;;;;;;;;;;2573:40;;2525:6;;;;;;;2573:40;;2506:16;2573:40;2496:124;2433:187;:::o;1359:130::-;1247:7;1273:6;1422:23;1273:6;719:10:49;1422:23:39;1414:68;;;;;;;6136:2:79;1414:68:39;;;6118:21:79;;;6155:18;;;6148:30;6214:34;6194:18;;;6187:62;6266:18;;1414:68:39;5934:356:79;13963:166:59;14056:7;14082:40;14112:9;14083:18;14091:10;14083:5;:18;:::i;:::-;14082:29;;:40::i;:::-;14075:47;13963:166;-1:-1:-1;;;;13963:166:59:o;12201:1333::-;12244:19;12265:16;12363:20;12397:18;12429:23;12466;12503:28;12544:10;:26;;;:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;12349:223;;;;;;;;;;12586:11;12601:1;12586:16;12582:44;;12611:15;;;;;;;;;;;;;;12582:44;12640:15;12659:1;12640:20;12636:50;;12669:17;;;;;;;;;;;;;;12636:50;12724:13;12700:37;;:21;:37;;;12696:63;;;12746:13;;;;;;;;;;;;;;12696:63;12861:19;12883:33;12901:15;12883;:33;:::i;:::-;12861:55;;12944:21;;12930:11;:35;12926:68;;;12974:20;;;;;;;;;;;;;;12926:68;13066:19;13087:13;13103:22;13127:27;13170:9;:25;;;:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;13065:132;;;;;;;;;13221:1;13211:6;:11;13207:38;;13231:14;;;;;;;;;;;;;;13207:38;13259:14;13277:1;13259:19;13255:49;;13287:17;;;;;;;;;;;;;;13255:49;13341:12;13318:35;;:20;:35;;;13314:61;;;13362:13;;;;;;;;;;;;;;13314:61;-1:-1:-1;;13400:11:59;;;13480:15;13458:19;:37;13505:22;;;;13400:11;13440:6;;-1:-1:-1;12201:1333:59;-1:-1:-1;;;;;;;;12201:1333:59:o;1501:153:40:-;1590:13;1583:20;;;;;;1613:34;1638:8;1613:24;:34::i;13540:125:59:-;13589:7;13615:43;13622:5;13629:12;;13643:14;:12;:14::i;:::-;13615:6;:43::i;11621:468::-;11663:7;11726:22;;11704:19;;11686:15;:37;;;;:::i;:::-;:62;11682:401;;;11952:19;11976:15;:13;:15::i;:::-;-1:-1:-1;11951:40:59;11621:468;-1:-1:-1;;11621:468:59:o;11682:401::-;-1:-1:-1;12061:11:59;;;11621:468::o;1044:158:55:-;1107:7;1133:19;1142:1;491:4;1150:1;1133:8;:19::i;:::-;1126:26;1044:158;-1:-1:-1;;;1044:158:55:o;8282:752::-;8486:9;;;8617:19;;8610:27;8642:9;;8656;;;8653:16;;8639:31;8606:65;8596:121;;8701:1;8698;8691:12;8596:121;9015:1;9001:11;8997:1;8994;8990:9;8986:27;8982:35;8977:1;8970:9;8963:17;8959:59;8954:64;;8282:752;;;;;:::o;196:180:79:-;255:6;308:2;296:9;287:7;283:23;279:32;276:52;;;324:1;321;314:12;276:52;-1:-1:-1;347:23:79;;196:180;-1:-1:-1;196:180:79:o;640:248::-;708:6;716;769:2;757:9;748:7;744:23;740:32;737:52;;;785:1;782;775:12;737:52;-1:-1:-1;;808:23:79;;;878:2;863:18;;;850:32;;-1:-1:-1;640:248:79:o;1124:367::-;1187:8;1197:6;1251:3;1244:4;1236:6;1232:17;1228:27;1218:55;;1269:1;1266;1259:12;1218:55;-1:-1:-1;1292:20:79;;1335:18;1324:30;;1321:50;;;1367:1;1364;1357:12;1321:50;1404:4;1396:6;1392:17;1380:29;;1464:3;1457:4;1447:6;1444:1;1440:14;1432:6;1428:27;1424:38;1421:47;1418:67;;;1481:1;1478;1471:12;1418:67;1124:367;;;;;:::o;1496:773::-;1618:6;1626;1634;1642;1695:2;1683:9;1674:7;1670:23;1666:32;1663:52;;;1711:1;1708;1701:12;1663:52;1751:9;1738:23;1780:18;1821:2;1813:6;1810:14;1807:34;;;1837:1;1834;1827:12;1807:34;1876:70;1938:7;1929:6;1918:9;1914:22;1876:70;:::i;:::-;1965:8;;-1:-1:-1;1850:96:79;-1:-1:-1;2053:2:79;2038:18;;2025:32;;-1:-1:-1;2069:16:79;;;2066:36;;;2098:1;2095;2088:12;2066:36;;2137:72;2201:7;2190:8;2179:9;2175:24;2137:72;:::i;:::-;1496:773;;;;-1:-1:-1;2228:8:79;-1:-1:-1;;;;1496:773:79:o;2274:505::-;2369:6;2377;2385;2438:2;2426:9;2417:7;2413:23;2409:32;2406:52;;;2454:1;2451;2444:12;2406:52;2494:9;2481:23;2527:18;2519:6;2516:30;2513:50;;;2559:1;2556;2549:12;2513:50;2598:70;2660:7;2651:6;2640:9;2636:22;2598:70;:::i;:::-;2687:8;;2572:96;;-1:-1:-1;2769:2:79;2754:18;;;;2741:32;;2274:505;-1:-1:-1;;;;2274:505:79:o;2784:196::-;2852:20;;2912:42;2901:54;;2891:65;;2881:93;;2970:1;2967;2960:12;2881:93;2784:196;;;:::o;2985:186::-;3044:6;3097:2;3085:9;3076:7;3072:23;3068:32;3065:52;;;3113:1;3110;3103:12;3065:52;3136:29;3155:9;3136:29;:::i;3176:254::-;3244:6;3252;3305:2;3293:9;3284:7;3280:23;3276:32;3273:52;;;3321:1;3318;3311:12;3273:52;3344:29;3363:9;3344:29;:::i;:::-;3334:39;3420:2;3405:18;;;;3392:32;;-1:-1:-1;;;3176:254:79:o;3435:607::-;3547:4;3576:2;3605;3594:9;3587:21;3637:6;3631:13;3680:6;3675:2;3664:9;3660:18;3653:34;3705:1;3715:140;3729:6;3726:1;3723:13;3715:140;;;3824:14;;;3820:23;;3814:30;3790:17;;;3809:2;3786:26;3779:66;3744:10;;3715:140;;;3719:3;3904:1;3899:2;3890:6;3879:9;3875:22;3871:31;3864:42;4033:2;3963:66;3958:2;3950:6;3946:15;3942:88;3931:9;3927:104;3923:113;3915:121;;;;3435:607;;;;:::o;4300:184::-;4352:77;4349:1;4342:88;4449:4;4446:1;4439:15;4473:4;4470:1;4463:15;4489:125;4554:9;;;4575:10;;;4572:36;;;4588:18;;:::i;4619:128::-;4686:9;;;4707:11;;;4704:37;;;4721:18;;:::i;5372:184::-;5424:77;5421:1;5414:88;5521:4;5518:1;5511:15;5545:4;5542:1;5535:15;5561:195;5600:3;5631:66;5624:5;5621:77;5618:103;;5701:18;;:::i;:::-;-1:-1:-1;5748:1:79;5737:13;;5561:195::o;5761:168::-;5834:9;;;5865;;5882:15;;;5876:22;;5862:37;5852:71;;5903:18;;:::i;6295:179::-;6373:13;;6426:22;6415:34;;6405:45;;6395:73;;6464:1;6461;6454:12;6479:473;6582:6;6590;6598;6606;6614;6667:3;6655:9;6646:7;6642:23;6638:33;6635:53;;;6684:1;6681;6674:12;6635:53;6707:39;6736:9;6707:39;:::i;:::-;6697:49;;6786:2;6775:9;6771:18;6765:25;6755:35;;6830:2;6819:9;6815:18;6809:25;6799:35;;6874:2;6863:9;6859:18;6853:25;6843:35;;6897:49;6941:3;6930:9;6926:19;6897:49;:::i;:::-;6887:59;;6479:473;;;;;;;;:::o',
    linkReferences: {},
    immutableReferences: {
      '39554': [
        {
          start: 821,
          length: 32,
        },
        {
          start: 5090,
          length: 32,
        },
      ],
      '39558': [
        {
          start: 646,
          length: 32,
        },
        {
          start: 4659,
          length: 32,
        },
      ],
    },
  },
  methodIdentifiers: {
    'VERSION()': 'ffa1ad74',
    'acceptOwnership()': '79ba5097',
    'batchCredit(uint256[],uint256)': 'b3a90c67',
    'batchRent(uint256[],uint256[])': 'a82c356e',
    'credit(uint256,uint256)': 'ab7ccc1c',
    'deprecationTimestamp()': '2c39d670',
    'ethUsdPrice()': '9478ab8c',
    'lastPriceFeedUpdate()': '128d34ac',
    'maxUnits()': '06517a29',
    'owner()': '8da5cb5b',
    'pendingOwner()': 'e30c3978',
    'price(uint256)': '26a49e37',
    'priceFeed()': '741bef1a',
    'priceFeedCacheDuration()': 'c2e46fe0',
    'refreshPrice()': '3c67a5b2',
    'renounceOwnership()': '715018a6',
    'rent(uint256,uint256)': '783a112b',
    'rentedUnits()': '2751c4fd',
    'setCacheDuration(uint256)': '194e9951',
    'setDeprecationTimestamp(uint256)': '8d567f86',
    'setGracePeriod(uint256)': 'f2f65960',
    'setMaxUnits(uint256)': 'd285e8fd',
    'setPrice(uint256)': '91b7f5ed',
    'transferOwnership(address)': 'f2fde38b',
    'unitPrice()': 'e73faa2d',
    'uptimeFeed()': '3b56125c',
    'uptimeFeedGracePeriod()': '7078cc1c',
    'usdUnitPrice()': '40df0ba0',
    'withdraw(address,uint256)': 'f3fef3a3',
  },
  rawMetadata:
    '{"compiler":{"version":"0.8.18+commit.87f61d96"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"contract AggregatorV3Interface","name":"_priceFeed","type":"address"},{"internalType":"contract AggregatorV3Interface","name":"_uptimeFeed","type":"address"},{"internalType":"uint256","name":"_initialDeprecationPeriod","type":"uint256"},{"internalType":"uint256","name":"_initialUsdUnitPrice","type":"uint256"},{"internalType":"uint256","name":"_initialMaxUnits","type":"uint256"},{"internalType":"uint256","name":"_initialPriceFeedCacheDuration","type":"uint256"},{"internalType":"uint256","name":"_initialUptimeFeedGracePeriod","type":"uint256"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[],"name":"CallFailed","type":"error"},{"inputs":[],"name":"ContractDeprecated","type":"error"},{"inputs":[],"name":"ExceedsCapacity","type":"error"},{"inputs":[],"name":"GracePeriodNotOver","type":"error"},{"inputs":[],"name":"IncompleteRound","type":"error"},{"inputs":[],"name":"InsufficientFunds","type":"error"},{"inputs":[],"name":"InvalidAmount","type":"error"},{"inputs":[],"name":"InvalidBatchInput","type":"error"},{"inputs":[],"name":"InvalidDeprecationTimestamp","type":"error"},{"inputs":[],"name":"InvalidPayment","type":"error"},{"inputs":[],"name":"InvalidPrice","type":"error"},{"inputs":[],"name":"SequencerDown","type":"error"},{"inputs":[],"name":"StaleAnswer","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferStarted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"payer","type":"address"},{"indexed":true,"internalType":"uint256","name":"fid","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"units","type":"uint256"}],"name":"Rent","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"oldDuration","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"newDuration","type":"uint256"}],"name":"SetCacheDuration","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"oldTimestamp","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"newTimestamp","type":"uint256"}],"name":"SetDeprecationTimestamp","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"oldPeriod","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"newPeriod","type":"uint256"}],"name":"SetGracePeriod","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"oldMax","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"newMax","type":"uint256"}],"name":"SetMaxUnits","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"oldPrice","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"newPrice","type":"uint256"}],"name":"SetPrice","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"Withdraw","type":"event"},{"inputs":[],"name":"VERSION","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"acceptOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256[]","name":"fids","type":"uint256[]"},{"internalType":"uint256","name":"units","type":"uint256"}],"name":"batchCredit","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256[]","name":"fids","type":"uint256[]"},{"internalType":"uint256[]","name":"units","type":"uint256[]"}],"name":"batchRent","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"uint256","name":"fid","type":"uint256"},{"internalType":"uint256","name":"units","type":"uint256"}],"name":"credit","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"deprecationTimestamp","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"ethUsdPrice","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"lastPriceFeedUpdate","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"maxUnits","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"pendingOwner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"units","type":"uint256"}],"name":"price","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"priceFeed","outputs":[{"internalType":"contract AggregatorV3Interface","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"priceFeedCacheDuration","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"refreshPrice","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"fid","type":"uint256"},{"internalType":"uint256","name":"units","type":"uint256"}],"name":"rent","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[],"name":"rentedUnits","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"duration","type":"uint256"}],"name":"setCacheDuration","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"timestamp","type":"uint256"}],"name":"setDeprecationTimestamp","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"period","type":"uint256"}],"name":"setGracePeriod","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"max","type":"uint256"}],"name":"setMaxUnits","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"usdPrice","type":"uint256"}],"name":"setPrice","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"unitPrice","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"uptimeFeed","outputs":[{"internalType":"contract AggregatorV3Interface","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"uptimeFeedGracePeriod","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"usdUnitPrice","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"withdraw","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"errors":{"CallFailed()":[{"details":"Revert when a native token transfer fails."}],"ContractDeprecated()":[{"details":"Revert if the caller attempts to rent storage after this contract is deprecated."}],"ExceedsCapacity()":[{"details":"Revert if the caller attempts to rent more storage than is available."}],"GracePeriodNotOver()":[{"details":"Revert if the L2 sequencer restarted less than L2_DOWNTIME_GRACE_PERIOD seconds ago."}],"IncompleteRound()":[{"details":"Revert if the data feed round is incomplete and has not yet generated an answer."}],"InsufficientFunds()":[{"details":"Revert when there are not enough funds for a native token transfer."}],"InvalidAmount()":[{"details":"Revert if the caller attempts to rent zero units."}],"InvalidBatchInput()":[{"details":"Revert if the caller attempts a batch rent with mismatched input array lengths or an empty array."}],"InvalidDeprecationTimestamp()":[{"details":"Revert if the depreaction timestamp parameter is in the past."}],"InvalidPayment()":[{"details":"Revert if the caller provides the wrong payment amount."}],"InvalidPrice()":[{"details":"Revert if the price feed returns a zero or negative price."}],"SequencerDown()":[{"details":"Revert if the sequencer uptime feed detects that the L2 sequencer is unavailable."}],"StaleAnswer()":[{"details":"Revert if a data feed returns a stale answer."}]},"events":{"Rent(address,uint256,uint256)":{"details":"Emit an event when caller pays rent for an fid\'s storage.","params":{"fid":"The fid that will receive the storage allocation.","payer":"Address of the account paying the storage rent.","units":"The number of storage units being rented."}},"SetCacheDuration(uint256,uint256)":{"details":"Emit an event when an owner changes the priceFeedCacheDuration.","params":{"newDuration":"The new priceFeedCacheDuration.","oldDuration":"The previous priceFeedCacheDuration."}},"SetDeprecationTimestamp(uint256,uint256)":{"details":"Emit an event when an owner changes the deprecationTimestamp.","params":{"newTimestamp":"The new deprecationTimestamp.","oldTimestamp":"The previous deprecationTimestamp."}},"SetGracePeriod(uint256,uint256)":{"details":"Emit an event when an owner changes the uptimeFeedGracePeriod.","params":{"newPeriod":"The new uptimeFeedGracePeriod.","oldPeriod":"The previous uptimeFeedGracePeriod."}},"SetMaxUnits(uint256,uint256)":{"details":"Emit an event when an owner changes the maximum supply of storage units.","params":{"newMax":"The new maximum amount.","oldMax":"The previous maximum amount."}},"SetPrice(uint256,uint256)":{"details":"Emit an event when an owner changes the price of storage units.","params":{"newPrice":"The new unit price in USD. Fixed point value with 8 decimals.","oldPrice":"The previous unit price in USD. Fixed point value with 8 decimals."}},"Withdraw(address,uint256)":{"details":"Emit an event when an owner makes a withdrawal from the contract balance.","params":{"amount":"The amount of ether withdrawn.","to":"Address of recipient."}}},"kind":"dev","methods":{"acceptOwnership()":{"details":"The new owner accepts the ownership transfer."},"batchCredit(uint256[],uint256)":{"params":{"fids":"An array of fids.","units":"Number of storage units per fid."}},"batchRent(uint256[],uint256[])":{"params":{"fids":"An array of fids.","units":"An array of storage unit quantities. Must be the same length as the fids array."}},"constructor":{"params":{"_initialDeprecationPeriod":"Initial deprecation period in seconds.","_initialMaxUnits":"Initial maximum capacity in storage units.","_initialPriceFeedCacheDuration":"Initial duration to cache ETH/USD price.","_initialUptimeFeedGracePeriod":"Initial L2 sequencer downtime grace period.","_initialUsdUnitPrice":"Initial unit price in USD. Fixed point value with 8 decimals.","_priceFeed":"Chainlink ETH/USD price feed.","_uptimeFeed":"Chainlink L2 sequencer uptime feed."}},"credit(uint256,uint256)":{"params":{"fid":"The fid that will receive the credit.","units":"Number of storage units to credit."}},"owner()":{"details":"Returns the address of the current owner."},"pendingOwner()":{"details":"Returns the address of the pending owner."},"price(uint256)":{"params":{"units":"Number of storage units."},"returns":{"_0":"uint256 cost in wei."}},"renounceOwnership()":{"details":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."},"rent(uint256,uint256)":{"params":{"fid":"The fid that will receive the storage allocation.","units":"Number of storage units to rent."}},"setCacheDuration(uint256)":{"params":{"duration":"The new priceFeedCacheDuration."}},"setDeprecationTimestamp(uint256)":{"params":{"timestamp":"The new deprecationTimestamp."}},"setGracePeriod(uint256)":{"params":{"period":"The new uptimeFeedGracePeriod."}},"setMaxUnits(uint256)":{"params":{"max":"The new maximum supply of storage units."}},"setPrice(uint256)":{"params":{"usdPrice":"The new unit price in USD. Fixed point value with 8 decimals."}},"transferOwnership(address)":{"details":"Starts the ownership transfer of the contract to a new account. Replaces the pending transfer if there is one. Can only be called by the current owner."},"unitPrice()":{"returns":{"_0":"uint256 cost in wei."}},"withdraw(address,uint256)":{"params":{"amount":"The amount of ether to withdraw.","to":"Address of recipient."}}},"stateVariables":{"VERSION":{"details":"Contract version. Follows Farcaster protocol version scheme."},"deprecationTimestamp":{"details":"Block timestamp at which this contract will no longer accept storage rent payments. Changeable by owner."},"ethUsdPrice":{"details":"Cached Chainlink ETH/USD price."},"lastPriceFeedUpdate":{"details":"Timestamp of the last update to ethUsdPrice."},"maxUnits":{"details":"Total capacity of storage units. Changeable by owner."},"priceFeed":{"details":"Chainlink ETH/USD price feed."},"priceFeedCacheDuration":{"details":"Duration to cache ethUsdPrice before updating from the price feed."},"rentedUnits":{"details":"Total number of storage units that have been rented."},"uptimeFeed":{"details":"Chainlink L2 sequencer uptime feed."},"uptimeFeedGracePeriod":{"details":"Period in seconds to wait after the L2 sequencer restarts before resuming rentals.      See: https://docs.chain.link/data-feeds/l2-sequencer-feeds"},"usdUnitPrice":{"details":"Price per storage unit in USD. Fixed point value with 8 decimals, e.g. 5e8 = $5 USD. Changeable by owner."}},"version":1},"userdoc":{"kind":"user","methods":{"batchCredit(uint256[],uint256)":{"notice":"Credit multiple fids with free storage units. Only callable by owner."},"batchRent(uint256[],uint256[])":{"notice":"Rent storage for multiple fids. The caller must provide an exact payment amount equal to         the sum of the prices for each fid\'s storage allocation."},"constructor":{"notice":"Set the price feed, uptime feed, and initial parameters."},"credit(uint256,uint256)":{"notice":"Credit a single fid with free storage units. Only callable by owner."},"price(uint256)":{"notice":"Calculate the cost in wei to rent the given number of storage units."},"refreshPrice()":{"notice":"Force refresh the cached Chainlink ETH/USD price."},"rent(uint256,uint256)":{"notice":"Rent storage for a given fid. The caller must provide an exact payment amount."},"setCacheDuration(uint256)":{"notice":"Change the priceFeedCacheDuration."},"setDeprecationTimestamp(uint256)":{"notice":"Change the deprecationTimestamp."},"setGracePeriod(uint256)":{"notice":"Change the uptimeFeedGracePeriod."},"setMaxUnits(uint256)":{"notice":"Change the maximum supply of storage units."},"setPrice(uint256)":{"notice":"Change the USD price per storage unit."},"unitPrice()":{"notice":"Cost in wei to rent one storage unit."},"withdraw(address,uint256)":{"notice":"Withdraw a specified amount of ether from the contract balance to a given address."}},"version":1}},"settings":{"compilationTarget":{"src/StorageRent.sol":"StorageRent"},"evmVersion":"paris","libraries":{},"metadata":{"bytecodeHash":"ipfs"},"optimizer":{"enabled":true,"runs":10000},"remappings":[":chainlink-brownie-contracts/=lib/chainlink-brownie-contracts/",":chainlink/=lib/chainlink-brownie-contracts/contracts/src/",":ds-test/=lib/forge-std/lib/ds-test/src/",":forge-std/=lib/forge-std/src/",":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/",":openzeppelin-contracts/=lib/openzeppelin-contracts/",":openzeppelin-upgradeable/=lib/openzeppelin-contracts-upgradeable/",":openzeppelin/=lib/openzeppelin-contracts/",":solmate/=lib/solmate/"]},"sources":{"lib/chainlink-brownie-contracts/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol":{"keccak256":"0xe6f5ac8c47f3b9b6135051efb9216f9ba5b312a6ecc20209b4f66a780443c328","license":"MIT","urls":["bzz-raw://ded4aa77b7b8f222a2d992eb95b03592be3250b826b6a38a4c790d2dec8b0d47","dweb:/ipfs/QmNUKpTKXWsBBNMyzZuYvEZ2pUhZ2zEhQuyvxYZpTwo4eT"]},"lib/openzeppelin-contracts/contracts/access/Ownable.sol":{"keccak256":"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673","license":"MIT","urls":["bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2","dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y"]},"lib/openzeppelin-contracts/contracts/access/Ownable2Step.sol":{"keccak256":"0x5c879356795cc563440408404a52eaf672d4547949e0a5920fb17642303d9e1b","license":"MIT","urls":["bzz-raw://fb210cdef017f9813af368e17ea1573bc26094dd8dba8b5db8bec4cc90883d0a","dweb:/ipfs/QmdixQwckiNVVWHaJD9ps5ALWsHkZGRAePkuUPw1ZhhJhM"]},"lib/openzeppelin-contracts/contracts/utils/Context.sol":{"keccak256":"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7","license":"MIT","urls":["bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92","dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3"]},"lib/solmate/src/utils/FixedPointMathLib.sol":{"keccak256":"0x622fcd8a49e132df5ec7651cc6ae3aaf0cf59bdcd67a9a804a1b9e2485113b7d","license":"MIT","urls":["bzz-raw://af77088eb606427d4c55e578984a615779c86bc30646a20f7bb27299ba390f7c","dweb:/ipfs/QmZGQdhdQDtHc7gZXWrKXgA3govc74X8U63BiWhPQK3mK8"]},"src/StorageRent.sol":{"keccak256":"0xc92f0df7a4f6f9612d318002c930338e109b20ac9942116e4f5f690f525d7ec0","license":"UNLICENSED","urls":["bzz-raw://779f34dfe4645c88bb5d043a095a089d68101438eb00761eb86550d7aa92fd9e","dweb:/ipfs/QmdEkRn7ULhJDSEg6ctJ25pjGqwcoG1S8kEj9AVrrYdiRY"]}},"version":1}',
  metadata: {
    compiler: {
      version: '0.8.18+commit.87f61d96',
    },
    language: 'Solidity',
    output: {
      abi: [
        {
          inputs: [
            {
              internalType: 'contract AggregatorV3Interface',
              name: '_priceFeed',
              type: 'address',
            },
            {
              internalType: 'contract AggregatorV3Interface',
              name: '_uptimeFeed',
              type: 'address',
            },
            {
              internalType: 'uint256',
              name: '_initialDeprecationPeriod',
              type: 'uint256',
            },
            {
              internalType: 'uint256',
              name: '_initialUsdUnitPrice',
              type: 'uint256',
            },
            {
              internalType: 'uint256',
              name: '_initialMaxUnits',
              type: 'uint256',
            },
            {
              internalType: 'uint256',
              name: '_initialPriceFeedCacheDuration',
              type: 'uint256',
            },
            {
              internalType: 'uint256',
              name: '_initialUptimeFeedGracePeriod',
              type: 'uint256',
            },
          ],
          stateMutability: 'nonpayable',
          type: 'constructor',
        },
        {
          inputs: [],
          type: 'error',
          name: 'CallFailed',
        },
        {
          inputs: [],
          type: 'error',
          name: 'ContractDeprecated',
        },
        {
          inputs: [],
          type: 'error',
          name: 'ExceedsCapacity',
        },
        {
          inputs: [],
          type: 'error',
          name: 'GracePeriodNotOver',
        },
        {
          inputs: [],
          type: 'error',
          name: 'IncompleteRound',
        },
        {
          inputs: [],
          type: 'error',
          name: 'InsufficientFunds',
        },
        {
          inputs: [],
          type: 'error',
          name: 'InvalidAmount',
        },
        {
          inputs: [],
          type: 'error',
          name: 'InvalidBatchInput',
        },
        {
          inputs: [],
          type: 'error',
          name: 'InvalidDeprecationTimestamp',
        },
        {
          inputs: [],
          type: 'error',
          name: 'InvalidPayment',
        },
        {
          inputs: [],
          type: 'error',
          name: 'InvalidPrice',
        },
        {
          inputs: [],
          type: 'error',
          name: 'SequencerDown',
        },
        {
          inputs: [],
          type: 'error',
          name: 'StaleAnswer',
        },
        {
          inputs: [
            {
              internalType: 'address',
              name: 'previousOwner',
              type: 'address',
              indexed: true,
            },
            {
              internalType: 'address',
              name: 'newOwner',
              type: 'address',
              indexed: true,
            },
          ],
          type: 'event',
          name: 'OwnershipTransferStarted',
          anonymous: false,
        },
        {
          inputs: [
            {
              internalType: 'address',
              name: 'previousOwner',
              type: 'address',
              indexed: true,
            },
            {
              internalType: 'address',
              name: 'newOwner',
              type: 'address',
              indexed: true,
            },
          ],
          type: 'event',
          name: 'OwnershipTransferred',
          anonymous: false,
        },
        {
          inputs: [
            {
              internalType: 'address',
              name: 'payer',
              type: 'address',
              indexed: true,
            },
            {
              internalType: 'uint256',
              name: 'fid',
              type: 'uint256',
              indexed: true,
            },
            {
              internalType: 'uint256',
              name: 'units',
              type: 'uint256',
              indexed: false,
            },
          ],
          type: 'event',
          name: 'Rent',
          anonymous: false,
        },
        {
          inputs: [
            {
              internalType: 'uint256',
              name: 'oldDuration',
              type: 'uint256',
              indexed: false,
            },
            {
              internalType: 'uint256',
              name: 'newDuration',
              type: 'uint256',
              indexed: false,
            },
          ],
          type: 'event',
          name: 'SetCacheDuration',
          anonymous: false,
        },
        {
          inputs: [
            {
              internalType: 'uint256',
              name: 'oldTimestamp',
              type: 'uint256',
              indexed: false,
            },
            {
              internalType: 'uint256',
              name: 'newTimestamp',
              type: 'uint256',
              indexed: false,
            },
          ],
          type: 'event',
          name: 'SetDeprecationTimestamp',
          anonymous: false,
        },
        {
          inputs: [
            {
              internalType: 'uint256',
              name: 'oldPeriod',
              type: 'uint256',
              indexed: false,
            },
            {
              internalType: 'uint256',
              name: 'newPeriod',
              type: 'uint256',
              indexed: false,
            },
          ],
          type: 'event',
          name: 'SetGracePeriod',
          anonymous: false,
        },
        {
          inputs: [
            {
              internalType: 'uint256',
              name: 'oldMax',
              type: 'uint256',
              indexed: false,
            },
            {
              internalType: 'uint256',
              name: 'newMax',
              type: 'uint256',
              indexed: false,
            },
          ],
          type: 'event',
          name: 'SetMaxUnits',
          anonymous: false,
        },
        {
          inputs: [
            {
              internalType: 'uint256',
              name: 'oldPrice',
              type: 'uint256',
              indexed: false,
            },
            {
              internalType: 'uint256',
              name: 'newPrice',
              type: 'uint256',
              indexed: false,
            },
          ],
          type: 'event',
          name: 'SetPrice',
          anonymous: false,
        },
        {
          inputs: [
            {
              internalType: 'address',
              name: 'to',
              type: 'address',
              indexed: true,
            },
            {
              internalType: 'uint256',
              name: 'amount',
              type: 'uint256',
              indexed: false,
            },
          ],
          type: 'event',
          name: 'Withdraw',
          anonymous: false,
        },
        {
          inputs: [],
          stateMutability: 'view',
          type: 'function',
          name: 'VERSION',
          outputs: [
            {
              internalType: 'string',
              name: '',
              type: 'string',
            },
          ],
        },
        {
          inputs: [],
          stateMutability: 'nonpayable',
          type: 'function',
          name: 'acceptOwnership',
        },
        {
          inputs: [
            {
              internalType: 'uint256[]',
              name: 'fids',
              type: 'uint256[]',
            },
            {
              internalType: 'uint256',
              name: 'units',
              type: 'uint256',
            },
          ],
          stateMutability: 'nonpayable',
          type: 'function',
          name: 'batchCredit',
        },
        {
          inputs: [
            {
              internalType: 'uint256[]',
              name: 'fids',
              type: 'uint256[]',
            },
            {
              internalType: 'uint256[]',
              name: 'units',
              type: 'uint256[]',
            },
          ],
          stateMutability: 'payable',
          type: 'function',
          name: 'batchRent',
        },
        {
          inputs: [
            {
              internalType: 'uint256',
              name: 'fid',
              type: 'uint256',
            },
            {
              internalType: 'uint256',
              name: 'units',
              type: 'uint256',
            },
          ],
          stateMutability: 'nonpayable',
          type: 'function',
          name: 'credit',
        },
        {
          inputs: [],
          stateMutability: 'view',
          type: 'function',
          name: 'deprecationTimestamp',
          outputs: [
            {
              internalType: 'uint256',
              name: '',
              type: 'uint256',
            },
          ],
        },
        {
          inputs: [],
          stateMutability: 'view',
          type: 'function',
          name: 'ethUsdPrice',
          outputs: [
            {
              internalType: 'uint256',
              name: '',
              type: 'uint256',
            },
          ],
        },
        {
          inputs: [],
          stateMutability: 'view',
          type: 'function',
          name: 'lastPriceFeedUpdate',
          outputs: [
            {
              internalType: 'uint256',
              name: '',
              type: 'uint256',
            },
          ],
        },
        {
          inputs: [],
          stateMutability: 'view',
          type: 'function',
          name: 'maxUnits',
          outputs: [
            {
              internalType: 'uint256',
              name: '',
              type: 'uint256',
            },
          ],
        },
        {
          inputs: [],
          stateMutability: 'view',
          type: 'function',
          name: 'owner',
          outputs: [
            {
              internalType: 'address',
              name: '',
              type: 'address',
            },
          ],
        },
        {
          inputs: [],
          stateMutability: 'view',
          type: 'function',
          name: 'pendingOwner',
          outputs: [
            {
              internalType: 'address',
              name: '',
              type: 'address',
            },
          ],
        },
        {
          inputs: [
            {
              internalType: 'uint256',
              name: 'units',
              type: 'uint256',
            },
          ],
          stateMutability: 'view',
          type: 'function',
          name: 'price',
          outputs: [
            {
              internalType: 'uint256',
              name: '',
              type: 'uint256',
            },
          ],
        },
        {
          inputs: [],
          stateMutability: 'view',
          type: 'function',
          name: 'priceFeed',
          outputs: [
            {
              internalType: 'contract AggregatorV3Interface',
              name: '',
              type: 'address',
            },
          ],
        },
        {
          inputs: [],
          stateMutability: 'view',
          type: 'function',
          name: 'priceFeedCacheDuration',
          outputs: [
            {
              internalType: 'uint256',
              name: '',
              type: 'uint256',
            },
          ],
        },
        {
          inputs: [],
          stateMutability: 'nonpayable',
          type: 'function',
          name: 'refreshPrice',
        },
        {
          inputs: [],
          stateMutability: 'nonpayable',
          type: 'function',
          name: 'renounceOwnership',
        },
        {
          inputs: [
            {
              internalType: 'uint256',
              name: 'fid',
              type: 'uint256',
            },
            {
              internalType: 'uint256',
              name: 'units',
              type: 'uint256',
            },
          ],
          stateMutability: 'payable',
          type: 'function',
          name: 'rent',
        },
        {
          inputs: [],
          stateMutability: 'view',
          type: 'function',
          name: 'rentedUnits',
          outputs: [
            {
              internalType: 'uint256',
              name: '',
              type: 'uint256',
            },
          ],
        },
        {
          inputs: [
            {
              internalType: 'uint256',
              name: 'duration',
              type: 'uint256',
            },
          ],
          stateMutability: 'nonpayable',
          type: 'function',
          name: 'setCacheDuration',
        },
        {
          inputs: [
            {
              internalType: 'uint256',
              name: 'timestamp',
              type: 'uint256',
            },
          ],
          stateMutability: 'nonpayable',
          type: 'function',
          name: 'setDeprecationTimestamp',
        },
        {
          inputs: [
            {
              internalType: 'uint256',
              name: 'period',
              type: 'uint256',
            },
          ],
          stateMutability: 'nonpayable',
          type: 'function',
          name: 'setGracePeriod',
        },
        {
          inputs: [
            {
              internalType: 'uint256',
              name: 'max',
              type: 'uint256',
            },
          ],
          stateMutability: 'nonpayable',
          type: 'function',
          name: 'setMaxUnits',
        },
        {
          inputs: [
            {
              internalType: 'uint256',
              name: 'usdPrice',
              type: 'uint256',
            },
          ],
          stateMutability: 'nonpayable',
          type: 'function',
          name: 'setPrice',
        },
        {
          inputs: [
            {
              internalType: 'address',
              name: 'newOwner',
              type: 'address',
            },
          ],
          stateMutability: 'nonpayable',
          type: 'function',
          name: 'transferOwnership',
        },
        {
          inputs: [],
          stateMutability: 'view',
          type: 'function',
          name: 'unitPrice',
          outputs: [
            {
              internalType: 'uint256',
              name: '',
              type: 'uint256',
            },
          ],
        },
        {
          inputs: [],
          stateMutability: 'view',
          type: 'function',
          name: 'uptimeFeed',
          outputs: [
            {
              internalType: 'contract AggregatorV3Interface',
              name: '',
              type: 'address',
            },
          ],
        },
        {
          inputs: [],
          stateMutability: 'view',
          type: 'function',
          name: 'uptimeFeedGracePeriod',
          outputs: [
            {
              internalType: 'uint256',
              name: '',
              type: 'uint256',
            },
          ],
        },
        {
          inputs: [],
          stateMutability: 'view',
          type: 'function',
          name: 'usdUnitPrice',
          outputs: [
            {
              internalType: 'uint256',
              name: '',
              type: 'uint256',
            },
          ],
        },
        {
          inputs: [
            {
              internalType: 'address',
              name: 'to',
              type: 'address',
            },
            {
              internalType: 'uint256',
              name: 'amount',
              type: 'uint256',
            },
          ],
          stateMutability: 'nonpayable',
          type: 'function',
          name: 'withdraw',
        },
      ],
      devdoc: {
        kind: 'dev',
        methods: {
          'acceptOwnership()': {
            details: 'The new owner accepts the ownership transfer.',
          },
          'batchCredit(uint256[],uint256)': {
            params: {
              fids: 'An array of fids.',
              units: 'Number of storage units per fid.',
            },
          },
          'batchRent(uint256[],uint256[])': {
            params: {
              fids: 'An array of fids.',
              units: 'An array of storage unit quantities. Must be the same length as the fids array.',
            },
          },
          constructor: {
            params: {
              _initialDeprecationPeriod: 'Initial deprecation period in seconds.',
              _initialMaxUnits: 'Initial maximum capacity in storage units.',
              _initialPriceFeedCacheDuration: 'Initial duration to cache ETH/USD price.',
              _initialUptimeFeedGracePeriod: 'Initial L2 sequencer downtime grace period.',
              _initialUsdUnitPrice: 'Initial unit price in USD. Fixed point value with 8 decimals.',
              _priceFeed: 'Chainlink ETH/USD price feed.',
              _uptimeFeed: 'Chainlink L2 sequencer uptime feed.',
            },
          },
          'credit(uint256,uint256)': {
            params: {
              fid: 'The fid that will receive the credit.',
              units: 'Number of storage units to credit.',
            },
          },
          'owner()': {
            details: 'Returns the address of the current owner.',
          },
          'pendingOwner()': {
            details: 'Returns the address of the pending owner.',
          },
          'price(uint256)': {
            params: {
              units: 'Number of storage units.',
            },
            returns: {
              _0: 'uint256 cost in wei.',
            },
          },
          'renounceOwnership()': {
            details:
              'Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.',
          },
          'rent(uint256,uint256)': {
            params: {
              fid: 'The fid that will receive the storage allocation.',
              units: 'Number of storage units to rent.',
            },
          },
          'setCacheDuration(uint256)': {
            params: {
              duration: 'The new priceFeedCacheDuration.',
            },
          },
          'setDeprecationTimestamp(uint256)': {
            params: {
              timestamp: 'The new deprecationTimestamp.',
            },
          },
          'setGracePeriod(uint256)': {
            params: {
              period: 'The new uptimeFeedGracePeriod.',
            },
          },
          'setMaxUnits(uint256)': {
            params: {
              max: 'The new maximum supply of storage units.',
            },
          },
          'setPrice(uint256)': {
            params: {
              usdPrice: 'The new unit price in USD. Fixed point value with 8 decimals.',
            },
          },
          'transferOwnership(address)': {
            details:
              'Starts the ownership transfer of the contract to a new account. Replaces the pending transfer if there is one. Can only be called by the current owner.',
          },
          'unitPrice()': {
            returns: {
              _0: 'uint256 cost in wei.',
            },
          },
          'withdraw(address,uint256)': {
            params: {
              amount: 'The amount of ether to withdraw.',
              to: 'Address of recipient.',
            },
          },
        },
        version: 1,
      },
      userdoc: {
        kind: 'user',
        methods: {
          'batchCredit(uint256[],uint256)': {
            notice: 'Credit multiple fids with free storage units. Only callable by owner.',
          },
          'batchRent(uint256[],uint256[])': {
            notice:
              "Rent storage for multiple fids. The caller must provide an exact payment amount equal to         the sum of the prices for each fid's storage allocation.",
          },
          constructor: {
            notice: 'Set the price feed, uptime feed, and initial parameters.',
          },
          'credit(uint256,uint256)': {
            notice: 'Credit a single fid with free storage units. Only callable by owner.',
          },
          'price(uint256)': {
            notice: 'Calculate the cost in wei to rent the given number of storage units.',
          },
          'refreshPrice()': {
            notice: 'Force refresh the cached Chainlink ETH/USD price.',
          },
          'rent(uint256,uint256)': {
            notice: 'Rent storage for a given fid. The caller must provide an exact payment amount.',
          },
          'setCacheDuration(uint256)': {
            notice: 'Change the priceFeedCacheDuration.',
          },
          'setDeprecationTimestamp(uint256)': {
            notice: 'Change the deprecationTimestamp.',
          },
          'setGracePeriod(uint256)': {
            notice: 'Change the uptimeFeedGracePeriod.',
          },
          'setMaxUnits(uint256)': {
            notice: 'Change the maximum supply of storage units.',
          },
          'setPrice(uint256)': {
            notice: 'Change the USD price per storage unit.',
          },
          'unitPrice()': {
            notice: 'Cost in wei to rent one storage unit.',
          },
          'withdraw(address,uint256)': {
            notice: 'Withdraw a specified amount of ether from the contract balance to a given address.',
          },
        },
        version: 1,
      },
    },
    settings: {
      remappings: [
        ':chainlink-brownie-contracts/=lib/chainlink-brownie-contracts/',
        ':chainlink/=lib/chainlink-brownie-contracts/contracts/src/',
        ':ds-test/=lib/forge-std/lib/ds-test/src/',
        ':forge-std/=lib/forge-std/src/',
        ':openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/',
        ':openzeppelin-contracts/=lib/openzeppelin-contracts/',
        ':openzeppelin-upgradeable/=lib/openzeppelin-contracts-upgradeable/',
        ':openzeppelin/=lib/openzeppelin-contracts/',
        ':solmate/=lib/solmate/',
      ],
      optimizer: {
        enabled: true,
        runs: 10000,
      },
      metadata: {
        bytecodeHash: 'ipfs',
      },
      compilationTarget: {
        'src/StorageRent.sol': 'StorageRent',
      },
      libraries: {},
    },
    sources: {
      'lib/chainlink-brownie-contracts/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol': {
        keccak256: '0xe6f5ac8c47f3b9b6135051efb9216f9ba5b312a6ecc20209b4f66a780443c328',
        urls: [
          'bzz-raw://ded4aa77b7b8f222a2d992eb95b03592be3250b826b6a38a4c790d2dec8b0d47',
          'dweb:/ipfs/QmNUKpTKXWsBBNMyzZuYvEZ2pUhZ2zEhQuyvxYZpTwo4eT',
        ],
        license: 'MIT',
      },
      'lib/openzeppelin-contracts/contracts/access/Ownable.sol': {
        keccak256: '0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673',
        urls: [
          'bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2',
          'dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y',
        ],
        license: 'MIT',
      },
      'lib/openzeppelin-contracts/contracts/access/Ownable2Step.sol': {
        keccak256: '0x5c879356795cc563440408404a52eaf672d4547949e0a5920fb17642303d9e1b',
        urls: [
          'bzz-raw://fb210cdef017f9813af368e17ea1573bc26094dd8dba8b5db8bec4cc90883d0a',
          'dweb:/ipfs/QmdixQwckiNVVWHaJD9ps5ALWsHkZGRAePkuUPw1ZhhJhM',
        ],
        license: 'MIT',
      },
      'lib/openzeppelin-contracts/contracts/utils/Context.sol': {
        keccak256: '0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7',
        urls: [
          'bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92',
          'dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3',
        ],
        license: 'MIT',
      },
      'lib/solmate/src/utils/FixedPointMathLib.sol': {
        keccak256: '0x622fcd8a49e132df5ec7651cc6ae3aaf0cf59bdcd67a9a804a1b9e2485113b7d',
        urls: [
          'bzz-raw://af77088eb606427d4c55e578984a615779c86bc30646a20f7bb27299ba390f7c',
          'dweb:/ipfs/QmZGQdhdQDtHc7gZXWrKXgA3govc74X8U63BiWhPQK3mK8',
        ],
        license: 'MIT',
      },
      'src/StorageRent.sol': {
        keccak256: '0xc92f0df7a4f6f9612d318002c930338e109b20ac9942116e4f5f690f525d7ec0',
        urls: [
          'bzz-raw://779f34dfe4645c88bb5d043a095a089d68101438eb00761eb86550d7aa92fd9e',
          'dweb:/ipfs/QmdEkRn7ULhJDSEg6ctJ25pjGqwcoG1S8kEj9AVrrYdiRY',
        ],
        license: 'UNLICENSED',
      },
    },
    version: 1,
  },
  ast: {
    absolutePath: 'src/StorageRent.sol',
    id: 40315,
    exportedSymbols: {
      AggregatorV3Interface: [45],
      FixedPointMathLib: [36643],
      Ownable2Step: [33420],
      StorageRent: [40314],
    },
    nodeType: 'SourceUnit',
    src: '39:17623:59',
    nodes: [
      {
        id: 39445,
        nodeType: 'PragmaDirective',
        src: '39:23:59',
        nodes: [],
        literals: ['solidity', '0.8', '.18'],
      },
      {
        id: 39447,
        nodeType: 'ImportDirective',
        src: '64:90:59',
        nodes: [],
        absolutePath: 'lib/chainlink-brownie-contracts/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol',
        file: 'chainlink/v0.8/interfaces/AggregatorV3Interface.sol',
        nameLocation: '-1:-1:-1',
        scope: 40315,
        sourceUnit: 46,
        symbolAliases: [
          {
            foreign: {
              id: 39446,
              name: 'AggregatorV3Interface',
              nodeType: 'Identifier',
              overloadedDeclarations: [],
              referencedDeclaration: 45,
              src: '72:21:59',
              typeDescriptions: {},
            },
            nameLocation: '-1:-1:-1',
          },
        ],
        unitAlias: '',
      },
      {
        id: 39449,
        nodeType: 'ImportDirective',
        src: '155:76:59',
        nodes: [],
        absolutePath: 'lib/openzeppelin-contracts/contracts/access/Ownable2Step.sol',
        file: 'openzeppelin/contracts/access/Ownable2Step.sol',
        nameLocation: '-1:-1:-1',
        scope: 40315,
        sourceUnit: 33421,
        symbolAliases: [
          {
            foreign: {
              id: 39448,
              name: 'Ownable2Step',
              nodeType: 'Identifier',
              overloadedDeclarations: [],
              referencedDeclaration: 33420,
              src: '163:12:59',
              typeDescriptions: {},
            },
            nameLocation: '-1:-1:-1',
          },
        ],
        unitAlias: '',
      },
      {
        id: 39451,
        nodeType: 'ImportDirective',
        src: '232:74:59',
        nodes: [],
        absolutePath: 'lib/solmate/src/utils/FixedPointMathLib.sol',
        file: 'solmate/src/utils/FixedPointMathLib.sol',
        nameLocation: '-1:-1:-1',
        scope: 40315,
        sourceUnit: 36644,
        symbolAliases: [
          {
            foreign: {
              id: 39450,
              name: 'FixedPointMathLib',
              nodeType: 'Identifier',
              overloadedDeclarations: [],
              referencedDeclaration: 36643,
              src: '240:17:59',
              typeDescriptions: {},
            },
            nameLocation: '-1:-1:-1',
          },
        ],
        unitAlias: '',
      },
      {
        id: 40314,
        nodeType: 'ContractDefinition',
        src: '308:17353:59',
        nodes: [
          {
            id: 39456,
            nodeType: 'UsingForDirective',
            src: '351:36:59',
            nodes: [],
            global: false,
            libraryName: {
              id: 39454,
              name: 'FixedPointMathLib',
              nameLocations: ['357:17:59'],
              nodeType: 'IdentifierPath',
              referencedDeclaration: 36643,
              src: '357:17:59',
            },
            typeName: {
              id: 39455,
              name: 'uint256',
              nodeType: 'ElementaryTypeName',
              src: '379:7:59',
              typeDescriptions: {
                typeIdentifier: 't_uint256',
                typeString: 'uint256',
              },
            },
          },
          {
            id: 39459,
            nodeType: 'ErrorDefinition',
            src: '666:27:59',
            nodes: [],
            documentation: {
              id: 39457,
              nodeType: 'StructuredDocumentation',
              src: '572:89:59',
              text: '@dev Revert if the caller attempts to rent storage after this contract is deprecated.',
            },
            errorSelector: 'd17e0deb',
            name: 'ContractDeprecated',
            nameLocation: '672:18:59',
            parameters: {
              id: 39458,
              nodeType: 'ParameterList',
              parameters: [],
              src: '690:2:59',
            },
          },
          {
            id: 39462,
            nodeType: 'ErrorDefinition',
            src: '782:24:59',
            nodes: [],
            documentation: {
              id: 39460,
              nodeType: 'StructuredDocumentation',
              src: '699:78:59',
              text: '@dev Revert if the caller attempts to rent more storage than is available.',
            },
            errorSelector: '2aa2ed72',
            name: 'ExceedsCapacity',
            nameLocation: '788:15:59',
            parameters: {
              id: 39461,
              nodeType: 'ParameterList',
              parameters: [],
              src: '803:2:59',
            },
          },
          {
            id: 39465,
            nodeType: 'ErrorDefinition',
            src: '875:22:59',
            nodes: [],
            documentation: {
              id: 39463,
              nodeType: 'StructuredDocumentation',
              src: '812:58:59',
              text: '@dev Revert if the caller attempts to rent zero units.',
            },
            errorSelector: '2c5211c6',
            name: 'InvalidAmount',
            nameLocation: '881:13:59',
            parameters: {
              id: 39464,
              nodeType: 'ParameterList',
              parameters: [],
              src: '894:2:59',
            },
          },
          {
            id: 39468,
            nodeType: 'ErrorDefinition',
            src: '1014:26:59',
            nodes: [],
            documentation: {
              id: 39466,
              nodeType: 'StructuredDocumentation',
              src: '903:106:59',
              text: '@dev Revert if the caller attempts a batch rent with mismatched input array lengths or an empty array.',
            },
            errorSelector: '0a514b99',
            name: 'InvalidBatchInput',
            nameLocation: '1020:17:59',
            parameters: {
              id: 39467,
              nodeType: 'ParameterList',
              parameters: [],
              src: '1037:2:59',
            },
          },
          {
            id: 39471,
            nodeType: 'ErrorDefinition',
            src: '1115:23:59',
            nodes: [],
            documentation: {
              id: 39469,
              nodeType: 'StructuredDocumentation',
              src: '1046:64:59',
              text: '@dev Revert if the caller provides the wrong payment amount.',
            },
            errorSelector: '3c6b4b28',
            name: 'InvalidPayment',
            nameLocation: '1121:14:59',
            parameters: {
              id: 39470,
              nodeType: 'ParameterList',
              parameters: [],
              src: '1135:2:59',
            },
          },
          {
            id: 39474,
            nodeType: 'ErrorDefinition',
            src: '1225:26:59',
            nodes: [],
            documentation: {
              id: 39472,
              nodeType: 'StructuredDocumentation',
              src: '1144:76:59',
              text: '@dev Revert when there are not enough funds for a native token transfer.',
            },
            errorSelector: '356680b7',
            name: 'InsufficientFunds',
            nameLocation: '1231:17:59',
            parameters: {
              id: 39473,
              nodeType: 'ParameterList',
              parameters: [],
              src: '1248:2:59',
            },
          },
          {
            id: 39477,
            nodeType: 'ErrorDefinition',
            src: '1313:19:59',
            nodes: [],
            documentation: {
              id: 39475,
              nodeType: 'StructuredDocumentation',
              src: '1257:51:59',
              text: '@dev Revert when a native token transfer fails.',
            },
            errorSelector: '3204506f',
            name: 'CallFailed',
            nameLocation: '1319:10:59',
            parameters: {
              id: 39476,
              nodeType: 'ParameterList',
              parameters: [],
              src: '1329:2:59',
            },
          },
          {
            id: 39480,
            nodeType: 'ErrorDefinition',
            src: '1397:20:59',
            nodes: [],
            documentation: {
              id: 39478,
              nodeType: 'StructuredDocumentation',
              src: '1338:54:59',
              text: '@dev Revert if a data feed returns a stale answer.',
            },
            errorSelector: '704e0c48',
            name: 'StaleAnswer',
            nameLocation: '1403:11:59',
            parameters: {
              id: 39479,
              nodeType: 'ParameterList',
              parameters: [],
              src: '1414:2:59',
            },
          },
          {
            id: 39483,
            nodeType: 'ErrorDefinition',
            src: '1517:24:59',
            nodes: [],
            documentation: {
              id: 39481,
              nodeType: 'StructuredDocumentation',
              src: '1423:89:59',
              text: '@dev Revert if the data feed round is incomplete and has not yet generated an answer.',
            },
            errorSelector: '8ad52bdd',
            name: 'IncompleteRound',
            nameLocation: '1523:15:59',
            parameters: {
              id: 39482,
              nodeType: 'ParameterList',
              parameters: [],
              src: '1538:2:59',
            },
          },
          {
            id: 39486,
            nodeType: 'ErrorDefinition',
            src: '1619:21:59',
            nodes: [],
            documentation: {
              id: 39484,
              nodeType: 'StructuredDocumentation',
              src: '1547:67:59',
              text: '@dev Revert if the price feed returns a zero or negative price.',
            },
            errorSelector: '00bfc921',
            name: 'InvalidPrice',
            nameLocation: '1625:12:59',
            parameters: {
              id: 39485,
              nodeType: 'ParameterList',
              parameters: [],
              src: '1637:2:59',
            },
          },
          {
            id: 39489,
            nodeType: 'ErrorDefinition',
            src: '1741:22:59',
            nodes: [],
            documentation: {
              id: 39487,
              nodeType: 'StructuredDocumentation',
              src: '1646:90:59',
              text: '@dev Revert if the sequencer uptime feed detects that the L2 sequencer is unavailable.',
            },
            errorSelector: '032b3d00',
            name: 'SequencerDown',
            nameLocation: '1747:13:59',
            parameters: {
              id: 39488,
              nodeType: 'ParameterList',
              parameters: [],
              src: '1760:2:59',
            },
          },
          {
            id: 39492,
            nodeType: 'ErrorDefinition',
            src: '1867:27:59',
            nodes: [],
            documentation: {
              id: 39490,
              nodeType: 'StructuredDocumentation',
              src: '1769:93:59',
              text: '@dev Revert if the L2 sequencer restarted less than L2_DOWNTIME_GRACE_PERIOD seconds ago.',
            },
            errorSelector: 'd15f73b5',
            name: 'GracePeriodNotOver',
            nameLocation: '1873:18:59',
            parameters: {
              id: 39491,
              nodeType: 'ParameterList',
              parameters: [],
              src: '1891:2:59',
            },
          },
          {
            id: 39495,
            nodeType: 'ErrorDefinition',
            src: '1975:36:59',
            nodes: [],
            documentation: {
              id: 39493,
              nodeType: 'StructuredDocumentation',
              src: '1900:70:59',
              text: '@dev Revert if the depreaction timestamp parameter is in the past.',
            },
            errorSelector: '4d9c3149',
            name: 'InvalidDeprecationTimestamp',
            nameLocation: '1981:27:59',
            parameters: {
              id: 39494,
              nodeType: 'ParameterList',
              parameters: [],
              src: '2008:2:59',
            },
          },
          {
            id: 39504,
            nodeType: 'EventDefinition',
            src: '2501:70:59',
            nodes: [],
            anonymous: false,
            documentation: {
              id: 39496,
              nodeType: 'StructuredDocumentation',
              src: '2196:300:59',
              text: " @dev Emit an event when caller pays rent for an fid's storage.\n @param payer     Address of the account paying the storage rent.\n @param fid       The fid that will receive the storage allocation.\n @param units     The number of storage units being rented.",
            },
            eventSelector: 'aabd75b90fb7114eb9587a54f00ce5ebe8cb4a70627f3a6c26e506ffd771fe2f',
            name: 'Rent',
            nameLocation: '2507:4:59',
            parameters: {
              id: 39503,
              nodeType: 'ParameterList',
              parameters: [
                {
                  constant: false,
                  id: 39498,
                  indexed: true,
                  mutability: 'mutable',
                  name: 'payer',
                  nameLocation: '2528:5:59',
                  nodeType: 'VariableDeclaration',
                  scope: 39504,
                  src: '2512:21:59',
                  stateVariable: false,
                  storageLocation: 'default',
                  typeDescriptions: {
                    typeIdentifier: 't_address',
                    typeString: 'address',
                  },
                  typeName: {
                    id: 39497,
                    name: 'address',
                    nodeType: 'ElementaryTypeName',
                    src: '2512:7:59',
                    stateMutability: 'nonpayable',
                    typeDescriptions: {
                      typeIdentifier: 't_address',
                      typeString: 'address',
                    },
                  },
                  visibility: 'internal',
                },
                {
                  constant: false,
                  id: 39500,
                  indexed: true,
                  mutability: 'mutable',
                  name: 'fid',
                  nameLocation: '2551:3:59',
                  nodeType: 'VariableDeclaration',
                  scope: 39504,
                  src: '2535:19:59',
                  stateVariable: false,
                  storageLocation: 'default',
                  typeDescriptions: {
                    typeIdentifier: 't_uint256',
                    typeString: 'uint256',
                  },
                  typeName: {
                    id: 39499,
                    name: 'uint256',
                    nodeType: 'ElementaryTypeName',
                    src: '2535:7:59',
                    typeDescriptions: {
                      typeIdentifier: 't_uint256',
                      typeString: 'uint256',
                    },
                  },
                  visibility: 'internal',
                },
                {
                  constant: false,
                  id: 39502,
                  indexed: false,
                  mutability: 'mutable',
                  name: 'units',
                  nameLocation: '2564:5:59',
                  nodeType: 'VariableDeclaration',
                  scope: 39504,
                  src: '2556:13:59',
                  stateVariable: false,
                  storageLocation: 'default',
                  typeDescriptions: {
                    typeIdentifier: 't_uint256',
                    typeString: 'uint256',
                  },
                  typeName: {
                    id: 39501,
                    name: 'uint256',
                    nodeType: 'ElementaryTypeName',
                    src: '2556:7:59',
                    typeDescriptions: {
                      typeIdentifier: 't_uint256',
                      typeString: 'uint256',
                    },
                  },
                  visibility: 'internal',
                },
              ],
              src: '2511:59:59',
            },
          },
          {
            id: 39511,
            nodeType: 'EventDefinition',
            src: '2851:51:59',
            nodes: [],
            anonymous: false,
            documentation: {
              id: 39505,
              nodeType: 'StructuredDocumentation',
              src: '2577:269:59',
              text: ' @dev Emit an event when an owner changes the price of storage units.\n @param oldPrice The previous unit price in USD. Fixed point value with 8 decimals.\n @param newPrice The new unit price in USD. Fixed point value with 8 decimals.',
            },
            eventSelector: 'f9317dc3bc6dda0e00e43855c2c30847aeafb8dcea9d2ce86e9ce7a83d549f01',
            name: 'SetPrice',
            nameLocation: '2857:8:59',
            parameters: {
              id: 39510,
              nodeType: 'ParameterList',
              parameters: [
                {
                  constant: false,
                  id: 39507,
                  indexed: false,
                  mutability: 'mutable',
                  name: 'oldPrice',
                  nameLocation: '2874:8:59',
                  nodeType: 'VariableDeclaration',
                  scope: 39511,
                  src: '2866:16:59',
                  stateVariable: false,
                  storageLocation: 'default',
                  typeDescriptions: {
                    typeIdentifier: 't_uint256',
                    typeString: 'uint256',
                  },
                  typeName: {
                    id: 39506,
                    name: 'uint256',
                    nodeType: 'ElementaryTypeName',
                    src: '2866:7:59',
                    typeDescriptions: {
                      typeIdentifier: 't_uint256',
                      typeString: 'uint256',
                    },
                  },
                  visibility: 'internal',
                },
                {
                  constant: false,
                  id: 39509,
                  indexed: false,
                  mutability: 'mutable',
                  name: 'newPrice',
                  nameLocation: '2892:8:59',
                  nodeType: 'VariableDeclaration',
                  scope: 39511,
                  src: '2884:16:59',
                  stateVariable: false,
                  storageLocation: 'default',
                  typeDescriptions: {
                    typeIdentifier: 't_uint256',
                    typeString: 'uint256',
                  },
                  typeName: {
                    id: 39508,
                    name: 'uint256',
                    nodeType: 'ElementaryTypeName',
                    src: '2884:7:59',
                    typeDescriptions: {
                      typeIdentifier: 't_uint256',
                      typeString: 'uint256',
                    },
                  },
                  visibility: 'internal',
                },
              ],
              src: '2865:36:59',
            },
          },
          {
            id: 39518,
            nodeType: 'EventDefinition',
            src: '3111:50:59',
            nodes: [],
            anonymous: false,
            documentation: {
              id: 39512,
              nodeType: 'StructuredDocumentation',
              src: '2908:198:59',
              text: ' @dev Emit an event when an owner changes the maximum supply of storage units.\n @param oldMax The previous maximum amount.\n @param newMax The new maximum amount.',
            },
            eventSelector: 'a75b962aa425276de62bec76aeb43cacc12d2b132498ae1115500c23dc35fbe4',
            name: 'SetMaxUnits',
            nameLocation: '3117:11:59',
            parameters: {
              id: 39517,
              nodeType: 'ParameterList',
              parameters: [
                {
                  constant: false,
                  id: 39514,
                  indexed: false,
                  mutability: 'mutable',
                  name: 'oldMax',
                  nameLocation: '3137:6:59',
                  nodeType: 'VariableDeclaration',
                  scope: 39518,
                  src: '3129:14:59',
                  stateVariable: false,
                  storageLocation: 'default',
                  typeDescriptions: {
                    typeIdentifier: 't_uint256',
                    typeString: 'uint256',
                  },
                  typeName: {
                    id: 39513,
                    name: 'uint256',
                    nodeType: 'ElementaryTypeName',
                    src: '3129:7:59',
                    typeDescriptions: {
                      typeIdentifier: 't_uint256',
                      typeString: 'uint256',
                    },
                  },
                  visibility: 'internal',
                },
                {
                  constant: false,
                  id: 39516,
                  indexed: false,
                  mutability: 'mutable',
                  name: 'newMax',
                  nameLocation: '3153:6:59',
                  nodeType: 'VariableDeclaration',
                  scope: 39518,
                  src: '3145:14:59',
                  stateVariable: false,
                  storageLocation: 'default',
                  typeDescriptions: {
                    typeIdentifier: 't_uint256',
                    typeString: 'uint256',
                  },
                  typeName: {
                    id: 39515,
                    name: 'uint256',
                    nodeType: 'ElementaryTypeName',
                    src: '3145:7:59',
                    typeDescriptions: {
                      typeIdentifier: 't_uint256',
                      typeString: 'uint256',
                    },
                  },
                  visibility: 'internal',
                },
              ],
              src: '3128:32:59',
            },
          },
          {
            id: 39525,
            nodeType: 'EventDefinition',
            src: '3383:74:59',
            nodes: [],
            anonymous: false,
            documentation: {
              id: 39519,
              nodeType: 'StructuredDocumentation',
              src: '3167:211:59',
              text: ' @dev Emit an event when an owner changes the deprecationTimestamp.\n @param oldTimestamp The previous deprecationTimestamp.\n @param newTimestamp The new deprecationTimestamp.',
            },
            eventSelector: '27e030644fe653b53e98fbd0ca5004392da63705b0806619a43324647715bc6b',
            name: 'SetDeprecationTimestamp',
            nameLocation: '3389:23:59',
            parameters: {
              id: 39524,
              nodeType: 'ParameterList',
              parameters: [
                {
                  constant: false,
                  id: 39521,
                  indexed: false,
                  mutability: 'mutable',
                  name: 'oldTimestamp',
                  nameLocation: '3421:12:59',
                  nodeType: 'VariableDeclaration',
                  scope: 39525,
                  src: '3413:20:59',
                  stateVariable: false,
                  storageLocation: 'default',
                  typeDescriptions: {
                    typeIdentifier: 't_uint256',
                    typeString: 'uint256',
                  },
                  typeName: {
                    id: 39520,
                    name: 'uint256',
                    nodeType: 'ElementaryTypeName',
                    src: '3413:7:59',
                    typeDescriptions: {
                      typeIdentifier: 't_uint256',
                      typeString: 'uint256',
                    },
                  },
                  visibility: 'internal',
                },
                {
                  constant: false,
                  id: 39523,
                  indexed: false,
                  mutability: 'mutable',
                  name: 'newTimestamp',
                  nameLocation: '3443:12:59',
                  nodeType: 'VariableDeclaration',
                  scope: 39525,
                  src: '3435:20:59',
                  stateVariable: false,
                  storageLocation: 'default',
                  typeDescriptions: {
                    typeIdentifier: 't_uint256',
                    typeString: 'uint256',
                  },
                  typeName: {
                    id: 39522,
                    name: 'uint256',
                    nodeType: 'ElementaryTypeName',
                    src: '3435:7:59',
                    typeDescriptions: {
                      typeIdentifier: 't_uint256',
                      typeString: 'uint256',
                    },
                  },
                  visibility: 'internal',
                },
              ],
              src: '3412:44:59',
            },
          },
          {
            id: 39532,
            nodeType: 'EventDefinition',
            src: '3683:65:59',
            nodes: [],
            anonymous: false,
            documentation: {
              id: 39526,
              nodeType: 'StructuredDocumentation',
              src: '3463:215:59',
              text: ' @dev Emit an event when an owner changes the priceFeedCacheDuration.\n @param oldDuration The previous priceFeedCacheDuration.\n @param newDuration The new priceFeedCacheDuration.',
            },
            eventSelector: 'ba21d40bb8770d5fa02e1971806473e12480167182e829c0fc86addb21e2b77d',
            name: 'SetCacheDuration',
            nameLocation: '3689:16:59',
            parameters: {
              id: 39531,
              nodeType: 'ParameterList',
              parameters: [
                {
                  constant: false,
                  id: 39528,
                  indexed: false,
                  mutability: 'mutable',
                  name: 'oldDuration',
                  nameLocation: '3714:11:59',
                  nodeType: 'VariableDeclaration',
                  scope: 39532,
                  src: '3706:19:59',
                  stateVariable: false,
                  storageLocation: 'default',
                  typeDescriptions: {
                    typeIdentifier: 't_uint256',
                    typeString: 'uint256',
                  },
                  typeName: {
                    id: 39527,
                    name: 'uint256',
                    nodeType: 'ElementaryTypeName',
                    src: '3706:7:59',
                    typeDescriptions: {
                      typeIdentifier: 't_uint256',
                      typeString: 'uint256',
                    },
                  },
                  visibility: 'internal',
                },
                {
                  constant: false,
                  id: 39530,
                  indexed: false,
                  mutability: 'mutable',
                  name: 'newDuration',
                  nameLocation: '3735:11:59',
                  nodeType: 'VariableDeclaration',
                  scope: 39532,
                  src: '3727:19:59',
                  stateVariable: false,
                  storageLocation: 'default',
                  typeDescriptions: {
                    typeIdentifier: 't_uint256',
                    typeString: 'uint256',
                  },
                  typeName: {
                    id: 39529,
                    name: 'uint256',
                    nodeType: 'ElementaryTypeName',
                    src: '3727:7:59',
                    typeDescriptions: {
                      typeIdentifier: 't_uint256',
                      typeString: 'uint256',
                    },
                  },
                  visibility: 'internal',
                },
              ],
              src: '3705:42:59',
            },
          },
          {
            id: 39539,
            nodeType: 'EventDefinition',
            src: '3967:59:59',
            nodes: [],
            anonymous: false,
            documentation: {
              id: 39533,
              nodeType: 'StructuredDocumentation',
              src: '3754:208:59',
              text: ' @dev Emit an event when an owner changes the uptimeFeedGracePeriod.\n @param oldPeriod The previous uptimeFeedGracePeriod.\n @param newPeriod The new uptimeFeedGracePeriod.',
            },
            eventSelector: '31c130faaf861e1e61ca087cc48c410d9099885350e9beb4dad1175cb77a6545',
            name: 'SetGracePeriod',
            nameLocation: '3973:14:59',
            parameters: {
              id: 39538,
              nodeType: 'ParameterList',
              parameters: [
                {
                  constant: false,
                  id: 39535,
                  indexed: false,
                  mutability: 'mutable',
                  name: 'oldPeriod',
                  nameLocation: '3996:9:59',
                  nodeType: 'VariableDeclaration',
                  scope: 39539,
                  src: '3988:17:59',
                  stateVariable: false,
                  storageLocation: 'default',
                  typeDescriptions: {
                    typeIdentifier: 't_uint256',
                    typeString: 'uint256',
                  },
                  typeName: {
                    id: 39534,
                    name: 'uint256',
                    nodeType: 'ElementaryTypeName',
                    src: '3988:7:59',
                    typeDescriptions: {
                      typeIdentifier: 't_uint256',
                      typeString: 'uint256',
                    },
                  },
                  visibility: 'internal',
                },
                {
                  constant: false,
                  id: 39537,
                  indexed: false,
                  mutability: 'mutable',
                  name: 'newPeriod',
                  nameLocation: '4015:9:59',
                  nodeType: 'VariableDeclaration',
                  scope: 39539,
                  src: '4007:17:59',
                  stateVariable: false,
                  storageLocation: 'default',
                  typeDescriptions: {
                    typeIdentifier: 't_uint256',
                    typeString: 'uint256',
                  },
                  typeName: {
                    id: 39536,
                    name: 'uint256',
                    nodeType: 'ElementaryTypeName',
                    src: '4007:7:59',
                    typeDescriptions: {
                      typeIdentifier: 't_uint256',
                      typeString: 'uint256',
                    },
                  },
                  visibility: 'internal',
                },
              ],
              src: '3987:38:59',
            },
          },
          {
            id: 39546,
            nodeType: 'EventDefinition',
            src: '4236:51:59',
            nodes: [],
            anonymous: false,
            documentation: {
              id: 39540,
              nodeType: 'StructuredDocumentation',
              src: '4032:199:59',
              text: ' @dev Emit an event when an owner makes a withdrawal from the contract balance.\n @param to     Address of recipient.\n @param amount The amount of ether withdrawn.',
            },
            eventSelector: '884edad9ce6fa2440d8a54cc123490eb96d2768479d49ff9c7366125a9424364',
            name: 'Withdraw',
            nameLocation: '4242:8:59',
            parameters: {
              id: 39545,
              nodeType: 'ParameterList',
              parameters: [
                {
                  constant: false,
                  id: 39542,
                  indexed: true,
                  mutability: 'mutable',
                  name: 'to',
                  nameLocation: '4267:2:59',
                  nodeType: 'VariableDeclaration',
                  scope: 39546,
                  src: '4251:18:59',
                  stateVariable: false,
                  storageLocation: 'default',
                  typeDescriptions: {
                    typeIdentifier: 't_address',
                    typeString: 'address',
                  },
                  typeName: {
                    id: 39541,
                    name: 'address',
                    nodeType: 'ElementaryTypeName',
                    src: '4251:7:59',
                    stateMutability: 'nonpayable',
                    typeDescriptions: {
                      typeIdentifier: 't_address',
                      typeString: 'address',
                    },
                  },
                  visibility: 'internal',
                },
                {
                  constant: false,
                  id: 39544,
                  indexed: false,
                  mutability: 'mutable',
                  name: 'amount',
                  nameLocation: '4279:6:59',
                  nodeType: 'VariableDeclaration',
                  scope: 39546,
                  src: '4271:14:59',
                  stateVariable: false,
                  storageLocation: 'default',
                  typeDescriptions: {
                    typeIdentifier: 't_uint256',
                    typeString: 'uint256',
                  },
                  typeName: {
                    id: 39543,
                    name: 'uint256',
                    nodeType: 'ElementaryTypeName',
                    src: '4271:7:59',
                    typeDescriptions: {
                      typeIdentifier: 't_uint256',
                      typeString: 'uint256',
                    },
                  },
                  visibility: 'internal',
                },
              ],
              src: '4250:36:59',
            },
          },
          {
            id: 39550,
            nodeType: 'VariableDeclaration',
            src: '4563:45:59',
            nodes: [],
            constant: true,
            documentation: {
              id: 39547,
              nodeType: 'StructuredDocumentation',
              src: '4474:84:59',
              text: ' @dev Contract version. Follows Farcaster protocol version scheme.',
            },
            functionSelector: 'ffa1ad74',
            mutability: 'constant',
            name: 'VERSION',
            nameLocation: '4586:7:59',
            scope: 40314,
            stateVariable: true,
            storageLocation: 'default',
            typeDescriptions: {
              typeIdentifier: 't_string_memory_ptr',
              typeString: 'string',
            },
            typeName: {
              id: 39548,
              name: 'string',
              nodeType: 'ElementaryTypeName',
              src: '4563:6:59',
              typeDescriptions: {
                typeIdentifier: 't_string_storage_ptr',
                typeString: 'string',
              },
            },
            value: {
              hexValue: '323032332e30362e3031',
              id: 39549,
              isConstant: false,
              isLValue: false,
              isPure: true,
              kind: 'string',
              lValueRequested: false,
              nodeType: 'Literal',
              src: '4596:12:59',
              typeDescriptions: {
                typeIdentifier: 't_stringliteral_e3e38fd6e48862e01546aef56ce8f4f9084a1dec0c1407e902b42f5c8fdee95d',
                typeString: 'literal_string "2023.06.01"',
              },
              value: '2023.06.01',
            },
            visibility: 'public',
          },
          {
            id: 39554,
            nodeType: 'VariableDeclaration',
            src: '4855:48:59',
            nodes: [],
            constant: false,
            documentation: {
              id: 39551,
              nodeType: 'StructuredDocumentation',
              src: '4797:53:59',
              text: ' @dev Chainlink ETH/USD price feed.',
            },
            functionSelector: '741bef1a',
            mutability: 'immutable',
            name: 'priceFeed',
            nameLocation: '4894:9:59',
            scope: 40314,
            stateVariable: true,
            storageLocation: 'default',
            typeDescriptions: {
              typeIdentifier: 't_contract$_AggregatorV3Interface_$45',
              typeString: 'contract AggregatorV3Interface',
            },
            typeName: {
              id: 39553,
              nodeType: 'UserDefinedTypeName',
              pathNode: {
                id: 39552,
                name: 'AggregatorV3Interface',
                nameLocations: ['4855:21:59'],
                nodeType: 'IdentifierPath',
                referencedDeclaration: 45,
                src: '4855:21:59',
              },
              referencedDeclaration: 45,
              src: '4855:21:59',
              typeDescriptions: {
                typeIdentifier: 't_contract$_AggregatorV3Interface_$45',
                typeString: 'contract AggregatorV3Interface',
              },
            },
            visibility: 'public',
          },
          {
            id: 39558,
            nodeType: 'VariableDeclaration',
            src: '4974:49:59',
            nodes: [],
            constant: false,
            documentation: {
              id: 39555,
              nodeType: 'StructuredDocumentation',
              src: '4910:59:59',
              text: ' @dev Chainlink L2 sequencer uptime feed.',
            },
            functionSelector: '3b56125c',
            mutability: 'immutable',
            name: 'uptimeFeed',
            nameLocation: '5013:10:59',
            scope: 40314,
            stateVariable: true,
            storageLocation: 'default',
            typeDescriptions: {
              typeIdentifier: 't_contract$_AggregatorV3Interface_$45',
              typeString: 'contract AggregatorV3Interface',
            },
            typeName: {
              id: 39557,
              nodeType: 'UserDefinedTypeName',
              pathNode: {
                id: 39556,
                name: 'AggregatorV3Interface',
                nameLocations: ['4974:21:59'],
                nodeType: 'IdentifierPath',
                referencedDeclaration: 45,
                src: '4974:21:59',
              },
              referencedDeclaration: 45,
              src: '4974:21:59',
              typeDescriptions: {
                typeIdentifier: 't_contract$_AggregatorV3Interface_$45',
                typeString: 'contract AggregatorV3Interface',
              },
            },
            visibility: 'public',
          },
          {
            id: 39561,
            nodeType: 'VariableDeclaration',
            src: '5343:35:59',
            nodes: [],
            constant: false,
            documentation: {
              id: 39559,
              nodeType: 'StructuredDocumentation',
              src: '5210:128:59',
              text: ' @dev Block timestamp at which this contract will no longer accept storage rent payments. Changeable by owner.',
            },
            functionSelector: '2c39d670',
            mutability: 'mutable',
            name: 'deprecationTimestamp',
            nameLocation: '5358:20:59',
            scope: 40314,
            stateVariable: true,
            storageLocation: 'default',
            typeDescriptions: {
              typeIdentifier: 't_uint256',
              typeString: 'uint256',
            },
            typeName: {
              id: 39560,
              name: 'uint256',
              nodeType: 'ElementaryTypeName',
              src: '5343:7:59',
              typeDescriptions: {
                typeIdentifier: 't_uint256',
                typeString: 'uint256',
              },
            },
            visibility: 'public',
          },
          {
            id: 39564,
            nodeType: 'VariableDeclaration',
            src: '5519:27:59',
            nodes: [],
            constant: false,
            documentation: {
              id: 39562,
              nodeType: 'StructuredDocumentation',
              src: '5385:129:59',
              text: ' @dev Price per storage unit in USD. Fixed point value with 8 decimals, e.g. 5e8 = $5 USD. Changeable by owner.',
            },
            functionSelector: '40df0ba0',
            mutability: 'mutable',
            name: 'usdUnitPrice',
            nameLocation: '5534:12:59',
            scope: 40314,
            stateVariable: true,
            storageLocation: 'default',
            typeDescriptions: {
              typeIdentifier: 't_uint256',
              typeString: 'uint256',
            },
            typeName: {
              id: 39563,
              name: 'uint256',
              nodeType: 'ElementaryTypeName',
              src: '5519:7:59',
              typeDescriptions: {
                typeIdentifier: 't_uint256',
                typeString: 'uint256',
              },
            },
            visibility: 'public',
          },
          {
            id: 39567,
            nodeType: 'VariableDeclaration',
            src: '5635:23:59',
            nodes: [],
            constant: false,
            documentation: {
              id: 39565,
              nodeType: 'StructuredDocumentation',
              src: '5553:77:59',
              text: ' @dev Total capacity of storage units. Changeable by owner.',
            },
            functionSelector: '06517a29',
            mutability: 'mutable',
            name: 'maxUnits',
            nameLocation: '5650:8:59',
            scope: 40314,
            stateVariable: true,
            storageLocation: 'default',
            typeDescriptions: {
              typeIdentifier: 't_uint256',
              typeString: 'uint256',
            },
            typeName: {
              id: 39566,
              name: 'uint256',
              nodeType: 'ElementaryTypeName',
              src: '5635:7:59',
              typeDescriptions: {
                typeIdentifier: 't_uint256',
                typeString: 'uint256',
              },
            },
            visibility: 'public',
          },
          {
            id: 39570,
            nodeType: 'VariableDeclaration',
            src: '5760:37:59',
            nodes: [],
            constant: false,
            documentation: {
              id: 39568,
              nodeType: 'StructuredDocumentation',
              src: '5665:90:59',
              text: ' @dev Duration to cache ethUsdPrice before updating from the price feed.',
            },
            functionSelector: 'c2e46fe0',
            mutability: 'mutable',
            name: 'priceFeedCacheDuration',
            nameLocation: '5775:22:59',
            scope: 40314,
            stateVariable: true,
            storageLocation: 'default',
            typeDescriptions: {
              typeIdentifier: 't_uint256',
              typeString: 'uint256',
            },
            typeName: {
              id: 39569,
              name: 'uint256',
              nodeType: 'ElementaryTypeName',
              src: '5760:7:59',
              typeDescriptions: {
                typeIdentifier: 't_uint256',
                typeString: 'uint256',
              },
            },
            visibility: 'public',
          },
          {
            id: 39573,
            nodeType: 'VariableDeclaration',
            src: '5986:36:59',
            nodes: [],
            constant: false,
            documentation: {
              id: 39571,
              nodeType: 'StructuredDocumentation',
              src: '5804:177:59',
              text: ' @dev Period in seconds to wait after the L2 sequencer restarts before resuming rentals.\n      See: https://docs.chain.link/data-feeds/l2-sequencer-feeds',
            },
            functionSelector: '7078cc1c',
            mutability: 'mutable',
            name: 'uptimeFeedGracePeriod',
            nameLocation: '6001:21:59',
            scope: 40314,
            stateVariable: true,
            storageLocation: 'default',
            typeDescriptions: {
              typeIdentifier: 't_uint256',
              typeString: 'uint256',
            },
            typeName: {
              id: 39572,
              name: 'uint256',
              nodeType: 'ElementaryTypeName',
              src: '5986:7:59',
              typeDescriptions: {
                typeIdentifier: 't_uint256',
                typeString: 'uint256',
              },
            },
            visibility: 'public',
          },
          {
            id: 39576,
            nodeType: 'VariableDeclaration',
            src: '6289:26:59',
            nodes: [],
            constant: false,
            documentation: {
              id: 39574,
              nodeType: 'StructuredDocumentation',
              src: '6208:76:59',
              text: ' @dev Total number of storage units that have been rented.',
            },
            functionSelector: '2751c4fd',
            mutability: 'mutable',
            name: 'rentedUnits',
            nameLocation: '6304:11:59',
            scope: 40314,
            stateVariable: true,
            storageLocation: 'default',
            typeDescriptions: {
              typeIdentifier: 't_uint256',
              typeString: 'uint256',
            },
            typeName: {
              id: 39575,
              name: 'uint256',
              nodeType: 'ElementaryTypeName',
              src: '6289:7:59',
              typeDescriptions: {
                typeIdentifier: 't_uint256',
                typeString: 'uint256',
              },
            },
            visibility: 'public',
          },
          {
            id: 39579,
            nodeType: 'VariableDeclaration',
            src: '6382:26:59',
            nodes: [],
            constant: false,
            documentation: {
              id: 39577,
              nodeType: 'StructuredDocumentation',
              src: '6322:55:59',
              text: ' @dev Cached Chainlink ETH/USD price.',
            },
            functionSelector: '9478ab8c',
            mutability: 'mutable',
            name: 'ethUsdPrice',
            nameLocation: '6397:11:59',
            scope: 40314,
            stateVariable: true,
            storageLocation: 'default',
            typeDescriptions: {
              typeIdentifier: 't_uint256',
              typeString: 'uint256',
            },
            typeName: {
              id: 39578,
              name: 'uint256',
              nodeType: 'ElementaryTypeName',
              src: '6382:7:59',
              typeDescriptions: {
                typeIdentifier: 't_uint256',
                typeString: 'uint256',
              },
            },
            visibility: 'public',
          },
          {
            id: 39582,
            nodeType: 'VariableDeclaration',
            src: '6488:34:59',
            nodes: [],
            constant: false,
            documentation: {
              id: 39580,
              nodeType: 'StructuredDocumentation',
              src: '6415:68:59',
              text: ' @dev Timestamp of the last update to ethUsdPrice.',
            },
            functionSelector: '128d34ac',
            mutability: 'mutable',
            name: 'lastPriceFeedUpdate',
            nameLocation: '6503:19:59',
            scope: 40314,
            stateVariable: true,
            storageLocation: 'default',
            typeDescriptions: {
              typeIdentifier: 't_uint256',
              typeString: 'uint256',
            },
            typeName: {
              id: 39581,
              name: 'uint256',
              nodeType: 'ElementaryTypeName',
              src: '6488:7:59',
              typeDescriptions: {
                typeIdentifier: 't_uint256',
                typeString: 'uint256',
              },
            },
            visibility: 'public',
          },
          {
            id: 39639,
            nodeType: 'FunctionDefinition',
            src: '7416:713:59',
            nodes: [],
            body: {
              id: 39638,
              nodeType: 'Block',
              src: '7744:385:59',
              nodes: [],
              statements: [
                {
                  expression: {
                    id: 39606,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    lValueRequested: false,
                    leftHandSide: {
                      id: 39604,
                      name: 'priceFeed',
                      nodeType: 'Identifier',
                      overloadedDeclarations: [],
                      referencedDeclaration: 39554,
                      src: '7754:9:59',
                      typeDescriptions: {
                        typeIdentifier: 't_contract$_AggregatorV3Interface_$45',
                        typeString: 'contract AggregatorV3Interface',
                      },
                    },
                    nodeType: 'Assignment',
                    operator: '=',
                    rightHandSide: {
                      id: 39605,
                      name: '_priceFeed',
                      nodeType: 'Identifier',
                      overloadedDeclarations: [],
                      referencedDeclaration: 39586,
                      src: '7766:10:59',
                      typeDescriptions: {
                        typeIdentifier: 't_contract$_AggregatorV3Interface_$45',
                        typeString: 'contract AggregatorV3Interface',
                      },
                    },
                    src: '7754:22:59',
                    typeDescriptions: {
                      typeIdentifier: 't_contract$_AggregatorV3Interface_$45',
                      typeString: 'contract AggregatorV3Interface',
                    },
                  },
                  id: 39607,
                  nodeType: 'ExpressionStatement',
                  src: '7754:22:59',
                },
                {
                  expression: {
                    id: 39610,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    lValueRequested: false,
                    leftHandSide: {
                      id: 39608,
                      name: 'uptimeFeed',
                      nodeType: 'Identifier',
                      overloadedDeclarations: [],
                      referencedDeclaration: 39558,
                      src: '7786:10:59',
                      typeDescriptions: {
                        typeIdentifier: 't_contract$_AggregatorV3Interface_$45',
                        typeString: 'contract AggregatorV3Interface',
                      },
                    },
                    nodeType: 'Assignment',
                    operator: '=',
                    rightHandSide: {
                      id: 39609,
                      name: '_uptimeFeed',
                      nodeType: 'Identifier',
                      overloadedDeclarations: [],
                      referencedDeclaration: 39589,
                      src: '7799:11:59',
                      typeDescriptions: {
                        typeIdentifier: 't_contract$_AggregatorV3Interface_$45',
                        typeString: 'contract AggregatorV3Interface',
                      },
                    },
                    src: '7786:24:59',
                    typeDescriptions: {
                      typeIdentifier: 't_contract$_AggregatorV3Interface_$45',
                      typeString: 'contract AggregatorV3Interface',
                    },
                  },
                  id: 39611,
                  nodeType: 'ExpressionStatement',
                  src: '7786:24:59',
                },
                {
                  expression: {
                    id: 39617,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    lValueRequested: false,
                    leftHandSide: {
                      id: 39612,
                      name: 'deprecationTimestamp',
                      nodeType: 'Identifier',
                      overloadedDeclarations: [],
                      referencedDeclaration: 39561,
                      src: '7820:20:59',
                      typeDescriptions: {
                        typeIdentifier: 't_uint256',
                        typeString: 'uint256',
                      },
                    },
                    nodeType: 'Assignment',
                    operator: '=',
                    rightHandSide: {
                      commonType: {
                        typeIdentifier: 't_uint256',
                        typeString: 'uint256',
                      },
                      id: 39616,
                      isConstant: false,
                      isLValue: false,
                      isPure: false,
                      lValueRequested: false,
                      leftExpression: {
                        expression: {
                          id: 39613,
                          name: 'block',
                          nodeType: 'Identifier',
                          overloadedDeclarations: [],
                          referencedDeclaration: -4,
                          src: '7843:5:59',
                          typeDescriptions: {
                            typeIdentifier: 't_magic_block',
                            typeString: 'block',
                          },
                        },
                        id: 39614,
                        isConstant: false,
                        isLValue: false,
                        isPure: false,
                        lValueRequested: false,
                        memberLocation: '7849:9:59',
                        memberName: 'timestamp',
                        nodeType: 'MemberAccess',
                        src: '7843:15:59',
                        typeDescriptions: {
                          typeIdentifier: 't_uint256',
                          typeString: 'uint256',
                        },
                      },
                      nodeType: 'BinaryOperation',
                      operator: '+',
                      rightExpression: {
                        id: 39615,
                        name: '_initialDeprecationPeriod',
                        nodeType: 'Identifier',
                        overloadedDeclarations: [],
                        referencedDeclaration: 39591,
                        src: '7861:25:59',
                        typeDescriptions: {
                          typeIdentifier: 't_uint256',
                          typeString: 'uint256',
                        },
                      },
                      src: '7843:43:59',
                      typeDescriptions: {
                        typeIdentifier: 't_uint256',
                        typeString: 'uint256',
                      },
                    },
                    src: '7820:66:59',
                    typeDescriptions: {
                      typeIdentifier: 't_uint256',
                      typeString: 'uint256',
                    },
                  },
                  id: 39618,
                  nodeType: 'ExpressionStatement',
                  src: '7820:66:59',
                },
                {
                  expression: {
                    id: 39621,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    lValueRequested: false,
                    leftHandSide: {
                      id: 39619,
                      name: 'usdUnitPrice',
                      nodeType: 'Identifier',
                      overloadedDeclarations: [],
                      referencedDeclaration: 39564,
                      src: '7896:12:59',
                      typeDescriptions: {
                        typeIdentifier: 't_uint256',
                        typeString: 'uint256',
                      },
                    },
                    nodeType: 'Assignment',
                    operator: '=',
                    rightHandSide: {
                      id: 39620,
                      name: '_initialUsdUnitPrice',
                      nodeType: 'Identifier',
                      overloadedDeclarations: [],
                      referencedDeclaration: 39593,
                      src: '7911:20:59',
                      typeDescriptions: {
                        typeIdentifier: 't_uint256',
                        typeString: 'uint256',
                      },
                    },
                    src: '7896:35:59',
                    typeDescriptions: {
                      typeIdentifier: 't_uint256',
                      typeString: 'uint256',
                    },
                  },
                  id: 39622,
                  nodeType: 'ExpressionStatement',
                  src: '7896:35:59',
                },
                {
                  expression: {
                    id: 39625,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    lValueRequested: false,
                    leftHandSide: {
                      id: 39623,
                      name: 'maxUnits',
                      nodeType: 'Identifier',
                      overloadedDeclarations: [],
                      referencedDeclaration: 39567,
                      src: '7941:8:59',
                      typeDescriptions: {
                        typeIdentifier: 't_uint256',
                        typeString: 'uint256',
                      },
                    },
                    nodeType: 'Assignment',
                    operator: '=',
                    rightHandSide: {
                      id: 39624,
                      name: '_initialMaxUnits',
                      nodeType: 'Identifier',
                      overloadedDeclarations: [],
                      referencedDeclaration: 39595,
                      src: '7952:16:59',
                      typeDescriptions: {
                        typeIdentifier: 't_uint256',
                        typeString: 'uint256',
                      },
                    },
                    src: '7941:27:59',
                    typeDescriptions: {
                      typeIdentifier: 't_uint256',
                      typeString: 'uint256',
                    },
                  },
                  id: 39626,
                  nodeType: 'ExpressionStatement',
                  src: '7941:27:59',
                },
                {
                  expression: {
                    id: 39629,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    lValueRequested: false,
                    leftHandSide: {
                      id: 39627,
                      name: 'priceFeedCacheDuration',
                      nodeType: 'Identifier',
                      overloadedDeclarations: [],
                      referencedDeclaration: 39570,
                      src: '7978:22:59',
                      typeDescriptions: {
                        typeIdentifier: 't_uint256',
                        typeString: 'uint256',
                      },
                    },
                    nodeType: 'Assignment',
                    operator: '=',
                    rightHandSide: {
                      id: 39628,
                      name: '_initialPriceFeedCacheDuration',
                      nodeType: 'Identifier',
                      overloadedDeclarations: [],
                      referencedDeclaration: 39597,
                      src: '8003:30:59',
                      typeDescriptions: {
                        typeIdentifier: 't_uint256',
                        typeString: 'uint256',
                      },
                    },
                    src: '7978:55:59',
                    typeDescriptions: {
                      typeIdentifier: 't_uint256',
                      typeString: 'uint256',
                    },
                  },
                  id: 39630,
                  nodeType: 'ExpressionStatement',
                  src: '7978:55:59',
                },
                {
                  expression: {
                    id: 39633,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    lValueRequested: false,
                    leftHandSide: {
                      id: 39631,
                      name: 'uptimeFeedGracePeriod',
                      nodeType: 'Identifier',
                      overloadedDeclarations: [],
                      referencedDeclaration: 39573,
                      src: '8043:21:59',
                      typeDescriptions: {
                        typeIdentifier: 't_uint256',
                        typeString: 'uint256',
                      },
                    },
                    nodeType: 'Assignment',
                    operator: '=',
                    rightHandSide: {
                      id: 39632,
                      name: '_initialUptimeFeedGracePeriod',
                      nodeType: 'Identifier',
                      overloadedDeclarations: [],
                      referencedDeclaration: 39599,
                      src: '8067:29:59',
                      typeDescriptions: {
                        typeIdentifier: 't_uint256',
                        typeString: 'uint256',
                      },
                    },
                    src: '8043:53:59',
                    typeDescriptions: {
                      typeIdentifier: 't_uint256',
                      typeString: 'uint256',
                    },
                  },
                  id: 39634,
                  nodeType: 'ExpressionStatement',
                  src: '8043:53:59',
                },
                {
                  expression: {
                    arguments: [],
                    expression: {
                      argumentTypes: [],
                      id: 39635,
                      name: '_refreshPrice',
                      nodeType: 'Identifier',
                      overloadedDeclarations: [],
                      referencedDeclaration: 40029,
                      src: '8107:13:59',
                      typeDescriptions: {
                        typeIdentifier: 't_function_internal_nonpayable$__$returns$_t_uint256_$_t_uint256_$',
                        typeString: 'function () returns (uint256,uint256)',
                      },
                    },
                    id: 39636,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    kind: 'functionCall',
                    lValueRequested: false,
                    nameLocations: [],
                    names: [],
                    nodeType: 'FunctionCall',
                    src: '8107:15:59',
                    tryCall: false,
                    typeDescriptions: {
                      typeIdentifier: 't_tuple$_t_uint256_$_t_uint256_$',
                      typeString: 'tuple(uint256,uint256)',
                    },
                  },
                  id: 39637,
                  nodeType: 'ExpressionStatement',
                  src: '8107:15:59',
                },
              ],
            },
            documentation: {
              id: 39583,
              nodeType: 'StructuredDocumentation',
              src: '6711:700:59',
              text: ' @notice Set the price feed, uptime feed, and initial parameters.\n @param _priceFeed                     Chainlink ETH/USD price feed.\n @param _uptimeFeed                    Chainlink L2 sequencer uptime feed.\n @param _initialDeprecationPeriod      Initial deprecation period in seconds.\n @param _initialUsdUnitPrice           Initial unit price in USD. Fixed point value with 8 decimals.\n @param _initialMaxUnits               Initial maximum capacity in storage units.\n @param _initialPriceFeedCacheDuration Initial duration to cache ETH/USD price.\n @param _initialUptimeFeedGracePeriod  Initial L2 sequencer downtime grace period.',
            },
            implemented: true,
            kind: 'constructor',
            modifiers: [
              {
                arguments: [],
                id: 39602,
                kind: 'baseConstructorSpecifier',
                modifierName: {
                  id: 39601,
                  name: 'Ownable2Step',
                  nameLocations: ['7729:12:59'],
                  nodeType: 'IdentifierPath',
                  referencedDeclaration: 33420,
                  src: '7729:12:59',
                },
                nodeType: 'ModifierInvocation',
                src: '7729:14:59',
              },
            ],
            name: '',
            nameLocation: '-1:-1:-1',
            parameters: {
              id: 39600,
              nodeType: 'ParameterList',
              parameters: [
                {
                  constant: false,
                  id: 39586,
                  mutability: 'mutable',
                  name: '_priceFeed',
                  nameLocation: '7459:10:59',
                  nodeType: 'VariableDeclaration',
                  scope: 39639,
                  src: '7437:32:59',
                  stateVariable: false,
                  storageLocation: 'default',
                  typeDescriptions: {
                    typeIdentifier: 't_contract$_AggregatorV3Interface_$45',
                    typeString: 'contract AggregatorV3Interface',
                  },
                  typeName: {
                    id: 39585,
                    nodeType: 'UserDefinedTypeName',
                    pathNode: {
                      id: 39584,
                      name: 'AggregatorV3Interface',
                      nameLocations: ['7437:21:59'],
                      nodeType: 'IdentifierPath',
                      referencedDeclaration: 45,
                      src: '7437:21:59',
                    },
                    referencedDeclaration: 45,
                    src: '7437:21:59',
                    typeDescriptions: {
                      typeIdentifier: 't_contract$_AggregatorV3Interface_$45',
                      typeString: 'contract AggregatorV3Interface',
                    },
                  },
                  visibility: 'internal',
                },
                {
                  constant: false,
                  id: 39589,
                  mutability: 'mutable',
                  name: '_uptimeFeed',
                  nameLocation: '7501:11:59',
                  nodeType: 'VariableDeclaration',
                  scope: 39639,
                  src: '7479:33:59',
                  stateVariable: false,
                  storageLocation: 'default',
                  typeDescriptions: {
                    typeIdentifier: 't_contract$_AggregatorV3Interface_$45',
                    typeString: 'contract AggregatorV3Interface',
                  },
                  typeName: {
                    id: 39588,
                    nodeType: 'UserDefinedTypeName',
                    pathNode: {
                      id: 39587,
                      name: 'AggregatorV3Interface',
                      nameLocations: ['7479:21:59'],
                      nodeType: 'IdentifierPath',
                      referencedDeclaration: 45,
                      src: '7479:21:59',
                    },
                    referencedDeclaration: 45,
                    src: '7479:21:59',
                    typeDescriptions: {
                      typeIdentifier: 't_contract$_AggregatorV3Interface_$45',
                      typeString: 'contract AggregatorV3Interface',
                    },
                  },
                  visibility: 'internal',
                },
                {
                  constant: false,
                  id: 39591,
                  mutability: 'mutable',
                  name: '_initialDeprecationPeriod',
                  nameLocation: '7530:25:59',
                  nodeType: 'VariableDeclaration',
                  scope: 39639,
                  src: '7522:33:59',
                  stateVariable: false,
                  storageLocation: 'default',
                  typeDescriptions: {
                    typeIdentifier: 't_uint256',
                    typeString: 'uint256',
                  },
                  typeName: {
                    id: 39590,
                    name: 'uint256',
                    nodeType: 'ElementaryTypeName',
                    src: '7522:7:59',
                    typeDescriptions: {
                      typeIdentifier: 't_uint256',
                      typeString: 'uint256',
                    },
                  },
                  visibility: 'internal',
                },
                {
                  constant: false,
                  id: 39593,
                  mutability: 'mutable',
                  name: '_initialUsdUnitPrice',
                  nameLocation: '7573:20:59',
                  nodeType: 'VariableDeclaration',
                  scope: 39639,
                  src: '7565:28:59',
                  stateVariable: false,
                  storageLocation: 'default',
                  typeDescriptions: {
                    typeIdentifier: 't_uint256',
                    typeString: 'uint256',
                  },
                  typeName: {
                    id: 39592,
                    name: 'uint256',
                    nodeType: 'ElementaryTypeName',
                    src: '7565:7:59',
                    typeDescriptions: {
                      typeIdentifier: 't_uint256',
                      typeString: 'uint256',
                    },
                  },
                  visibility: 'internal',
                },
                {
                  constant: false,
                  id: 39595,
                  mutability: 'mutable',
                  name: '_initialMaxUnits',
                  nameLocation: '7611:16:59',
                  nodeType: 'VariableDeclaration',
                  scope: 39639,
                  src: '7603:24:59',
                  stateVariable: false,
                  storageLocation: 'default',
                  typeDescriptions: {
                    typeIdentifier: 't_uint256',
                    typeString: 'uint256',
                  },
                  typeName: {
                    id: 39594,
                    name: 'uint256',
                    nodeType: 'ElementaryTypeName',
                    src: '7603:7:59',
                    typeDescriptions: {
                      typeIdentifier: 't_uint256',
                      typeString: 'uint256',
                    },
                  },
                  visibility: 'internal',
                },
                {
                  constant: false,
                  id: 39597,
                  mutability: 'mutable',
                  name: '_initialPriceFeedCacheDuration',
                  nameLocation: '7645:30:59',
                  nodeType: 'VariableDeclaration',
                  scope: 39639,
                  src: '7637:38:59',
                  stateVariable: false,
                  storageLocation: 'default',
                  typeDescriptions: {
                    typeIdentifier: 't_uint256',
                    typeString: 'uint256',
                  },
                  typeName: {
                    id: 39596,
                    name: 'uint256',
                    nodeType: 'ElementaryTypeName',
                    src: '7637:7:59',
                    typeDescriptions: {
                      typeIdentifier: 't_uint256',
                      typeString: 'uint256',
                    },
                  },
                  visibility: 'internal',
                },
                {
                  constant: false,
                  id: 39599,
                  mutability: 'mutable',
                  name: '_initialUptimeFeedGracePeriod',
                  nameLocation: '7693:29:59',
                  nodeType: 'VariableDeclaration',
                  scope: 39639,
                  src: '7685:37:59',
                  stateVariable: false,
                  storageLocation: 'default',
                  typeDescriptions: {
                    typeIdentifier: 't_uint256',
                    typeString: 'uint256',
                  },
                  typeName: {
                    id: 39598,
                    name: 'uint256',
                    nodeType: 'ElementaryTypeName',
                    src: '7685:7:59',
                    typeDescriptions: {
                      typeIdentifier: 't_uint256',
                      typeString: 'uint256',
                    },
                  },
                  visibility: 'internal',
                },
              ],
              src: '7427:301:59',
            },
            returnParameters: {
              id: 39603,
              nodeType: 'ParameterList',
              parameters: [],
              src: '7744:0:59',
            },
            scope: 40314,
            stateMutability: 'nonpayable',
            virtual: false,
            visibility: 'public',
          },
          {
            id: 39651,
            nodeType: 'ModifierDefinition',
            src: '8315:129:59',
            nodes: [],
            body: {
              id: 39650,
              nodeType: 'Block',
              src: '8344:100:59',
              nodes: [],
              statements: [
                {
                  condition: {
                    commonType: {
                      typeIdentifier: 't_uint256',
                      typeString: 'uint256',
                    },
                    id: 39644,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    lValueRequested: false,
                    leftExpression: {
                      expression: {
                        id: 39641,
                        name: 'block',
                        nodeType: 'Identifier',
                        overloadedDeclarations: [],
                        referencedDeclaration: -4,
                        src: '8358:5:59',
                        typeDescriptions: {
                          typeIdentifier: 't_magic_block',
                          typeString: 'block',
                        },
                      },
                      id: 39642,
                      isConstant: false,
                      isLValue: false,
                      isPure: false,
                      lValueRequested: false,
                      memberLocation: '8364:9:59',
                      memberName: 'timestamp',
                      nodeType: 'MemberAccess',
                      src: '8358:15:59',
                      typeDescriptions: {
                        typeIdentifier: 't_uint256',
                        typeString: 'uint256',
                      },
                    },
                    nodeType: 'BinaryOperation',
                    operator: '>=',
                    rightExpression: {
                      id: 39643,
                      name: 'deprecationTimestamp',
                      nodeType: 'Identifier',
                      overloadedDeclarations: [],
                      referencedDeclaration: 39561,
                      src: '8377:20:59',
                      typeDescriptions: {
                        typeIdentifier: 't_uint256',
                        typeString: 'uint256',
                      },
                    },
                    src: '8358:39:59',
                    typeDescriptions: {
                      typeIdentifier: 't_bool',
                      typeString: 'bool',
                    },
                  },
                  id: 39648,
                  nodeType: 'IfStatement',
                  src: '8354:72:59',
                  trueBody: {
                    errorCall: {
                      arguments: [],
                      expression: {
                        argumentTypes: [],
                        id: 39645,
                        name: 'ContractDeprecated',
                        nodeType: 'Identifier',
                        overloadedDeclarations: [],
                        referencedDeclaration: 39459,
                        src: '8406:18:59',
                        typeDescriptions: {
                          typeIdentifier: 't_function_error_pure$__$returns$__$',
                          typeString: 'function () pure',
                        },
                      },
                      id: 39646,
                      isConstant: false,
                      isLValue: false,
                      isPure: false,
                      kind: 'functionCall',
                      lValueRequested: false,
                      nameLocations: [],
                      names: [],
                      nodeType: 'FunctionCall',
                      src: '8406:20:59',
                      tryCall: false,
                      typeDescriptions: {
                        typeIdentifier: 't_tuple$__$',
                        typeString: 'tuple()',
                      },
                    },
                    id: 39647,
                    nodeType: 'RevertStatement',
                    src: '8399:27:59',
                  },
                },
                {
                  id: 39649,
                  nodeType: 'PlaceholderStatement',
                  src: '8436:1:59',
                },
              ],
            },
            name: 'whenNotDeprecated',
            nameLocation: '8324:17:59',
            parameters: {
              id: 39640,
              nodeType: 'ParameterList',
              parameters: [],
              src: '8341:2:59',
            },
            virtual: false,
            visibility: 'internal',
          },
          {
            id: 39731,
            nodeType: 'FunctionDefinition',
            src: '8874:568:59',
            nodes: [],
            body: {
              id: 39730,
              nodeType: 'Block',
              src: '8951:491:59',
              nodes: [],
              statements: [
                {
                  assignments: [39662],
                  declarations: [
                    {
                      constant: false,
                      id: 39662,
                      mutability: 'mutable',
                      name: 'totalPrice',
                      nameLocation: '8969:10:59',
                      nodeType: 'VariableDeclaration',
                      scope: 39730,
                      src: '8961:18:59',
                      stateVariable: false,
                      storageLocation: 'default',
                      typeDescriptions: {
                        typeIdentifier: 't_uint256',
                        typeString: 'uint256',
                      },
                      typeName: {
                        id: 39661,
                        name: 'uint256',
                        nodeType: 'ElementaryTypeName',
                        src: '8961:7:59',
                        typeDescriptions: {
                          typeIdentifier: 't_uint256',
                          typeString: 'uint256',
                        },
                      },
                      visibility: 'internal',
                    },
                  ],
                  id: 39666,
                  initialValue: {
                    arguments: [
                      {
                        id: 39664,
                        name: 'units',
                        nodeType: 'Identifier',
                        overloadedDeclarations: [],
                        referencedDeclaration: 39656,
                        src: '8989:5:59',
                        typeDescriptions: {
                          typeIdentifier: 't_uint256',
                          typeString: 'uint256',
                        },
                      },
                    ],
                    expression: {
                      argumentTypes: [
                        {
                          typeIdentifier: 't_uint256',
                          typeString: 'uint256',
                        },
                      ],
                      id: 39663,
                      name: '_price',
                      nodeType: 'Identifier',
                      overloadedDeclarations: [40044, 40065],
                      referencedDeclaration: 40044,
                      src: '8982:6:59',
                      typeDescriptions: {
                        typeIdentifier: 't_function_internal_nonpayable$_t_uint256_$returns$_t_uint256_$',
                        typeString: 'function (uint256) returns (uint256)',
                      },
                    },
                    id: 39665,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    kind: 'functionCall',
                    lValueRequested: false,
                    nameLocations: [],
                    names: [],
                    nodeType: 'FunctionCall',
                    src: '8982:13:59',
                    tryCall: false,
                    typeDescriptions: {
                      typeIdentifier: 't_uint256',
                      typeString: 'uint256',
                    },
                  },
                  nodeType: 'VariableDeclarationStatement',
                  src: '8961:34:59',
                },
                {
                  condition: {
                    commonType: {
                      typeIdentifier: 't_uint256',
                      typeString: 'uint256',
                    },
                    id: 39669,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    lValueRequested: false,
                    leftExpression: {
                      id: 39667,
                      name: 'units',
                      nodeType: 'Identifier',
                      overloadedDeclarations: [],
                      referencedDeclaration: 39656,
                      src: '9009:5:59',
                      typeDescriptions: {
                        typeIdentifier: 't_uint256',
                        typeString: 'uint256',
                      },
                    },
                    nodeType: 'BinaryOperation',
                    operator: '==',
                    rightExpression: {
                      hexValue: '30',
                      id: 39668,
                      isConstant: false,
                      isLValue: false,
                      isPure: true,
                      kind: 'number',
                      lValueRequested: false,
                      nodeType: 'Literal',
                      src: '9018:1:59',
                      typeDescriptions: {
                        typeIdentifier: 't_rational_0_by_1',
                        typeString: 'int_const 0',
                      },
                      value: '0',
                    },
                    src: '9009:10:59',
                    typeDescriptions: {
                      typeIdentifier: 't_bool',
                      typeString: 'bool',
                    },
                  },
                  id: 39673,
                  nodeType: 'IfStatement',
                  src: '9005:38:59',
                  trueBody: {
                    errorCall: {
                      arguments: [],
                      expression: {
                        argumentTypes: [],
                        id: 39670,
                        name: 'InvalidAmount',
                        nodeType: 'Identifier',
                        overloadedDeclarations: [],
                        referencedDeclaration: 39465,
                        src: '9028:13:59',
                        typeDescriptions: {
                          typeIdentifier: 't_function_error_pure$__$returns$__$',
                          typeString: 'function () pure',
                        },
                      },
                      id: 39671,
                      isConstant: false,
                      isLValue: false,
                      isPure: false,
                      kind: 'functionCall',
                      lValueRequested: false,
                      nameLocations: [],
                      names: [],
                      nodeType: 'FunctionCall',
                      src: '9028:15:59',
                      tryCall: false,
                      typeDescriptions: {
                        typeIdentifier: 't_tuple$__$',
                        typeString: 'tuple()',
                      },
                    },
                    id: 39672,
                    nodeType: 'RevertStatement',
                    src: '9021:22:59',
                  },
                },
                {
                  condition: {
                    commonType: {
                      typeIdentifier: 't_uint256',
                      typeString: 'uint256',
                    },
                    id: 39677,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    lValueRequested: false,
                    leftExpression: {
                      expression: {
                        id: 39674,
                        name: 'msg',
                        nodeType: 'Identifier',
                        overloadedDeclarations: [],
                        referencedDeclaration: -15,
                        src: '9057:3:59',
                        typeDescriptions: {
                          typeIdentifier: 't_magic_message',
                          typeString: 'msg',
                        },
                      },
                      id: 39675,
                      isConstant: false,
                      isLValue: false,
                      isPure: false,
                      lValueRequested: false,
                      memberLocation: '9061:5:59',
                      memberName: 'value',
                      nodeType: 'MemberAccess',
                      src: '9057:9:59',
                      typeDescriptions: {
                        typeIdentifier: 't_uint256',
                        typeString: 'uint256',
                      },
                    },
                    nodeType: 'BinaryOperation',
                    operator: '<',
                    rightExpression: {
                      id: 39676,
                      name: 'totalPrice',
                      nodeType: 'Identifier',
                      overloadedDeclarations: [],
                      referencedDeclaration: 39662,
                      src: '9069:10:59',
                      typeDescriptions: {
                        typeIdentifier: 't_uint256',
                        typeString: 'uint256',
                      },
                    },
                    src: '9057:22:59',
                    typeDescriptions: {
                      typeIdentifier: 't_bool',
                      typeString: 'bool',
                    },
                  },
                  id: 39681,
                  nodeType: 'IfStatement',
                  src: '9053:51:59',
                  trueBody: {
                    errorCall: {
                      arguments: [],
                      expression: {
                        argumentTypes: [],
                        id: 39678,
                        name: 'InvalidPayment',
                        nodeType: 'Identifier',
                        overloadedDeclarations: [],
                        referencedDeclaration: 39471,
                        src: '9088:14:59',
                        typeDescriptions: {
                          typeIdentifier: 't_function_error_pure$__$returns$__$',
                          typeString: 'function () pure',
                        },
                      },
                      id: 39679,
                      isConstant: false,
                      isLValue: false,
                      isPure: false,
                      kind: 'functionCall',
                      lValueRequested: false,
                      nameLocations: [],
                      names: [],
                      nodeType: 'FunctionCall',
                      src: '9088:16:59',
                      tryCall: false,
                      typeDescriptions: {
                        typeIdentifier: 't_tuple$__$',
                        typeString: 'tuple()',
                      },
                    },
                    id: 39680,
                    nodeType: 'RevertStatement',
                    src: '9081:23:59',
                  },
                },
                {
                  condition: {
                    commonType: {
                      typeIdentifier: 't_uint256',
                      typeString: 'uint256',
                    },
                    id: 39686,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    lValueRequested: false,
                    leftExpression: {
                      commonType: {
                        typeIdentifier: 't_uint256',
                        typeString: 'uint256',
                      },
                      id: 39684,
                      isConstant: false,
                      isLValue: false,
                      isPure: false,
                      lValueRequested: false,
                      leftExpression: {
                        id: 39682,
                        name: 'rentedUnits',
                        nodeType: 'Identifier',
                        overloadedDeclarations: [],
                        referencedDeclaration: 39576,
                        src: '9118:11:59',
                        typeDescriptions: {
                          typeIdentifier: 't_uint256',
                          typeString: 'uint256',
                        },
                      },
                      nodeType: 'BinaryOperation',
                      operator: '+',
                      rightExpression: {
                        id: 39683,
                        name: 'units',
                        nodeType: 'Identifier',
                        overloadedDeclarations: [],
                        referencedDeclaration: 39656,
                        src: '9132:5:59',
                        typeDescriptions: {
                          typeIdentifier: 't_uint256',
                          typeString: 'uint256',
                        },
                      },
                      src: '9118:19:59',
                      typeDescriptions: {
                        typeIdentifier: 't_uint256',
                        typeString: 'uint256',
                      },
                    },
                    nodeType: 'BinaryOperation',
                    operator: '>',
                    rightExpression: {
                      id: 39685,
                      name: 'maxUnits',
                      nodeType: 'Identifier',
                      overloadedDeclarations: [],
                      referencedDeclaration: 39567,
                      src: '9140:8:59',
                      typeDescriptions: {
                        typeIdentifier: 't_uint256',
                        typeString: 'uint256',
                      },
                    },
                    src: '9118:30:59',
                    typeDescriptions: {
                      typeIdentifier: 't_bool',
                      typeString: 'bool',
                    },
                  },
                  id: 39690,
                  nodeType: 'IfStatement',
                  src: '9114:60:59',
                  trueBody: {
                    errorCall: {
                      arguments: [],
                      expression: {
                        argumentTypes: [],
                        id: 39687,
                        name: 'ExceedsCapacity',
                        nodeType: 'Identifier',
                        overloadedDeclarations: [],
                        referencedDeclaration: 39462,
                        src: '9157:15:59',
                        typeDescriptions: {
                          typeIdentifier: 't_function_error_pure$__$returns$__$',
                          typeString: 'function () pure',
                        },
                      },
                      id: 39688,
                      isConstant: false,
                      isLValue: false,
                      isPure: false,
                      kind: 'functionCall',
                      lValueRequested: false,
                      nameLocations: [],
                      names: [],
                      nodeType: 'FunctionCall',
                      src: '9157:17:59',
                      tryCall: false,
                      typeDescriptions: {
                        typeIdentifier: 't_tuple$__$',
                        typeString: 'tuple()',
                      },
                    },
                    id: 39689,
                    nodeType: 'RevertStatement',
                    src: '9150:24:59',
                  },
                },
                {
                  expression: {
                    id: 39693,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    lValueRequested: false,
                    leftHandSide: {
                      id: 39691,
                      name: 'rentedUnits',
                      nodeType: 'Identifier',
                      overloadedDeclarations: [],
                      referencedDeclaration: 39576,
                      src: '9185:11:59',
                      typeDescriptions: {
                        typeIdentifier: 't_uint256',
                        typeString: 'uint256',
                      },
                    },
                    nodeType: 'Assignment',
                    operator: '+=',
                    rightHandSide: {
                      id: 39692,
                      name: 'units',
                      nodeType: 'Identifier',
                      overloadedDeclarations: [],
                      referencedDeclaration: 39656,
                      src: '9200:5:59',
                      typeDescriptions: {
                        typeIdentifier: 't_uint256',
                        typeString: 'uint256',
                      },
                    },
                    src: '9185:20:59',
                    typeDescriptions: {
                      typeIdentifier: 't_uint256',
                      typeString: 'uint256',
                    },
                  },
                  id: 39694,
                  nodeType: 'ExpressionStatement',
                  src: '9185:20:59',
                },
                {
                  eventCall: {
                    arguments: [
                      {
                        expression: {
                          id: 39696,
                          name: 'msg',
                          nodeType: 'Identifier',
                          overloadedDeclarations: [],
                          referencedDeclaration: -15,
                          src: '9225:3:59',
                          typeDescriptions: {
                            typeIdentifier: 't_magic_message',
                            typeString: 'msg',
                          },
                        },
                        id: 39697,
                        isConstant: false,
                        isLValue: false,
                        isPure: false,
                        lValueRequested: false,
                        memberLocation: '9229:6:59',
                        memberName: 'sender',
                        nodeType: 'MemberAccess',
                        src: '9225:10:59',
                        typeDescriptions: {
                          typeIdentifier: 't_address',
                          typeString: 'address',
                        },
                      },
                      {
                        id: 39698,
                        name: 'fid',
                        nodeType: 'Identifier',
                        overloadedDeclarations: [],
                        referencedDeclaration: 39654,
                        src: '9237:3:59',
                        typeDescriptions: {
                          typeIdentifier: 't_uint256',
                          typeString: 'uint256',
                        },
                      },
                      {
                        id: 39699,
                        name: 'units',
                        nodeType: 'Identifier',
                        overloadedDeclarations: [],
                        referencedDeclaration: 39656,
                        src: '9242:5:59',
                        typeDescriptions: {
                          typeIdentifier: 't_uint256',
                          typeString: 'uint256',
                        },
                      },
                    ],
                    expression: {
                      argumentTypes: [
                        {
                          typeIdentifier: 't_address',
                          typeString: 'address',
                        },
                        {
                          typeIdentifier: 't_uint256',
                          typeString: 'uint256',
                        },
                        {
                          typeIdentifier: 't_uint256',
                          typeString: 'uint256',
                        },
                      ],
                      id: 39695,
                      name: 'Rent',
                      nodeType: 'Identifier',
                      overloadedDeclarations: [],
                      referencedDeclaration: 39504,
                      src: '9220:4:59',
                      typeDescriptions: {
                        typeIdentifier: 't_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$',
                        typeString: 'function (address,uint256,uint256)',
                      },
                    },
                    id: 39700,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    kind: 'functionCall',
                    lValueRequested: false,
                    nameLocations: [],
                    names: [],
                    nodeType: 'FunctionCall',
                    src: '9220:28:59',
                    tryCall: false,
                    typeDescriptions: {
                      typeIdentifier: 't_tuple$__$',
                      typeString: 'tuple()',
                    },
                  },
                  id: 39701,
                  nodeType: 'EmitStatement',
                  src: '9215:33:59',
                },
                {
                  condition: {
                    commonType: {
                      typeIdentifier: 't_uint256',
                      typeString: 'uint256',
                    },
                    id: 39705,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    lValueRequested: false,
                    leftExpression: {
                      expression: {
                        id: 39702,
                        name: 'msg',
                        nodeType: 'Identifier',
                        overloadedDeclarations: [],
                        referencedDeclaration: -15,
                        src: '9263:3:59',
                        typeDescriptions: {
                          typeIdentifier: 't_magic_message',
                          typeString: 'msg',
                        },
                      },
                      id: 39703,
                      isConstant: false,
                      isLValue: false,
                      isPure: false,
                      lValueRequested: false,
                      memberLocation: '9267:5:59',
                      memberName: 'value',
                      nodeType: 'MemberAccess',
                      src: '9263:9:59',
                      typeDescriptions: {
                        typeIdentifier: 't_uint256',
                        typeString: 'uint256',
                      },
                    },
                    nodeType: 'BinaryOperation',
                    operator: '>',
                    rightExpression: {
                      id: 39704,
                      name: 'totalPrice',
                      nodeType: 'Identifier',
                      overloadedDeclarations: [],
                      referencedDeclaration: 39662,
                      src: '9275:10:59',
                      typeDescriptions: {
                        typeIdentifier: 't_uint256',
                        typeString: 'uint256',
                      },
                    },
                    src: '9263:22:59',
                    typeDescriptions: {
                      typeIdentifier: 't_bool',
                      typeString: 'bool',
                    },
                  },
                  id: 39729,
                  nodeType: 'IfStatement',
                  src: '9259:177:59',
                  trueBody: {
                    id: 39728,
                    nodeType: 'Block',
                    src: '9287:149:59',
                    statements: [
                      {
                        assignments: [39707, null],
                        declarations: [
                          {
                            constant: false,
                            id: 39707,
                            mutability: 'mutable',
                            name: 'success',
                            nameLocation: '9307:7:59',
                            nodeType: 'VariableDeclaration',
                            scope: 39728,
                            src: '9302:12:59',
                            stateVariable: false,
                            storageLocation: 'default',
                            typeDescriptions: {
                              typeIdentifier: 't_bool',
                              typeString: 'bool',
                            },
                            typeName: {
                              id: 39706,
                              name: 'bool',
                              nodeType: 'ElementaryTypeName',
                              src: '9302:4:59',
                              typeDescriptions: {
                                typeIdentifier: 't_bool',
                                typeString: 'bool',
                              },
                            },
                            visibility: 'internal',
                          },
                          null,
                        ],
                        id: 39721,
                        initialValue: {
                          arguments: [
                            {
                              hexValue: '',
                              id: 39719,
                              isConstant: false,
                              isLValue: false,
                              isPure: true,
                              kind: 'string',
                              lValueRequested: false,
                              nodeType: 'Literal',
                              src: '9375:2:59',
                              typeDescriptions: {
                                typeIdentifier:
                                  't_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470',
                                typeString: 'literal_string ""',
                              },
                              value: '',
                            },
                          ],
                          expression: {
                            argumentTypes: [
                              {
                                typeIdentifier:
                                  't_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470',
                                typeString: 'literal_string ""',
                              },
                            ],
                            expression: {
                              argumentTypes: [
                                {
                                  typeIdentifier:
                                    't_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470',
                                  typeString: 'literal_string ""',
                                },
                              ],
                              expression: {
                                arguments: [
                                  {
                                    expression: {
                                      id: 39710,
                                      name: 'msg',
                                      nodeType: 'Identifier',
                                      overloadedDeclarations: [],
                                      referencedDeclaration: -15,
                                      src: '9327:3:59',
                                      typeDescriptions: {
                                        typeIdentifier: 't_magic_message',
                                        typeString: 'msg',
                                      },
                                    },
                                    id: 39711,
                                    isConstant: false,
                                    isLValue: false,
                                    isPure: false,
                                    lValueRequested: false,
                                    memberLocation: '9331:6:59',
                                    memberName: 'sender',
                                    nodeType: 'MemberAccess',
                                    src: '9327:10:59',
                                    typeDescriptions: {
                                      typeIdentifier: 't_address',
                                      typeString: 'address',
                                    },
                                  },
                                ],
                                expression: {
                                  argumentTypes: [
                                    {
                                      typeIdentifier: 't_address',
                                      typeString: 'address',
                                    },
                                  ],
                                  id: 39709,
                                  isConstant: false,
                                  isLValue: false,
                                  isPure: true,
                                  lValueRequested: false,
                                  nodeType: 'ElementaryTypeNameExpression',
                                  src: '9319:8:59',
                                  typeDescriptions: {
                                    typeIdentifier: 't_type$_t_address_payable_$',
                                    typeString: 'type(address payable)',
                                  },
                                  typeName: {
                                    id: 39708,
                                    name: 'address',
                                    nodeType: 'ElementaryTypeName',
                                    src: '9319:8:59',
                                    stateMutability: 'payable',
                                    typeDescriptions: {},
                                  },
                                },
                                id: 39712,
                                isConstant: false,
                                isLValue: false,
                                isPure: false,
                                kind: 'typeConversion',
                                lValueRequested: false,
                                nameLocations: [],
                                names: [],
                                nodeType: 'FunctionCall',
                                src: '9319:19:59',
                                tryCall: false,
                                typeDescriptions: {
                                  typeIdentifier: 't_address_payable',
                                  typeString: 'address payable',
                                },
                              },
                              id: 39713,
                              isConstant: false,
                              isLValue: false,
                              isPure: false,
                              lValueRequested: false,
                              memberLocation: '9339:4:59',
                              memberName: 'call',
                              nodeType: 'MemberAccess',
                              src: '9319:24:59',
                              typeDescriptions: {
                                typeIdentifier:
                                  't_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$',
                                typeString: 'function (bytes memory) payable returns (bool,bytes memory)',
                              },
                            },
                            id: 39718,
                            isConstant: false,
                            isLValue: false,
                            isPure: false,
                            lValueRequested: false,
                            names: ['value'],
                            nodeType: 'FunctionCallOptions',
                            options: [
                              {
                                commonType: {
                                  typeIdentifier: 't_uint256',
                                  typeString: 'uint256',
                                },
                                id: 39717,
                                isConstant: false,
                                isLValue: false,
                                isPure: false,
                                lValueRequested: false,
                                leftExpression: {
                                  expression: {
                                    id: 39714,
                                    name: 'msg',
                                    nodeType: 'Identifier',
                                    overloadedDeclarations: [],
                                    referencedDeclaration: -15,
                                    src: '9351:3:59',
                                    typeDescriptions: {
                                      typeIdentifier: 't_magic_message',
                                      typeString: 'msg',
                                    },
                                  },
                                  id: 39715,
                                  isConstant: false,
                                  isLValue: false,
                                  isPure: false,
                                  lValueRequested: false,
                                  memberLocation: '9355:5:59',
                                  memberName: 'value',
                                  nodeType: 'MemberAccess',
                                  src: '9351:9:59',
                                  typeDescriptions: {
                                    typeIdentifier: 't_uint256',
                                    typeString: 'uint256',
                                  },
                                },
                                nodeType: 'BinaryOperation',
                                operator: '-',
                                rightExpression: {
                                  id: 39716,
                                  name: 'totalPrice',
                                  nodeType: 'Identifier',
                                  overloadedDeclarations: [],
                                  referencedDeclaration: 39662,
                                  src: '9363:10:59',
                                  typeDescriptions: {
                                    typeIdentifier: 't_uint256',
                                    typeString: 'uint256',
                                  },
                                },
                                src: '9351:22:59',
                                typeDescriptions: {
                                  typeIdentifier: 't_uint256',
                                  typeString: 'uint256',
                                },
                              },
                            ],
                            src: '9319:55:59',
                            typeDescriptions: {
                              typeIdentifier:
                                't_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value',
                              typeString: 'function (bytes memory) payable returns (bool,bytes memory)',
                            },
                          },
                          id: 39720,
                          isConstant: false,
                          isLValue: false,
                          isPure: false,
                          kind: 'functionCall',
                          lValueRequested: false,
                          nameLocations: [],
                          names: [],
                          nodeType: 'FunctionCall',
                          src: '9319:59:59',
                          tryCall: false,
                          typeDescriptions: {
                            typeIdentifier: 't_tuple$_t_bool_$_t_bytes_memory_ptr_$',
                            typeString: 'tuple(bool,bytes memory)',
                          },
                        },
                        nodeType: 'VariableDeclarationStatement',
                        src: '9301:77:59',
                      },
                      {
                        condition: {
                          id: 39723,
                          isConstant: false,
                          isLValue: false,
                          isPure: false,
                          lValueRequested: false,
                          nodeType: 'UnaryOperation',
                          operator: '!',
                          prefix: true,
                          src: '9396:8:59',
                          subExpression: {
                            id: 39722,
                            name: 'success',
                            nodeType: 'Identifier',
                            overloadedDeclarations: [],
                            referencedDeclaration: 39707,
                            src: '9397:7:59',
                            typeDescriptions: {
                              typeIdentifier: 't_bool',
                              typeString: 'bool',
                            },
                          },
                          typeDescriptions: {
                            typeIdentifier: 't_bool',
                            typeString: 'bool',
                          },
                        },
                        id: 39727,
                        nodeType: 'IfStatement',
                        src: '9392:33:59',
                        trueBody: {
                          errorCall: {
                            arguments: [],
                            expression: {
                              argumentTypes: [],
                              id: 39724,
                              name: 'CallFailed',
                              nodeType: 'Identifier',
                              overloadedDeclarations: [],
                              referencedDeclaration: 39477,
                              src: '9413:10:59',
                              typeDescriptions: {
                                typeIdentifier: 't_function_error_pure$__$returns$__$',
                                typeString: 'function () pure',
                              },
                            },
                            id: 39725,
                            isConstant: false,
                            isLValue: false,
                            isPure: false,
                            kind: 'functionCall',
                            lValueRequested: false,
                            nameLocations: [],
                            names: [],
                            nodeType: 'FunctionCall',
                            src: '9413:12:59',
                            tryCall: false,
                            typeDescriptions: {
                              typeIdentifier: 't_tuple$__$',
                              typeString: 'tuple()',
                            },
                          },
                          id: 39726,
                          nodeType: 'RevertStatement',
                          src: '9406:19:59',
                        },
                      },
                    ],
                  },
                },
              ],
            },
            documentation: {
              id: 39652,
              nodeType: 'StructuredDocumentation',
              src: '8634:235:59',
              text: ' @notice Rent storage for a given fid. The caller must provide an exact payment amount.\n @param fid   The fid that will receive the storage allocation.\n @param units Number of storage units to rent.',
            },
            functionSelector: '783a112b',
            implemented: true,
            kind: 'function',
            modifiers: [
              {
                id: 39659,
                kind: 'modifierInvocation',
                modifierName: {
                  id: 39658,
                  name: 'whenNotDeprecated',
                  nameLocations: ['8933:17:59'],
                  nodeType: 'IdentifierPath',
                  referencedDeclaration: 39651,
                  src: '8933:17:59',
                },
                nodeType: 'ModifierInvocation',
                src: '8933:17:59',
              },
            ],
            name: 'rent',
            nameLocation: '8883:4:59',
            parameters: {
              id: 39657,
              nodeType: 'ParameterList',
              parameters: [
                {
                  constant: false,
                  id: 39654,
                  mutability: 'mutable',
                  name: 'fid',
                  nameLocation: '8896:3:59',
                  nodeType: 'VariableDeclaration',
                  scope: 39731,
                  src: '8888:11:59',
                  stateVariable: false,
                  storageLocation: 'default',
                  typeDescriptions: {
                    typeIdentifier: 't_uint256',
                    typeString: 'uint256',
                  },
                  typeName: {
                    id: 39653,
                    name: 'uint256',
                    nodeType: 'ElementaryTypeName',
                    src: '8888:7:59',
                    typeDescriptions: {
                      typeIdentifier: 't_uint256',
                      typeString: 'uint256',
                    },
                  },
                  visibility: 'internal',
                },
                {
                  constant: false,
                  id: 39656,
                  mutability: 'mutable',
                  name: 'units',
                  nameLocation: '8909:5:59',
                  nodeType: 'VariableDeclaration',
                  scope: 39731,
                  src: '8901:13:59',
                  stateVariable: false,
                  storageLocation: 'default',
                  typeDescriptions: {
                    typeIdentifier: 't_uint256',
                    typeString: 'uint256',
                  },
                  typeName: {
                    id: 39655,
                    name: 'uint256',
                    nodeType: 'ElementaryTypeName',
                    src: '8901:7:59',
                    typeDescriptions: {
                      typeIdentifier: 't_uint256',
                      typeString: 'uint256',
                    },
                  },
                  visibility: 'internal',
                },
              ],
              src: '8887:28:59',
            },
            returnParameters: {
              id: 39660,
              nodeType: 'ParameterList',
              parameters: [],
              src: '8951:0:59',
            },
            scope: 40314,
            stateMutability: 'payable',
            virtual: false,
            visibility: 'external',
          },
          {
            id: 39867,
            nodeType: 'FunctionDefinition',
            src: '9785:963:59',
            nodes: [],
            body: {
              id: 39866,
              nodeType: 'Block',
              src: '9890:858:59',
              nodes: [],
              statements: [
                {
                  condition: {
                    commonType: {
                      typeIdentifier: 't_bool',
                      typeString: 'bool',
                    },
                    id: 39751,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    lValueRequested: false,
                    leftExpression: {
                      commonType: {
                        typeIdentifier: 't_uint256',
                        typeString: 'uint256',
                      },
                      id: 39746,
                      isConstant: false,
                      isLValue: false,
                      isPure: false,
                      lValueRequested: false,
                      leftExpression: {
                        expression: {
                          id: 39743,
                          name: 'fids',
                          nodeType: 'Identifier',
                          overloadedDeclarations: [],
                          referencedDeclaration: 39735,
                          src: '9904:4:59',
                          typeDescriptions: {
                            typeIdentifier: 't_array$_t_uint256_$dyn_calldata_ptr',
                            typeString: 'uint256[] calldata',
                          },
                        },
                        id: 39744,
                        isConstant: false,
                        isLValue: false,
                        isPure: false,
                        lValueRequested: false,
                        memberLocation: '9909:6:59',
                        memberName: 'length',
                        nodeType: 'MemberAccess',
                        src: '9904:11:59',
                        typeDescriptions: {
                          typeIdentifier: 't_uint256',
                          typeString: 'uint256',
                        },
                      },
                      nodeType: 'BinaryOperation',
                      operator: '==',
                      rightExpression: {
                        hexValue: '30',
                        id: 39745,
                        isConstant: false,
                        isLValue: false,
                        isPure: true,
                        kind: 'number',
                        lValueRequested: false,
                        nodeType: 'Literal',
                        src: '9919:1:59',
                        typeDescriptions: {
                          typeIdentifier: 't_rational_0_by_1',
                          typeString: 'int_const 0',
                        },
                        value: '0',
                      },
                      src: '9904:16:59',
                      typeDescriptions: {
                        typeIdentifier: 't_bool',
                        typeString: 'bool',
                      },
                    },
                    nodeType: 'BinaryOperation',
                    operator: '||',
                    rightExpression: {
                      commonType: {
                        typeIdentifier: 't_uint256',
                        typeString: 'uint256',
                      },
                      id: 39750,
                      isConstant: false,
                      isLValue: false,
                      isPure: false,
                      lValueRequested: false,
                      leftExpression: {
                        expression: {
                          id: 39747,
                          name: 'units',
                          nodeType: 'Identifier',
                          overloadedDeclarations: [],
                          referencedDeclaration: 39738,
                          src: '9924:5:59',
                          typeDescriptions: {
                            typeIdentifier: 't_array$_t_uint256_$dyn_calldata_ptr',
                            typeString: 'uint256[] calldata',
                          },
                        },
                        id: 39748,
                        isConstant: false,
                        isLValue: false,
                        isPure: false,
                        lValueRequested: false,
                        memberLocation: '9930:6:59',
                        memberName: 'length',
                        nodeType: 'MemberAccess',
                        src: '9924:12:59',
                        typeDescriptions: {
                          typeIdentifier: 't_uint256',
                          typeString: 'uint256',
                        },
                      },
                      nodeType: 'BinaryOperation',
                      operator: '==',
                      rightExpression: {
                        hexValue: '30',
                        id: 39749,
                        isConstant: false,
                        isLValue: false,
                        isPure: true,
                        kind: 'number',
                        lValueRequested: false,
                        nodeType: 'Literal',
                        src: '9940:1:59',
                        typeDescriptions: {
                          typeIdentifier: 't_rational_0_by_1',
                          typeString: 'int_const 0',
                        },
                        value: '0',
                      },
                      src: '9924:17:59',
                      typeDescriptions: {
                        typeIdentifier: 't_bool',
                        typeString: 'bool',
                      },
                    },
                    src: '9904:37:59',
                    typeDescriptions: {
                      typeIdentifier: 't_bool',
                      typeString: 'bool',
                    },
                  },
                  id: 39755,
                  nodeType: 'IfStatement',
                  src: '9900:69:59',
                  trueBody: {
                    errorCall: {
                      arguments: [],
                      expression: {
                        argumentTypes: [],
                        id: 39752,
                        name: 'InvalidBatchInput',
                        nodeType: 'Identifier',
                        overloadedDeclarations: [],
                        referencedDeclaration: 39468,
                        src: '9950:17:59',
                        typeDescriptions: {
                          typeIdentifier: 't_function_error_pure$__$returns$__$',
                          typeString: 'function () pure',
                        },
                      },
                      id: 39753,
                      isConstant: false,
                      isLValue: false,
                      isPure: false,
                      kind: 'functionCall',
                      lValueRequested: false,
                      nameLocations: [],
                      names: [],
                      nodeType: 'FunctionCall',
                      src: '9950:19:59',
                      tryCall: false,
                      typeDescriptions: {
                        typeIdentifier: 't_tuple$__$',
                        typeString: 'tuple()',
                      },
                    },
                    id: 39754,
                    nodeType: 'RevertStatement',
                    src: '9943:26:59',
                  },
                },
                {
                  condition: {
                    commonType: {
                      typeIdentifier: 't_uint256',
                      typeString: 'uint256',
                    },
                    id: 39760,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    lValueRequested: false,
                    leftExpression: {
                      expression: {
                        id: 39756,
                        name: 'fids',
                        nodeType: 'Identifier',
                        overloadedDeclarations: [],
                        referencedDeclaration: 39735,
                        src: '9983:4:59',
                        typeDescriptions: {
                          typeIdentifier: 't_array$_t_uint256_$dyn_calldata_ptr',
                          typeString: 'uint256[] calldata',
                        },
                      },
                      id: 39757,
                      isConstant: false,
                      isLValue: false,
                      isPure: false,
                      lValueRequested: false,
                      memberLocation: '9988:6:59',
                      memberName: 'length',
                      nodeType: 'MemberAccess',
                      src: '9983:11:59',
                      typeDescriptions: {
                        typeIdentifier: 't_uint256',
                        typeString: 'uint256',
                      },
                    },
                    nodeType: 'BinaryOperation',
                    operator: '!=',
                    rightExpression: {
                      expression: {
                        id: 39758,
                        name: 'units',
                        nodeType: 'Identifier',
                        overloadedDeclarations: [],
                        referencedDeclaration: 39738,
                        src: '9998:5:59',
                        typeDescriptions: {
                          typeIdentifier: 't_array$_t_uint256_$dyn_calldata_ptr',
                          typeString: 'uint256[] calldata',
                        },
                      },
                      id: 39759,
                      isConstant: false,
                      isLValue: false,
                      isPure: false,
                      lValueRequested: false,
                      memberLocation: '10004:6:59',
                      memberName: 'length',
                      nodeType: 'MemberAccess',
                      src: '9998:12:59',
                      typeDescriptions: {
                        typeIdentifier: 't_uint256',
                        typeString: 'uint256',
                      },
                    },
                    src: '9983:27:59',
                    typeDescriptions: {
                      typeIdentifier: 't_bool',
                      typeString: 'bool',
                    },
                  },
                  id: 39764,
                  nodeType: 'IfStatement',
                  src: '9979:59:59',
                  trueBody: {
                    errorCall: {
                      arguments: [],
                      expression: {
                        argumentTypes: [],
                        id: 39761,
                        name: 'InvalidBatchInput',
                        nodeType: 'Identifier',
                        overloadedDeclarations: [],
                        referencedDeclaration: 39468,
                        src: '10019:17:59',
                        typeDescriptions: {
                          typeIdentifier: 't_function_error_pure$__$returns$__$',
                          typeString: 'function () pure',
                        },
                      },
                      id: 39762,
                      isConstant: false,
                      isLValue: false,
                      isPure: false,
                      kind: 'functionCall',
                      lValueRequested: false,
                      nameLocations: [],
                      names: [],
                      nodeType: 'FunctionCall',
                      src: '10019:19:59',
                      tryCall: false,
                      typeDescriptions: {
                        typeIdentifier: 't_tuple$__$',
                        typeString: 'tuple()',
                      },
                    },
                    id: 39763,
                    nodeType: 'RevertStatement',
                    src: '10012:26:59',
                  },
                },
                {
                  assignments: [39766],
                  declarations: [
                    {
                      constant: false,
                      id: 39766,
                      mutability: 'mutable',
                      name: '_usdPrice',
                      nameLocation: '10057:9:59',
                      nodeType: 'VariableDeclaration',
                      scope: 39866,
                      src: '10049:17:59',
                      stateVariable: false,
                      storageLocation: 'default',
                      typeDescriptions: {
                        typeIdentifier: 't_uint256',
                        typeString: 'uint256',
                      },
                      typeName: {
                        id: 39765,
                        name: 'uint256',
                        nodeType: 'ElementaryTypeName',
                        src: '10049:7:59',
                        typeDescriptions: {
                          typeIdentifier: 't_uint256',
                          typeString: 'uint256',
                        },
                      },
                      visibility: 'internal',
                    },
                  ],
                  id: 39768,
                  initialValue: {
                    id: 39767,
                    name: 'usdUnitPrice',
                    nodeType: 'Identifier',
                    overloadedDeclarations: [],
                    referencedDeclaration: 39564,
                    src: '10069:12:59',
                    typeDescriptions: {
                      typeIdentifier: 't_uint256',
                      typeString: 'uint256',
                    },
                  },
                  nodeType: 'VariableDeclarationStatement',
                  src: '10049:32:59',
                },
                {
                  assignments: [39770],
                  declarations: [
                    {
                      constant: false,
                      id: 39770,
                      mutability: 'mutable',
                      name: '_ethPrice',
                      nameLocation: '10099:9:59',
                      nodeType: 'VariableDeclaration',
                      scope: 39866,
                      src: '10091:17:59',
                      stateVariable: false,
                      storageLocation: 'default',
                      typeDescriptions: {
                        typeIdentifier: 't_uint256',
                        typeString: 'uint256',
                      },
                      typeName: {
                        id: 39769,
                        name: 'uint256',
                        nodeType: 'ElementaryTypeName',
                        src: '10091:7:59',
                        typeDescriptions: {
                          typeIdentifier: 't_uint256',
                          typeString: 'uint256',
                        },
                      },
                      visibility: 'internal',
                    },
                  ],
                  id: 39773,
                  initialValue: {
                    arguments: [],
                    expression: {
                      argumentTypes: [],
                      id: 39771,
                      name: '_ethUsdPrice',
                      nodeType: 'Identifier',
                      overloadedDeclarations: [],
                      referencedDeclaration: 39918,
                      src: '10111:12:59',
                      typeDescriptions: {
                        typeIdentifier: 't_function_internal_nonpayable$__$returns$_t_uint256_$',
                        typeString: 'function () returns (uint256)',
                      },
                    },
                    id: 39772,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    kind: 'functionCall',
                    lValueRequested: false,
                    nameLocations: [],
                    names: [],
                    nodeType: 'FunctionCall',
                    src: '10111:14:59',
                    tryCall: false,
                    typeDescriptions: {
                      typeIdentifier: 't_uint256',
                      typeString: 'uint256',
                    },
                  },
                  nodeType: 'VariableDeclarationStatement',
                  src: '10091:34:59',
                },
                {
                  assignments: [39775],
                  declarations: [
                    {
                      constant: false,
                      id: 39775,
                      mutability: 'mutable',
                      name: 'totalCost',
                      nameLocation: '10144:9:59',
                      nodeType: 'VariableDeclaration',
                      scope: 39866,
                      src: '10136:17:59',
                      stateVariable: false,
                      storageLocation: 'default',
                      typeDescriptions: {
                        typeIdentifier: 't_uint256',
                        typeString: 'uint256',
                      },
                      typeName: {
                        id: 39774,
                        name: 'uint256',
                        nodeType: 'ElementaryTypeName',
                        src: '10136:7:59',
                        typeDescriptions: {
                          typeIdentifier: 't_uint256',
                          typeString: 'uint256',
                        },
                      },
                      visibility: 'internal',
                    },
                  ],
                  id: 39776,
                  nodeType: 'VariableDeclarationStatement',
                  src: '10136:17:59',
                },
                {
                  body: {
                    id: 39828,
                    nodeType: 'Block',
                    src: '10201:296:59',
                    statements: [
                      {
                        assignments: [39788],
                        declarations: [
                          {
                            constant: false,
                            id: 39788,
                            mutability: 'mutable',
                            name: 'qty',
                            nameLocation: '10223:3:59',
                            nodeType: 'VariableDeclaration',
                            scope: 39828,
                            src: '10215:11:59',
                            stateVariable: false,
                            storageLocation: 'default',
                            typeDescriptions: {
                              typeIdentifier: 't_uint256',
                              typeString: 'uint256',
                            },
                            typeName: {
                              id: 39787,
                              name: 'uint256',
                              nodeType: 'ElementaryTypeName',
                              src: '10215:7:59',
                              typeDescriptions: {
                                typeIdentifier: 't_uint256',
                                typeString: 'uint256',
                              },
                            },
                            visibility: 'internal',
                          },
                        ],
                        id: 39792,
                        initialValue: {
                          baseExpression: {
                            id: 39789,
                            name: 'units',
                            nodeType: 'Identifier',
                            overloadedDeclarations: [],
                            referencedDeclaration: 39738,
                            src: '10229:5:59',
                            typeDescriptions: {
                              typeIdentifier: 't_array$_t_uint256_$dyn_calldata_ptr',
                              typeString: 'uint256[] calldata',
                            },
                          },
                          id: 39791,
                          indexExpression: {
                            id: 39790,
                            name: 'i',
                            nodeType: 'Identifier',
                            overloadedDeclarations: [],
                            referencedDeclaration: 39778,
                            src: '10235:1:59',
                            typeDescriptions: {
                              typeIdentifier: 't_uint256',
                              typeString: 'uint256',
                            },
                          },
                          isConstant: false,
                          isLValue: false,
                          isPure: false,
                          lValueRequested: false,
                          nodeType: 'IndexAccess',
                          src: '10229:8:59',
                          typeDescriptions: {
                            typeIdentifier: 't_uint256',
                            typeString: 'uint256',
                          },
                        },
                        nodeType: 'VariableDeclarationStatement',
                        src: '10215:22:59',
                      },
                      {
                        condition: {
                          commonType: {
                            typeIdentifier: 't_uint256',
                            typeString: 'uint256',
                          },
                          id: 39795,
                          isConstant: false,
                          isLValue: false,
                          isPure: false,
                          lValueRequested: false,
                          leftExpression: {
                            id: 39793,
                            name: 'qty',
                            nodeType: 'Identifier',
                            overloadedDeclarations: [],
                            referencedDeclaration: 39788,
                            src: '10255:3:59',
                            typeDescriptions: {
                              typeIdentifier: 't_uint256',
                              typeString: 'uint256',
                            },
                          },
                          nodeType: 'BinaryOperation',
                          operator: '==',
                          rightExpression: {
                            hexValue: '30',
                            id: 39794,
                            isConstant: false,
                            isLValue: false,
                            isPure: true,
                            kind: 'number',
                            lValueRequested: false,
                            nodeType: 'Literal',
                            src: '10262:1:59',
                            typeDescriptions: {
                              typeIdentifier: 't_rational_0_by_1',
                              typeString: 'int_const 0',
                            },
                            value: '0',
                          },
                          src: '10255:8:59',
                          typeDescriptions: {
                            typeIdentifier: 't_bool',
                            typeString: 'bool',
                          },
                        },
                        id: 39797,
                        nodeType: 'IfStatement',
                        src: '10251:22:59',
                        trueBody: {
                          id: 39796,
                          nodeType: 'Continue',
                          src: '10265:8:59',
                        },
                      },
                      {
                        condition: {
                          commonType: {
                            typeIdentifier: 't_uint256',
                            typeString: 'uint256',
                          },
                          id: 39802,
                          isConstant: false,
                          isLValue: false,
                          isPure: false,
                          lValueRequested: false,
                          leftExpression: {
                            commonType: {
                              typeIdentifier: 't_uint256',
                              typeString: 'uint256',
                            },
                            id: 39800,
                            isConstant: false,
                            isLValue: false,
                            isPure: false,
                            lValueRequested: false,
                            leftExpression: {
                              id: 39798,
                              name: 'rentedUnits',
                              nodeType: 'Identifier',
                              overloadedDeclarations: [],
                              referencedDeclaration: 39576,
                              src: '10291:11:59',
                              typeDescriptions: {
                                typeIdentifier: 't_uint256',
                                typeString: 'uint256',
                              },
                            },
                            nodeType: 'BinaryOperation',
                            operator: '+',
                            rightExpression: {
                              id: 39799,
                              name: 'qty',
                              nodeType: 'Identifier',
                              overloadedDeclarations: [],
                              referencedDeclaration: 39788,
                              src: '10305:3:59',
                              typeDescriptions: {
                                typeIdentifier: 't_uint256',
                                typeString: 'uint256',
                              },
                            },
                            src: '10291:17:59',
                            typeDescriptions: {
                              typeIdentifier: 't_uint256',
                              typeString: 'uint256',
                            },
                          },
                          nodeType: 'BinaryOperation',
                          operator: '>',
                          rightExpression: {
                            id: 39801,
                            name: 'maxUnits',
                            nodeType: 'Identifier',
                            overloadedDeclarations: [],
                            referencedDeclaration: 39567,
                            src: '10311:8:59',
                            typeDescriptions: {
                              typeIdentifier: 't_uint256',
                              typeString: 'uint256',
                            },
                          },
                          src: '10291:28:59',
                          typeDescriptions: {
                            typeIdentifier: 't_bool',
                            typeString: 'bool',
                          },
                        },
                        id: 39806,
                        nodeType: 'IfStatement',
                        src: '10287:58:59',
                        trueBody: {
                          errorCall: {
                            arguments: [],
                            expression: {
                              argumentTypes: [],
                              id: 39803,
                              name: 'ExceedsCapacity',
                              nodeType: 'Identifier',
                              overloadedDeclarations: [],
                              referencedDeclaration: 39462,
                              src: '10328:15:59',
                              typeDescriptions: {
                                typeIdentifier: 't_function_error_pure$__$returns$__$',
                                typeString: 'function () pure',
                              },
                            },
                            id: 39804,
                            isConstant: false,
                            isLValue: false,
                            isPure: false,
                            kind: 'functionCall',
                            lValueRequested: false,
                            nameLocations: [],
                            names: [],
                            nodeType: 'FunctionCall',
                            src: '10328:17:59',
                            tryCall: false,
                            typeDescriptions: {
                              typeIdentifier: 't_tuple$__$',
                              typeString: 'tuple()',
                            },
                          },
                          id: 39805,
                          nodeType: 'RevertStatement',
                          src: '10321:24:59',
                        },
                      },
                      {
                        expression: {
                          id: 39813,
                          isConstant: false,
                          isLValue: false,
                          isPure: false,
                          lValueRequested: false,
                          leftHandSide: {
                            id: 39807,
                            name: 'totalCost',
                            nodeType: 'Identifier',
                            overloadedDeclarations: [],
                            referencedDeclaration: 39775,
                            src: '10359:9:59',
                            typeDescriptions: {
                              typeIdentifier: 't_uint256',
                              typeString: 'uint256',
                            },
                          },
                          nodeType: 'Assignment',
                          operator: '+=',
                          rightHandSide: {
                            arguments: [
                              {
                                id: 39809,
                                name: 'qty',
                                nodeType: 'Identifier',
                                overloadedDeclarations: [],
                                referencedDeclaration: 39788,
                                src: '10379:3:59',
                                typeDescriptions: {
                                  typeIdentifier: 't_uint256',
                                  typeString: 'uint256',
                                },
                              },
                              {
                                id: 39810,
                                name: '_usdPrice',
                                nodeType: 'Identifier',
                                overloadedDeclarations: [],
                                referencedDeclaration: 39766,
                                src: '10384:9:59',
                                typeDescriptions: {
                                  typeIdentifier: 't_uint256',
                                  typeString: 'uint256',
                                },
                              },
                              {
                                id: 39811,
                                name: '_ethPrice',
                                nodeType: 'Identifier',
                                overloadedDeclarations: [],
                                referencedDeclaration: 39770,
                                src: '10395:9:59',
                                typeDescriptions: {
                                  typeIdentifier: 't_uint256',
                                  typeString: 'uint256',
                                },
                              },
                            ],
                            expression: {
                              argumentTypes: [
                                {
                                  typeIdentifier: 't_uint256',
                                  typeString: 'uint256',
                                },
                                {
                                  typeIdentifier: 't_uint256',
                                  typeString: 'uint256',
                                },
                                {
                                  typeIdentifier: 't_uint256',
                                  typeString: 'uint256',
                                },
                              ],
                              id: 39808,
                              name: '_price',
                              nodeType: 'Identifier',
                              overloadedDeclarations: [40044, 40065],
                              referencedDeclaration: 40065,
                              src: '10372:6:59',
                              typeDescriptions: {
                                typeIdentifier:
                                  't_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$',
                                typeString: 'function (uint256,uint256,uint256) pure returns (uint256)',
                              },
                            },
                            id: 39812,
                            isConstant: false,
                            isLValue: false,
                            isPure: false,
                            kind: 'functionCall',
                            lValueRequested: false,
                            nameLocations: [],
                            names: [],
                            nodeType: 'FunctionCall',
                            src: '10372:33:59',
                            tryCall: false,
                            typeDescriptions: {
                              typeIdentifier: 't_uint256',
                              typeString: 'uint256',
                            },
                          },
                          src: '10359:46:59',
                          typeDescriptions: {
                            typeIdentifier: 't_uint256',
                            typeString: 'uint256',
                          },
                        },
                        id: 39814,
                        nodeType: 'ExpressionStatement',
                        src: '10359:46:59',
                      },
                      {
                        expression: {
                          id: 39817,
                          isConstant: false,
                          isLValue: false,
                          isPure: false,
                          lValueRequested: false,
                          leftHandSide: {
                            id: 39815,
                            name: 'rentedUnits',
                            nodeType: 'Identifier',
                            overloadedDeclarations: [],
                            referencedDeclaration: 39576,
                            src: '10419:11:59',
                            typeDescriptions: {
                              typeIdentifier: 't_uint256',
                              typeString: 'uint256',
                            },
                          },
                          nodeType: 'Assignment',
                          operator: '+=',
                          rightHandSide: {
                            id: 39816,
                            name: 'qty',
                            nodeType: 'Identifier',
                            overloadedDeclarations: [],
                            referencedDeclaration: 39788,
                            src: '10434:3:59',
                            typeDescriptions: {
                              typeIdentifier: 't_uint256',
                              typeString: 'uint256',
                            },
                          },
                          src: '10419:18:59',
                          typeDescriptions: {
                            typeIdentifier: 't_uint256',
                            typeString: 'uint256',
                          },
                        },
                        id: 39818,
                        nodeType: 'ExpressionStatement',
                        src: '10419:18:59',
                      },
                      {
                        eventCall: {
                          arguments: [
                            {
                              expression: {
                                id: 39820,
                                name: 'msg',
                                nodeType: 'Identifier',
                                overloadedDeclarations: [],
                                referencedDeclaration: -15,
                                src: '10461:3:59',
                                typeDescriptions: {
                                  typeIdentifier: 't_magic_message',
                                  typeString: 'msg',
                                },
                              },
                              id: 39821,
                              isConstant: false,
                              isLValue: false,
                              isPure: false,
                              lValueRequested: false,
                              memberLocation: '10465:6:59',
                              memberName: 'sender',
                              nodeType: 'MemberAccess',
                              src: '10461:10:59',
                              typeDescriptions: {
                                typeIdentifier: 't_address',
                                typeString: 'address',
                              },
                            },
                            {
                              baseExpression: {
                                id: 39822,
                                name: 'fids',
                                nodeType: 'Identifier',
                                overloadedDeclarations: [],
                                referencedDeclaration: 39735,
                                src: '10473:4:59',
                                typeDescriptions: {
                                  typeIdentifier: 't_array$_t_uint256_$dyn_calldata_ptr',
                                  typeString: 'uint256[] calldata',
                                },
                              },
                              id: 39824,
                              indexExpression: {
                                id: 39823,
                                name: 'i',
                                nodeType: 'Identifier',
                                overloadedDeclarations: [],
                                referencedDeclaration: 39778,
                                src: '10478:1:59',
                                typeDescriptions: {
                                  typeIdentifier: 't_uint256',
                                  typeString: 'uint256',
                                },
                              },
                              isConstant: false,
                              isLValue: false,
                              isPure: false,
                              lValueRequested: false,
                              nodeType: 'IndexAccess',
                              src: '10473:7:59',
                              typeDescriptions: {
                                typeIdentifier: 't_uint256',
                                typeString: 'uint256',
                              },
                            },
                            {
                              id: 39825,
                              name: 'qty',
                              nodeType: 'Identifier',
                              overloadedDeclarations: [],
                              referencedDeclaration: 39788,
                              src: '10482:3:59',
                              typeDescriptions: {
                                typeIdentifier: 't_uint256',
                                typeString: 'uint256',
                              },
                            },
                          ],
                          expression: {
                            argumentTypes: [
                              {
                                typeIdentifier: 't_address',
                                typeString: 'address',
                              },
                              {
                                typeIdentifier: 't_uint256',
                                typeString: 'uint256',
                              },
                              {
                                typeIdentifier: 't_uint256',
                                typeString: 'uint256',
                              },
                            ],
                            id: 39819,
                            name: 'Rent',
                            nodeType: 'Identifier',
                            overloadedDeclarations: [],
                            referencedDeclaration: 39504,
                            src: '10456:4:59',
                            typeDescriptions: {
                              typeIdentifier:
                                't_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$',
                              typeString: 'function (address,uint256,uint256)',
                            },
                          },
                          id: 39826,
                          isConstant: false,
                          isLValue: false,
                          isPure: false,
                          kind: 'functionCall',
                          lValueRequested: false,
                          nameLocations: [],
                          names: [],
                          nodeType: 'FunctionCall',
                          src: '10456:30:59',
                          tryCall: false,
                          typeDescriptions: {
                            typeIdentifier: 't_tuple$__$',
                            typeString: 'tuple()',
                          },
                        },
                        id: 39827,
                        nodeType: 'EmitStatement',
                        src: '10451:35:59',
                      },
                    ],
                  },
                  condition: {
                    commonType: {
                      typeIdentifier: 't_uint256',
                      typeString: 'uint256',
                    },
                    id: 39783,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    lValueRequested: false,
                    leftExpression: {
                      id: 39780,
                      name: 'i',
                      nodeType: 'Identifier',
                      overloadedDeclarations: [],
                      referencedDeclaration: 39778,
                      src: '10179:1:59',
                      typeDescriptions: {
                        typeIdentifier: 't_uint256',
                        typeString: 'uint256',
                      },
                    },
                    nodeType: 'BinaryOperation',
                    operator: '<',
                    rightExpression: {
                      expression: {
                        id: 39781,
                        name: 'fids',
                        nodeType: 'Identifier',
                        overloadedDeclarations: [],
                        referencedDeclaration: 39735,
                        src: '10183:4:59',
                        typeDescriptions: {
                          typeIdentifier: 't_array$_t_uint256_$dyn_calldata_ptr',
                          typeString: 'uint256[] calldata',
                        },
                      },
                      id: 39782,
                      isConstant: false,
                      isLValue: false,
                      isPure: false,
                      lValueRequested: false,
                      memberLocation: '10188:6:59',
                      memberName: 'length',
                      nodeType: 'MemberAccess',
                      src: '10183:11:59',
                      typeDescriptions: {
                        typeIdentifier: 't_uint256',
                        typeString: 'uint256',
                      },
                    },
                    src: '10179:15:59',
                    typeDescriptions: {
                      typeIdentifier: 't_bool',
                      typeString: 'bool',
                    },
                  },
                  id: 39829,
                  initializationExpression: {
                    assignments: [39778],
                    declarations: [
                      {
                        constant: false,
                        id: 39778,
                        mutability: 'mutable',
                        name: 'i',
                        nameLocation: '10176:1:59',
                        nodeType: 'VariableDeclaration',
                        scope: 39829,
                        src: '10168:9:59',
                        stateVariable: false,
                        storageLocation: 'default',
                        typeDescriptions: {
                          typeIdentifier: 't_uint256',
                          typeString: 'uint256',
                        },
                        typeName: {
                          id: 39777,
                          name: 'uint256',
                          nodeType: 'ElementaryTypeName',
                          src: '10168:7:59',
                          typeDescriptions: {
                            typeIdentifier: 't_uint256',
                            typeString: 'uint256',
                          },
                        },
                        visibility: 'internal',
                      },
                    ],
                    id: 39779,
                    nodeType: 'VariableDeclarationStatement',
                    src: '10168:9:59',
                  },
                  loopExpression: {
                    expression: {
                      id: 39785,
                      isConstant: false,
                      isLValue: false,
                      isPure: false,
                      lValueRequested: false,
                      nodeType: 'UnaryOperation',
                      operator: '++',
                      prefix: true,
                      src: '10196:3:59',
                      subExpression: {
                        id: 39784,
                        name: 'i',
                        nodeType: 'Identifier',
                        overloadedDeclarations: [],
                        referencedDeclaration: 39778,
                        src: '10198:1:59',
                        typeDescriptions: {
                          typeIdentifier: 't_uint256',
                          typeString: 'uint256',
                        },
                      },
                      typeDescriptions: {
                        typeIdentifier: 't_uint256',
                        typeString: 'uint256',
                      },
                    },
                    id: 39786,
                    nodeType: 'ExpressionStatement',
                    src: '10196:3:59',
                  },
                  nodeType: 'ForStatement',
                  src: '10163:334:59',
                },
                {
                  condition: {
                    commonType: {
                      typeIdentifier: 't_uint256',
                      typeString: 'uint256',
                    },
                    id: 39833,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    lValueRequested: false,
                    leftExpression: {
                      expression: {
                        id: 39830,
                        name: 'msg',
                        nodeType: 'Identifier',
                        overloadedDeclarations: [],
                        referencedDeclaration: -15,
                        src: '10511:3:59',
                        typeDescriptions: {
                          typeIdentifier: 't_magic_message',
                          typeString: 'msg',
                        },
                      },
                      id: 39831,
                      isConstant: false,
                      isLValue: false,
                      isPure: false,
                      lValueRequested: false,
                      memberLocation: '10515:5:59',
                      memberName: 'value',
                      nodeType: 'MemberAccess',
                      src: '10511:9:59',
                      typeDescriptions: {
                        typeIdentifier: 't_uint256',
                        typeString: 'uint256',
                      },
                    },
                    nodeType: 'BinaryOperation',
                    operator: '<',
                    rightExpression: {
                      id: 39832,
                      name: 'totalCost',
                      nodeType: 'Identifier',
                      overloadedDeclarations: [],
                      referencedDeclaration: 39775,
                      src: '10523:9:59',
                      typeDescriptions: {
                        typeIdentifier: 't_uint256',
                        typeString: 'uint256',
                      },
                    },
                    src: '10511:21:59',
                    typeDescriptions: {
                      typeIdentifier: 't_bool',
                      typeString: 'bool',
                    },
                  },
                  id: 39837,
                  nodeType: 'IfStatement',
                  src: '10507:50:59',
                  trueBody: {
                    errorCall: {
                      arguments: [],
                      expression: {
                        argumentTypes: [],
                        id: 39834,
                        name: 'InvalidPayment',
                        nodeType: 'Identifier',
                        overloadedDeclarations: [],
                        referencedDeclaration: 39471,
                        src: '10541:14:59',
                        typeDescriptions: {
                          typeIdentifier: 't_function_error_pure$__$returns$__$',
                          typeString: 'function () pure',
                        },
                      },
                      id: 39835,
                      isConstant: false,
                      isLValue: false,
                      isPure: false,
                      kind: 'functionCall',
                      lValueRequested: false,
                      nameLocations: [],
                      names: [],
                      nodeType: 'FunctionCall',
                      src: '10541:16:59',
                      tryCall: false,
                      typeDescriptions: {
                        typeIdentifier: 't_tuple$__$',
                        typeString: 'tuple()',
                      },
                    },
                    id: 39836,
                    nodeType: 'RevertStatement',
                    src: '10534:23:59',
                  },
                },
                {
                  condition: {
                    commonType: {
                      typeIdentifier: 't_uint256',
                      typeString: 'uint256',
                    },
                    id: 39841,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    lValueRequested: false,
                    leftExpression: {
                      expression: {
                        id: 39838,
                        name: 'msg',
                        nodeType: 'Identifier',
                        overloadedDeclarations: [],
                        referencedDeclaration: -15,
                        src: '10571:3:59',
                        typeDescriptions: {
                          typeIdentifier: 't_magic_message',
                          typeString: 'msg',
                        },
                      },
                      id: 39839,
                      isConstant: false,
                      isLValue: false,
                      isPure: false,
                      lValueRequested: false,
                      memberLocation: '10575:5:59',
                      memberName: 'value',
                      nodeType: 'MemberAccess',
                      src: '10571:9:59',
                      typeDescriptions: {
                        typeIdentifier: 't_uint256',
                        typeString: 'uint256',
                      },
                    },
                    nodeType: 'BinaryOperation',
                    operator: '>',
                    rightExpression: {
                      id: 39840,
                      name: 'totalCost',
                      nodeType: 'Identifier',
                      overloadedDeclarations: [],
                      referencedDeclaration: 39775,
                      src: '10583:9:59',
                      typeDescriptions: {
                        typeIdentifier: 't_uint256',
                        typeString: 'uint256',
                      },
                    },
                    src: '10571:21:59',
                    typeDescriptions: {
                      typeIdentifier: 't_bool',
                      typeString: 'bool',
                    },
                  },
                  id: 39865,
                  nodeType: 'IfStatement',
                  src: '10567:175:59',
                  trueBody: {
                    id: 39864,
                    nodeType: 'Block',
                    src: '10594:148:59',
                    statements: [
                      {
                        assignments: [39843, null],
                        declarations: [
                          {
                            constant: false,
                            id: 39843,
                            mutability: 'mutable',
                            name: 'success',
                            nameLocation: '10614:7:59',
                            nodeType: 'VariableDeclaration',
                            scope: 39864,
                            src: '10609:12:59',
                            stateVariable: false,
                            storageLocation: 'default',
                            typeDescriptions: {
                              typeIdentifier: 't_bool',
                              typeString: 'bool',
                            },
                            typeName: {
                              id: 39842,
                              name: 'bool',
                              nodeType: 'ElementaryTypeName',
                              src: '10609:4:59',
                              typeDescriptions: {
                                typeIdentifier: 't_bool',
                                typeString: 'bool',
                              },
                            },
                            visibility: 'internal',
                          },
                          null,
                        ],
                        id: 39857,
                        initialValue: {
                          arguments: [
                            {
                              hexValue: '',
                              id: 39855,
                              isConstant: false,
                              isLValue: false,
                              isPure: true,
                              kind: 'string',
                              lValueRequested: false,
                              nodeType: 'Literal',
                              src: '10681:2:59',
                              typeDescriptions: {
                                typeIdentifier:
                                  't_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470',
                                typeString: 'literal_string ""',
                              },
                              value: '',
                            },
                          ],
                          expression: {
                            argumentTypes: [
                              {
                                typeIdentifier:
                                  't_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470',
                                typeString: 'literal_string ""',
                              },
                            ],
                            expression: {
                              argumentTypes: [
                                {
                                  typeIdentifier:
                                    't_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470',
                                  typeString: 'literal_string ""',
                                },
                              ],
                              expression: {
                                arguments: [
                                  {
                                    expression: {
                                      id: 39846,
                                      name: 'msg',
                                      nodeType: 'Identifier',
                                      overloadedDeclarations: [],
                                      referencedDeclaration: -15,
                                      src: '10634:3:59',
                                      typeDescriptions: {
                                        typeIdentifier: 't_magic_message',
                                        typeString: 'msg',
                                      },
                                    },
                                    id: 39847,
                                    isConstant: false,
                                    isLValue: false,
                                    isPure: false,
                                    lValueRequested: false,
                                    memberLocation: '10638:6:59',
                                    memberName: 'sender',
                                    nodeType: 'MemberAccess',
                                    src: '10634:10:59',
                                    typeDescriptions: {
                                      typeIdentifier: 't_address',
                                      typeString: 'address',
                                    },
                                  },
                                ],
                                expression: {
                                  argumentTypes: [
                                    {
                                      typeIdentifier: 't_address',
                                      typeString: 'address',
                                    },
                                  ],
                                  id: 39845,
                                  isConstant: false,
                                  isLValue: false,
                                  isPure: true,
                                  lValueRequested: false,
                                  nodeType: 'ElementaryTypeNameExpression',
                                  src: '10626:8:59',
                                  typeDescriptions: {
                                    typeIdentifier: 't_type$_t_address_payable_$',
                                    typeString: 'type(address payable)',
                                  },
                                  typeName: {
                                    id: 39844,
                                    name: 'address',
                                    nodeType: 'ElementaryTypeName',
                                    src: '10626:8:59',
                                    stateMutability: 'payable',
                                    typeDescriptions: {},
                                  },
                                },
                                id: 39848,
                                isConstant: false,
                                isLValue: false,
                                isPure: false,
                                kind: 'typeConversion',
                                lValueRequested: false,
                                nameLocations: [],
                                names: [],
                                nodeType: 'FunctionCall',
                                src: '10626:19:59',
                                tryCall: false,
                                typeDescriptions: {
                                  typeIdentifier: 't_address_payable',
                                  typeString: 'address payable',
                                },
                              },
                              id: 39849,
                              isConstant: false,
                              isLValue: false,
                              isPure: false,
                              lValueRequested: false,
                              memberLocation: '10646:4:59',
                              memberName: 'call',
                              nodeType: 'MemberAccess',
                              src: '10626:24:59',
                              typeDescriptions: {
                                typeIdentifier:
                                  't_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$',
                                typeString: 'function (bytes memory) payable returns (bool,bytes memory)',
                              },
                            },
                            id: 39854,
                            isConstant: false,
                            isLValue: false,
                            isPure: false,
                            lValueRequested: false,
                            names: ['value'],
                            nodeType: 'FunctionCallOptions',
                            options: [
                              {
                                commonType: {
                                  typeIdentifier: 't_uint256',
                                  typeString: 'uint256',
                                },
                                id: 39853,
                                isConstant: false,
                                isLValue: false,
                                isPure: false,
                                lValueRequested: false,
                                leftExpression: {
                                  expression: {
                                    id: 39850,
                                    name: 'msg',
                                    nodeType: 'Identifier',
                                    overloadedDeclarations: [],
                                    referencedDeclaration: -15,
                                    src: '10658:3:59',
                                    typeDescriptions: {
                                      typeIdentifier: 't_magic_message',
                                      typeString: 'msg',
                                    },
                                  },
                                  id: 39851,
                                  isConstant: false,
                                  isLValue: false,
                                  isPure: false,
                                  lValueRequested: false,
                                  memberLocation: '10662:5:59',
                                  memberName: 'value',
                                  nodeType: 'MemberAccess',
                                  src: '10658:9:59',
                                  typeDescriptions: {
                                    typeIdentifier: 't_uint256',
                                    typeString: 'uint256',
                                  },
                                },
                                nodeType: 'BinaryOperation',
                                operator: '-',
                                rightExpression: {
                                  id: 39852,
                                  name: 'totalCost',
                                  nodeType: 'Identifier',
                                  overloadedDeclarations: [],
                                  referencedDeclaration: 39775,
                                  src: '10670:9:59',
                                  typeDescriptions: {
                                    typeIdentifier: 't_uint256',
                                    typeString: 'uint256',
                                  },
                                },
                                src: '10658:21:59',
                                typeDescriptions: {
                                  typeIdentifier: 't_uint256',
                                  typeString: 'uint256',
                                },
                              },
                            ],
                            src: '10626:54:59',
                            typeDescriptions: {
                              typeIdentifier:
                                't_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value',
                              typeString: 'function (bytes memory) payable returns (bool,bytes memory)',
                            },
                          },
                          id: 39856,
                          isConstant: false,
                          isLValue: false,
                          isPure: false,
                          kind: 'functionCall',
                          lValueRequested: false,
                          nameLocations: [],
                          names: [],
                          nodeType: 'FunctionCall',
                          src: '10626:58:59',
                          tryCall: false,
                          typeDescriptions: {
                            typeIdentifier: 't_tuple$_t_bool_$_t_bytes_memory_ptr_$',
                            typeString: 'tuple(bool,bytes memory)',
                          },
                        },
                        nodeType: 'VariableDeclarationStatement',
                        src: '10608:76:59',
                      },
                      {
                        condition: {
                          id: 39859,
                          isConstant: false,
                          isLValue: false,
                          isPure: false,
                          lValueRequested: false,
                          nodeType: 'UnaryOperation',
                          operator: '!',
                          prefix: true,
                          src: '10702:8:59',
                          subExpression: {
                            id: 39858,
                            name: 'success',
                            nodeType: 'Identifier',
                            overloadedDeclarations: [],
                            referencedDeclaration: 39843,
                            src: '10703:7:59',
                            typeDescriptions: {
                              typeIdentifier: 't_bool',
                              typeString: 'bool',
                            },
                          },
                          typeDescriptions: {
                            typeIdentifier: 't_bool',
                            typeString: 'bool',
                          },
                        },
                        id: 39863,
                        nodeType: 'IfStatement',
                        src: '10698:33:59',
                        trueBody: {
                          errorCall: {
                            arguments: [],
                            expression: {
                              argumentTypes: [],
                              id: 39860,
                              name: 'CallFailed',
                              nodeType: 'Identifier',
                              overloadedDeclarations: [],
                              referencedDeclaration: 39477,
                              src: '10719:10:59',
                              typeDescriptions: {
                                typeIdentifier: 't_function_error_pure$__$returns$__$',
                                typeString: 'function () pure',
                              },
                            },
                            id: 39861,
                            isConstant: false,
                            isLValue: false,
                            isPure: false,
                            kind: 'functionCall',
                            lValueRequested: false,
                            nameLocations: [],
                            names: [],
                            nodeType: 'FunctionCall',
                            src: '10719:12:59',
                            tryCall: false,
                            typeDescriptions: {
                              typeIdentifier: 't_tuple$__$',
                              typeString: 'tuple()',
                            },
                          },
                          id: 39862,
                          nodeType: 'RevertStatement',
                          src: '10712:19:59',
                        },
                      },
                    ],
                  },
                },
              ],
            },
            documentation: {
              id: 39732,
              nodeType: 'StructuredDocumentation',
              src: '9448:332:59',
              text: " @notice Rent storage for multiple fids. The caller must provide an exact payment amount equal to\n         the sum of the prices for each fid's storage allocation.\n @param fids  An array of fids.\n @param units An array of storage unit quantities. Must be the same length as the fids array.",
            },
            functionSelector: 'a82c356e',
            implemented: true,
            kind: 'function',
            modifiers: [
              {
                id: 39741,
                kind: 'modifierInvocation',
                modifierName: {
                  id: 39740,
                  name: 'whenNotDeprecated',
                  nameLocations: ['9872:17:59'],
                  nodeType: 'IdentifierPath',
                  referencedDeclaration: 39651,
                  src: '9872:17:59',
                },
                nodeType: 'ModifierInvocation',
                src: '9872:17:59',
              },
            ],
            name: 'batchRent',
            nameLocation: '9794:9:59',
            parameters: {
              id: 39739,
              nodeType: 'ParameterList',
              parameters: [
                {
                  constant: false,
                  id: 39735,
                  mutability: 'mutable',
                  name: 'fids',
                  nameLocation: '9823:4:59',
                  nodeType: 'VariableDeclaration',
                  scope: 39867,
                  src: '9804:23:59',
                  stateVariable: false,
                  storageLocation: 'calldata',
                  typeDescriptions: {
                    typeIdentifier: 't_array$_t_uint256_$dyn_calldata_ptr',
                    typeString: 'uint256[]',
                  },
                  typeName: {
                    baseType: {
                      id: 39733,
                      name: 'uint256',
                      nodeType: 'ElementaryTypeName',
                      src: '9804:7:59',
                      typeDescriptions: {
                        typeIdentifier: 't_uint256',
                        typeString: 'uint256',
                      },
                    },
                    id: 39734,
                    nodeType: 'ArrayTypeName',
                    src: '9804:9:59',
                    typeDescriptions: {
                      typeIdentifier: 't_array$_t_uint256_$dyn_storage_ptr',
                      typeString: 'uint256[]',
                    },
                  },
                  visibility: 'internal',
                },
                {
                  constant: false,
                  id: 39738,
                  mutability: 'mutable',
                  name: 'units',
                  nameLocation: '9848:5:59',
                  nodeType: 'VariableDeclaration',
                  scope: 39867,
                  src: '9829:24:59',
                  stateVariable: false,
                  storageLocation: 'calldata',
                  typeDescriptions: {
                    typeIdentifier: 't_array$_t_uint256_$dyn_calldata_ptr',
                    typeString: 'uint256[]',
                  },
                  typeName: {
                    baseType: {
                      id: 39736,
                      name: 'uint256',
                      nodeType: 'ElementaryTypeName',
                      src: '9829:7:59',
                      typeDescriptions: {
                        typeIdentifier: 't_uint256',
                        typeString: 'uint256',
                      },
                    },
                    id: 39737,
                    nodeType: 'ArrayTypeName',
                    src: '9829:9:59',
                    typeDescriptions: {
                      typeIdentifier: 't_array$_t_uint256_$dyn_storage_ptr',
                      typeString: 'uint256[]',
                    },
                  },
                  visibility: 'internal',
                },
              ],
              src: '9803:51:59',
            },
            returnParameters: {
              id: 39742,
              nodeType: 'ParameterList',
              parameters: [],
              src: '9890:0:59',
            },
            scope: 40314,
            stateMutability: 'payable',
            virtual: false,
            visibility: 'external',
          },
          {
            id: 39878,
            nodeType: 'FunctionDefinition',
            src: '11040:85:59',
            nodes: [],
            body: {
              id: 39877,
              nodeType: 'Block',
              src: '11093:32:59',
              nodes: [],
              statements: [
                {
                  expression: {
                    arguments: [
                      {
                        hexValue: '31',
                        id: 39874,
                        isConstant: false,
                        isLValue: false,
                        isPure: true,
                        kind: 'number',
                        lValueRequested: false,
                        nodeType: 'Literal',
                        src: '11116:1:59',
                        typeDescriptions: {
                          typeIdentifier: 't_rational_1_by_1',
                          typeString: 'int_const 1',
                        },
                        value: '1',
                      },
                    ],
                    expression: {
                      argumentTypes: [
                        {
                          typeIdentifier: 't_rational_1_by_1',
                          typeString: 'int_const 1',
                        },
                      ],
                      id: 39873,
                      name: 'price',
                      nodeType: 'Identifier',
                      overloadedDeclarations: [],
                      referencedDeclaration: 39893,
                      src: '11110:5:59',
                      typeDescriptions: {
                        typeIdentifier: 't_function_internal_view$_t_uint256_$returns$_t_uint256_$',
                        typeString: 'function (uint256) view returns (uint256)',
                      },
                    },
                    id: 39875,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    kind: 'functionCall',
                    lValueRequested: false,
                    nameLocations: [],
                    names: [],
                    nodeType: 'FunctionCall',
                    src: '11110:8:59',
                    tryCall: false,
                    typeDescriptions: {
                      typeIdentifier: 't_uint256',
                      typeString: 'uint256',
                    },
                  },
                  functionReturnParameters: 39872,
                  id: 39876,
                  nodeType: 'Return',
                  src: '11103:15:59',
                },
              ],
            },
            documentation: {
              id: 39868,
              nodeType: 'StructuredDocumentation',
              src: '10935:100:59',
              text: ' @notice Cost in wei to rent one storage unit.\n @return uint256 cost in wei.',
            },
            functionSelector: 'e73faa2d',
            implemented: true,
            kind: 'function',
            modifiers: [],
            name: 'unitPrice',
            nameLocation: '11049:9:59',
            parameters: {
              id: 39869,
              nodeType: 'ParameterList',
              parameters: [],
              src: '11058:2:59',
            },
            returnParameters: {
              id: 39872,
              nodeType: 'ParameterList',
              parameters: [
                {
                  constant: false,
                  id: 39871,
                  mutability: 'mutable',
                  name: '',
                  nameLocation: '-1:-1:-1',
                  nodeType: 'VariableDeclaration',
                  scope: 39878,
                  src: '11084:7:59',
                  stateVariable: false,
                  storageLocation: 'default',
                  typeDescriptions: {
                    typeIdentifier: 't_uint256',
                    typeString: 'uint256',
                  },
                  typeName: {
                    id: 39870,
                    name: 'uint256',
                    nodeType: 'ElementaryTypeName',
                    src: '11084:7:59',
                    typeDescriptions: {
                      typeIdentifier: 't_uint256',
                      typeString: 'uint256',
                    },
                  },
                  visibility: 'internal',
                },
              ],
              src: '11083:9:59',
            },
            scope: 40314,
            stateMutability: 'view',
            virtual: false,
            visibility: 'external',
          },
          {
            id: 39893,
            nodeType: 'FunctionDefinition',
            src: '11319:124:59',
            nodes: [],
            body: {
              id: 39892,
              nodeType: 'Block',
              src: '11379:64:59',
              nodes: [],
              statements: [
                {
                  expression: {
                    arguments: [
                      {
                        id: 39887,
                        name: 'units',
                        nodeType: 'Identifier',
                        overloadedDeclarations: [],
                        referencedDeclaration: 39881,
                        src: '11403:5:59',
                        typeDescriptions: {
                          typeIdentifier: 't_uint256',
                          typeString: 'uint256',
                        },
                      },
                      {
                        id: 39888,
                        name: 'usdUnitPrice',
                        nodeType: 'Identifier',
                        overloadedDeclarations: [],
                        referencedDeclaration: 39564,
                        src: '11410:12:59',
                        typeDescriptions: {
                          typeIdentifier: 't_uint256',
                          typeString: 'uint256',
                        },
                      },
                      {
                        id: 39889,
                        name: 'ethUsdPrice',
                        nodeType: 'Identifier',
                        overloadedDeclarations: [],
                        referencedDeclaration: 39579,
                        src: '11424:11:59',
                        typeDescriptions: {
                          typeIdentifier: 't_uint256',
                          typeString: 'uint256',
                        },
                      },
                    ],
                    expression: {
                      argumentTypes: [
                        {
                          typeIdentifier: 't_uint256',
                          typeString: 'uint256',
                        },
                        {
                          typeIdentifier: 't_uint256',
                          typeString: 'uint256',
                        },
                        {
                          typeIdentifier: 't_uint256',
                          typeString: 'uint256',
                        },
                      ],
                      id: 39886,
                      name: '_price',
                      nodeType: 'Identifier',
                      overloadedDeclarations: [40044, 40065],
                      referencedDeclaration: 40065,
                      src: '11396:6:59',
                      typeDescriptions: {
                        typeIdentifier:
                          't_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$',
                        typeString: 'function (uint256,uint256,uint256) pure returns (uint256)',
                      },
                    },
                    id: 39890,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    kind: 'functionCall',
                    lValueRequested: false,
                    nameLocations: [],
                    names: [],
                    nodeType: 'FunctionCall',
                    src: '11396:40:59',
                    tryCall: false,
                    typeDescriptions: {
                      typeIdentifier: 't_uint256',
                      typeString: 'uint256',
                    },
                  },
                  functionReturnParameters: 39885,
                  id: 39891,
                  nodeType: 'Return',
                  src: '11389:47:59',
                },
              ],
            },
            documentation: {
              id: 39879,
              nodeType: 'StructuredDocumentation',
              src: '11131:183:59',
              text: ' @notice Calculate the cost in wei to rent the given number of storage units.\n @param units Number of storage units.\n @return uint256 cost in wei.',
            },
            functionSelector: '26a49e37',
            implemented: true,
            kind: 'function',
            modifiers: [],
            name: 'price',
            nameLocation: '11328:5:59',
            parameters: {
              id: 39882,
              nodeType: 'ParameterList',
              parameters: [
                {
                  constant: false,
                  id: 39881,
                  mutability: 'mutable',
                  name: 'units',
                  nameLocation: '11342:5:59',
                  nodeType: 'VariableDeclaration',
                  scope: 39893,
                  src: '11334:13:59',
                  stateVariable: false,
                  storageLocation: 'default',
                  typeDescriptions: {
                    typeIdentifier: 't_uint256',
                    typeString: 'uint256',
                  },
                  typeName: {
                    id: 39880,
                    name: 'uint256',
                    nodeType: 'ElementaryTypeName',
                    src: '11334:7:59',
                    typeDescriptions: {
                      typeIdentifier: 't_uint256',
                      typeString: 'uint256',
                    },
                  },
                  visibility: 'internal',
                },
              ],
              src: '11333:15:59',
            },
            returnParameters: {
              id: 39885,
              nodeType: 'ParameterList',
              parameters: [
                {
                  constant: false,
                  id: 39884,
                  mutability: 'mutable',
                  name: '',
                  nameLocation: '-1:-1:-1',
                  nodeType: 'VariableDeclaration',
                  scope: 39893,
                  src: '11370:7:59',
                  stateVariable: false,
                  storageLocation: 'default',
                  typeDescriptions: {
                    typeIdentifier: 't_uint256',
                    typeString: 'uint256',
                  },
                  typeName: {
                    id: 39883,
                    name: 'uint256',
                    nodeType: 'ElementaryTypeName',
                    src: '11370:7:59',
                    typeDescriptions: {
                      typeIdentifier: 't_uint256',
                      typeString: 'uint256',
                    },
                  },
                  visibility: 'internal',
                },
              ],
              src: '11369:9:59',
            },
            scope: 40314,
            stateMutability: 'view',
            virtual: false,
            visibility: 'public',
          },
          {
            id: 39918,
            nodeType: 'FunctionDefinition',
            src: '11621:468:59',
            nodes: [],
            body: {
              id: 39917,
              nodeType: 'Block',
              src: '11672:417:59',
              nodes: [],
              statements: [
                {
                  condition: {
                    commonType: {
                      typeIdentifier: 't_uint256',
                      typeString: 'uint256',
                    },
                    id: 39904,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    lValueRequested: false,
                    leftExpression: {
                      commonType: {
                        typeIdentifier: 't_uint256',
                        typeString: 'uint256',
                      },
                      id: 39902,
                      isConstant: false,
                      isLValue: false,
                      isPure: false,
                      lValueRequested: false,
                      leftExpression: {
                        expression: {
                          id: 39899,
                          name: 'block',
                          nodeType: 'Identifier',
                          overloadedDeclarations: [],
                          referencedDeclaration: -4,
                          src: '11686:5:59',
                          typeDescriptions: {
                            typeIdentifier: 't_magic_block',
                            typeString: 'block',
                          },
                        },
                        id: 39900,
                        isConstant: false,
                        isLValue: false,
                        isPure: false,
                        lValueRequested: false,
                        memberLocation: '11692:9:59',
                        memberName: 'timestamp',
                        nodeType: 'MemberAccess',
                        src: '11686:15:59',
                        typeDescriptions: {
                          typeIdentifier: 't_uint256',
                          typeString: 'uint256',
                        },
                      },
                      nodeType: 'BinaryOperation',
                      operator: '-',
                      rightExpression: {
                        id: 39901,
                        name: 'lastPriceFeedUpdate',
                        nodeType: 'Identifier',
                        overloadedDeclarations: [],
                        referencedDeclaration: 39582,
                        src: '11704:19:59',
                        typeDescriptions: {
                          typeIdentifier: 't_uint256',
                          typeString: 'uint256',
                        },
                      },
                      src: '11686:37:59',
                      typeDescriptions: {
                        typeIdentifier: 't_uint256',
                        typeString: 'uint256',
                      },
                    },
                    nodeType: 'BinaryOperation',
                    operator: '>',
                    rightExpression: {
                      id: 39903,
                      name: 'priceFeedCacheDuration',
                      nodeType: 'Identifier',
                      overloadedDeclarations: [],
                      referencedDeclaration: 39570,
                      src: '11726:22:59',
                      typeDescriptions: {
                        typeIdentifier: 't_uint256',
                        typeString: 'uint256',
                      },
                    },
                    src: '11686:62:59',
                    typeDescriptions: {
                      typeIdentifier: 't_bool',
                      typeString: 'bool',
                    },
                  },
                  falseBody: {
                    id: 39915,
                    nodeType: 'Block',
                    src: '12040:43:59',
                    statements: [
                      {
                        expression: {
                          id: 39913,
                          name: 'ethUsdPrice',
                          nodeType: 'Identifier',
                          overloadedDeclarations: [],
                          referencedDeclaration: 39579,
                          src: '12061:11:59',
                          typeDescriptions: {
                            typeIdentifier: 't_uint256',
                            typeString: 'uint256',
                          },
                        },
                        functionReturnParameters: 39898,
                        id: 39914,
                        nodeType: 'Return',
                        src: '12054:18:59',
                      },
                    ],
                  },
                  id: 39916,
                  nodeType: 'IfStatement',
                  src: '11682:401:59',
                  trueBody: {
                    id: 39912,
                    nodeType: 'Block',
                    src: '11750:284:59',
                    statements: [
                      {
                        assignments: [39906, null],
                        declarations: [
                          {
                            constant: false,
                            id: 39906,
                            mutability: 'mutable',
                            name: 'cachedPrice',
                            nameLocation: '11960:11:59',
                            nodeType: 'VariableDeclaration',
                            scope: 39912,
                            src: '11952:19:59',
                            stateVariable: false,
                            storageLocation: 'default',
                            typeDescriptions: {
                              typeIdentifier: 't_uint256',
                              typeString: 'uint256',
                            },
                            typeName: {
                              id: 39905,
                              name: 'uint256',
                              nodeType: 'ElementaryTypeName',
                              src: '11952:7:59',
                              typeDescriptions: {
                                typeIdentifier: 't_uint256',
                                typeString: 'uint256',
                              },
                            },
                            visibility: 'internal',
                          },
                          null,
                        ],
                        documentation:
                          '  The call to _refreshPrice will cache the new price in storage\n  for the next call, but we honor the old price for this call.',
                        id: 39909,
                        initialValue: {
                          arguments: [],
                          expression: {
                            argumentTypes: [],
                            id: 39907,
                            name: '_refreshPrice',
                            nodeType: 'Identifier',
                            overloadedDeclarations: [],
                            referencedDeclaration: 40029,
                            src: '11976:13:59',
                            typeDescriptions: {
                              typeIdentifier: 't_function_internal_nonpayable$__$returns$_t_uint256_$_t_uint256_$',
                              typeString: 'function () returns (uint256,uint256)',
                            },
                          },
                          id: 39908,
                          isConstant: false,
                          isLValue: false,
                          isPure: false,
                          kind: 'functionCall',
                          lValueRequested: false,
                          nameLocations: [],
                          names: [],
                          nodeType: 'FunctionCall',
                          src: '11976:15:59',
                          tryCall: false,
                          typeDescriptions: {
                            typeIdentifier: 't_tuple$_t_uint256_$_t_uint256_$',
                            typeString: 'tuple(uint256,uint256)',
                          },
                        },
                        nodeType: 'VariableDeclarationStatement',
                        src: '11951:40:59',
                      },
                      {
                        expression: {
                          id: 39910,
                          name: 'cachedPrice',
                          nodeType: 'Identifier',
                          overloadedDeclarations: [],
                          referencedDeclaration: 39906,
                          src: '12012:11:59',
                          typeDescriptions: {
                            typeIdentifier: 't_uint256',
                            typeString: 'uint256',
                          },
                        },
                        functionReturnParameters: 39898,
                        id: 39911,
                        nodeType: 'Return',
                        src: '12005:18:59',
                      },
                    ],
                  },
                },
              ],
            },
            documentation: {
              id: 39894,
              nodeType: 'StructuredDocumentation',
              src: '11449:167:59',
              text: " @dev Return the cached ethUsdPrice if it's still valid, otherwise get the\n      latest ETH/USD price from the price feed and update the cache.",
            },
            implemented: true,
            kind: 'function',
            modifiers: [],
            name: '_ethUsdPrice',
            nameLocation: '11630:12:59',
            parameters: {
              id: 39895,
              nodeType: 'ParameterList',
              parameters: [],
              src: '11642:2:59',
            },
            returnParameters: {
              id: 39898,
              nodeType: 'ParameterList',
              parameters: [
                {
                  constant: false,
                  id: 39897,
                  mutability: 'mutable',
                  name: '',
                  nameLocation: '-1:-1:-1',
                  nodeType: 'VariableDeclaration',
                  scope: 39918,
                  src: '11663:7:59',
                  stateVariable: false,
                  storageLocation: 'default',
                  typeDescriptions: {
                    typeIdentifier: 't_uint256',
                    typeString: 'uint256',
                  },
                  typeName: {
                    id: 39896,
                    name: 'uint256',
                    nodeType: 'ElementaryTypeName',
                    src: '11663:7:59',
                    typeDescriptions: {
                      typeIdentifier: 't_uint256',
                      typeString: 'uint256',
                    },
                  },
                  visibility: 'internal',
                },
              ],
              src: '11662:9:59',
            },
            scope: 40314,
            stateMutability: 'nonpayable',
            virtual: false,
            visibility: 'internal',
          },
          {
            id: 40029,
            nodeType: 'FunctionDefinition',
            src: '12201:1333:59',
            nodes: [],
            body: {
              id: 40028,
              nodeType: 'Block',
              src: '12283:1251:59',
              nodes: [],
              statements: [
                {
                  assignments: [39927, 39929, 39931, 39933, 39935],
                  declarations: [
                    {
                      constant: false,
                      id: 39927,
                      mutability: 'mutable',
                      name: 'uptimeRoundId',
                      nameLocation: '12370:13:59',
                      nodeType: 'VariableDeclaration',
                      scope: 40028,
                      src: '12363:20:59',
                      stateVariable: false,
                      storageLocation: 'default',
                      typeDescriptions: {
                        typeIdentifier: 't_uint80',
                        typeString: 'uint80',
                      },
                      typeName: {
                        id: 39926,
                        name: 'uint80',
                        nodeType: 'ElementaryTypeName',
                        src: '12363:6:59',
                        typeDescriptions: {
                          typeIdentifier: 't_uint80',
                          typeString: 'uint80',
                        },
                      },
                      visibility: 'internal',
                    },
                    {
                      constant: false,
                      id: 39929,
                      mutability: 'mutable',
                      name: 'sequencerUp',
                      nameLocation: '12404:11:59',
                      nodeType: 'VariableDeclaration',
                      scope: 40028,
                      src: '12397:18:59',
                      stateVariable: false,
                      storageLocation: 'default',
                      typeDescriptions: {
                        typeIdentifier: 't_int256',
                        typeString: 'int256',
                      },
                      typeName: {
                        id: 39928,
                        name: 'int256',
                        nodeType: 'ElementaryTypeName',
                        src: '12397:6:59',
                        typeDescriptions: {
                          typeIdentifier: 't_int256',
                          typeString: 'int256',
                        },
                      },
                      visibility: 'internal',
                    },
                    {
                      constant: false,
                      id: 39931,
                      mutability: 'mutable',
                      name: 'uptimeStartedAt',
                      nameLocation: '12437:15:59',
                      nodeType: 'VariableDeclaration',
                      scope: 40028,
                      src: '12429:23:59',
                      stateVariable: false,
                      storageLocation: 'default',
                      typeDescriptions: {
                        typeIdentifier: 't_uint256',
                        typeString: 'uint256',
                      },
                      typeName: {
                        id: 39930,
                        name: 'uint256',
                        nodeType: 'ElementaryTypeName',
                        src: '12429:7:59',
                        typeDescriptions: {
                          typeIdentifier: 't_uint256',
                          typeString: 'uint256',
                        },
                      },
                      visibility: 'internal',
                    },
                    {
                      constant: false,
                      id: 39933,
                      mutability: 'mutable',
                      name: 'uptimeUpdatedAt',
                      nameLocation: '12474:15:59',
                      nodeType: 'VariableDeclaration',
                      scope: 40028,
                      src: '12466:23:59',
                      stateVariable: false,
                      storageLocation: 'default',
                      typeDescriptions: {
                        typeIdentifier: 't_uint256',
                        typeString: 'uint256',
                      },
                      typeName: {
                        id: 39932,
                        name: 'uint256',
                        nodeType: 'ElementaryTypeName',
                        src: '12466:7:59',
                        typeDescriptions: {
                          typeIdentifier: 't_uint256',
                          typeString: 'uint256',
                        },
                      },
                      visibility: 'internal',
                    },
                    {
                      constant: false,
                      id: 39935,
                      mutability: 'mutable',
                      name: 'uptimeAnsweredInRound',
                      nameLocation: '12510:21:59',
                      nodeType: 'VariableDeclaration',
                      scope: 40028,
                      src: '12503:28:59',
                      stateVariable: false,
                      storageLocation: 'default',
                      typeDescriptions: {
                        typeIdentifier: 't_uint80',
                        typeString: 'uint80',
                      },
                      typeName: {
                        id: 39934,
                        name: 'uint80',
                        nodeType: 'ElementaryTypeName',
                        src: '12503:6:59',
                        typeDescriptions: {
                          typeIdentifier: 't_uint80',
                          typeString: 'uint80',
                        },
                      },
                      visibility: 'internal',
                    },
                  ],
                  id: 39939,
                  initialValue: {
                    arguments: [],
                    expression: {
                      argumentTypes: [],
                      expression: {
                        id: 39936,
                        name: 'uptimeFeed',
                        nodeType: 'Identifier',
                        overloadedDeclarations: [],
                        referencedDeclaration: 39558,
                        src: '12544:10:59',
                        typeDescriptions: {
                          typeIdentifier: 't_contract$_AggregatorV3Interface_$45',
                          typeString: 'contract AggregatorV3Interface',
                        },
                      },
                      id: 39937,
                      isConstant: false,
                      isLValue: false,
                      isPure: false,
                      lValueRequested: false,
                      memberLocation: '12555:15:59',
                      memberName: 'latestRoundData',
                      nodeType: 'MemberAccess',
                      referencedDeclaration: 44,
                      src: '12544:26:59',
                      typeDescriptions: {
                        typeIdentifier:
                          't_function_external_view$__$returns$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$',
                        typeString: 'function () view external returns (uint80,int256,uint256,uint256,uint80)',
                      },
                    },
                    id: 39938,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    kind: 'functionCall',
                    lValueRequested: false,
                    nameLocations: [],
                    names: [],
                    nodeType: 'FunctionCall',
                    src: '12544:28:59',
                    tryCall: false,
                    typeDescriptions: {
                      typeIdentifier: 't_tuple$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$',
                      typeString: 'tuple(uint80,int256,uint256,uint256,uint80)',
                    },
                  },
                  nodeType: 'VariableDeclarationStatement',
                  src: '12349:223:59',
                },
                {
                  condition: {
                    commonType: {
                      typeIdentifier: 't_int256',
                      typeString: 'int256',
                    },
                    id: 39942,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    lValueRequested: false,
                    leftExpression: {
                      id: 39940,
                      name: 'sequencerUp',
                      nodeType: 'Identifier',
                      overloadedDeclarations: [],
                      referencedDeclaration: 39929,
                      src: '12586:11:59',
                      typeDescriptions: {
                        typeIdentifier: 't_int256',
                        typeString: 'int256',
                      },
                    },
                    nodeType: 'BinaryOperation',
                    operator: '!=',
                    rightExpression: {
                      hexValue: '30',
                      id: 39941,
                      isConstant: false,
                      isLValue: false,
                      isPure: true,
                      kind: 'number',
                      lValueRequested: false,
                      nodeType: 'Literal',
                      src: '12601:1:59',
                      typeDescriptions: {
                        typeIdentifier: 't_rational_0_by_1',
                        typeString: 'int_const 0',
                      },
                      value: '0',
                    },
                    src: '12586:16:59',
                    typeDescriptions: {
                      typeIdentifier: 't_bool',
                      typeString: 'bool',
                    },
                  },
                  id: 39946,
                  nodeType: 'IfStatement',
                  src: '12582:44:59',
                  trueBody: {
                    errorCall: {
                      arguments: [],
                      expression: {
                        argumentTypes: [],
                        id: 39943,
                        name: 'SequencerDown',
                        nodeType: 'Identifier',
                        overloadedDeclarations: [],
                        referencedDeclaration: 39489,
                        src: '12611:13:59',
                        typeDescriptions: {
                          typeIdentifier: 't_function_error_pure$__$returns$__$',
                          typeString: 'function () pure',
                        },
                      },
                      id: 39944,
                      isConstant: false,
                      isLValue: false,
                      isPure: false,
                      kind: 'functionCall',
                      lValueRequested: false,
                      nameLocations: [],
                      names: [],
                      nodeType: 'FunctionCall',
                      src: '12611:15:59',
                      tryCall: false,
                      typeDescriptions: {
                        typeIdentifier: 't_tuple$__$',
                        typeString: 'tuple()',
                      },
                    },
                    id: 39945,
                    nodeType: 'RevertStatement',
                    src: '12604:22:59',
                  },
                },
                {
                  condition: {
                    commonType: {
                      typeIdentifier: 't_uint256',
                      typeString: 'uint256',
                    },
                    id: 39949,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    lValueRequested: false,
                    leftExpression: {
                      id: 39947,
                      name: 'uptimeUpdatedAt',
                      nodeType: 'Identifier',
                      overloadedDeclarations: [],
                      referencedDeclaration: 39933,
                      src: '12640:15:59',
                      typeDescriptions: {
                        typeIdentifier: 't_uint256',
                        typeString: 'uint256',
                      },
                    },
                    nodeType: 'BinaryOperation',
                    operator: '==',
                    rightExpression: {
                      hexValue: '30',
                      id: 39948,
                      isConstant: false,
                      isLValue: false,
                      isPure: true,
                      kind: 'number',
                      lValueRequested: false,
                      nodeType: 'Literal',
                      src: '12659:1:59',
                      typeDescriptions: {
                        typeIdentifier: 't_rational_0_by_1',
                        typeString: 'int_const 0',
                      },
                      value: '0',
                    },
                    src: '12640:20:59',
                    typeDescriptions: {
                      typeIdentifier: 't_bool',
                      typeString: 'bool',
                    },
                  },
                  id: 39953,
                  nodeType: 'IfStatement',
                  src: '12636:50:59',
                  trueBody: {
                    errorCall: {
                      arguments: [],
                      expression: {
                        argumentTypes: [],
                        id: 39950,
                        name: 'IncompleteRound',
                        nodeType: 'Identifier',
                        overloadedDeclarations: [],
                        referencedDeclaration: 39483,
                        src: '12669:15:59',
                        typeDescriptions: {
                          typeIdentifier: 't_function_error_pure$__$returns$__$',
                          typeString: 'function () pure',
                        },
                      },
                      id: 39951,
                      isConstant: false,
                      isLValue: false,
                      isPure: false,
                      kind: 'functionCall',
                      lValueRequested: false,
                      nameLocations: [],
                      names: [],
                      nodeType: 'FunctionCall',
                      src: '12669:17:59',
                      tryCall: false,
                      typeDescriptions: {
                        typeIdentifier: 't_tuple$__$',
                        typeString: 'tuple()',
                      },
                    },
                    id: 39952,
                    nodeType: 'RevertStatement',
                    src: '12662:24:59',
                  },
                },
                {
                  condition: {
                    commonType: {
                      typeIdentifier: 't_uint80',
                      typeString: 'uint80',
                    },
                    id: 39956,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    lValueRequested: false,
                    leftExpression: {
                      id: 39954,
                      name: 'uptimeAnsweredInRound',
                      nodeType: 'Identifier',
                      overloadedDeclarations: [],
                      referencedDeclaration: 39935,
                      src: '12700:21:59',
                      typeDescriptions: {
                        typeIdentifier: 't_uint80',
                        typeString: 'uint80',
                      },
                    },
                    nodeType: 'BinaryOperation',
                    operator: '<',
                    rightExpression: {
                      id: 39955,
                      name: 'uptimeRoundId',
                      nodeType: 'Identifier',
                      overloadedDeclarations: [],
                      referencedDeclaration: 39927,
                      src: '12724:13:59',
                      typeDescriptions: {
                        typeIdentifier: 't_uint80',
                        typeString: 'uint80',
                      },
                    },
                    src: '12700:37:59',
                    typeDescriptions: {
                      typeIdentifier: 't_bool',
                      typeString: 'bool',
                    },
                  },
                  id: 39960,
                  nodeType: 'IfStatement',
                  src: '12696:63:59',
                  trueBody: {
                    errorCall: {
                      arguments: [],
                      expression: {
                        argumentTypes: [],
                        id: 39957,
                        name: 'StaleAnswer',
                        nodeType: 'Identifier',
                        overloadedDeclarations: [],
                        referencedDeclaration: 39480,
                        src: '12746:11:59',
                        typeDescriptions: {
                          typeIdentifier: 't_function_error_pure$__$returns$__$',
                          typeString: 'function () pure',
                        },
                      },
                      id: 39958,
                      isConstant: false,
                      isLValue: false,
                      isPure: false,
                      kind: 'functionCall',
                      lValueRequested: false,
                      nameLocations: [],
                      names: [],
                      nodeType: 'FunctionCall',
                      src: '12746:13:59',
                      tryCall: false,
                      typeDescriptions: {
                        typeIdentifier: 't_tuple$__$',
                        typeString: 'tuple()',
                      },
                    },
                    id: 39959,
                    nodeType: 'RevertStatement',
                    src: '12739:20:59',
                  },
                },
                {
                  assignments: [39962],
                  declarations: [
                    {
                      constant: false,
                      id: 39962,
                      mutability: 'mutable',
                      name: 'timeSinceUp',
                      nameLocation: '12869:11:59',
                      nodeType: 'VariableDeclaration',
                      scope: 40028,
                      src: '12861:19:59',
                      stateVariable: false,
                      storageLocation: 'default',
                      typeDescriptions: {
                        typeIdentifier: 't_uint256',
                        typeString: 'uint256',
                      },
                      typeName: {
                        id: 39961,
                        name: 'uint256',
                        nodeType: 'ElementaryTypeName',
                        src: '12861:7:59',
                        typeDescriptions: {
                          typeIdentifier: 't_uint256',
                          typeString: 'uint256',
                        },
                      },
                      visibility: 'internal',
                    },
                  ],
                  id: 39967,
                  initialValue: {
                    commonType: {
                      typeIdentifier: 't_uint256',
                      typeString: 'uint256',
                    },
                    id: 39966,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    lValueRequested: false,
                    leftExpression: {
                      expression: {
                        id: 39963,
                        name: 'block',
                        nodeType: 'Identifier',
                        overloadedDeclarations: [],
                        referencedDeclaration: -4,
                        src: '12883:5:59',
                        typeDescriptions: {
                          typeIdentifier: 't_magic_block',
                          typeString: 'block',
                        },
                      },
                      id: 39964,
                      isConstant: false,
                      isLValue: false,
                      isPure: false,
                      lValueRequested: false,
                      memberLocation: '12889:9:59',
                      memberName: 'timestamp',
                      nodeType: 'MemberAccess',
                      src: '12883:15:59',
                      typeDescriptions: {
                        typeIdentifier: 't_uint256',
                        typeString: 'uint256',
                      },
                    },
                    nodeType: 'BinaryOperation',
                    operator: '-',
                    rightExpression: {
                      id: 39965,
                      name: 'uptimeStartedAt',
                      nodeType: 'Identifier',
                      overloadedDeclarations: [],
                      referencedDeclaration: 39931,
                      src: '12901:15:59',
                      typeDescriptions: {
                        typeIdentifier: 't_uint256',
                        typeString: 'uint256',
                      },
                    },
                    src: '12883:33:59',
                    typeDescriptions: {
                      typeIdentifier: 't_uint256',
                      typeString: 'uint256',
                    },
                  },
                  nodeType: 'VariableDeclarationStatement',
                  src: '12861:55:59',
                },
                {
                  condition: {
                    commonType: {
                      typeIdentifier: 't_uint256',
                      typeString: 'uint256',
                    },
                    id: 39970,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    lValueRequested: false,
                    leftExpression: {
                      id: 39968,
                      name: 'timeSinceUp',
                      nodeType: 'Identifier',
                      overloadedDeclarations: [],
                      referencedDeclaration: 39962,
                      src: '12930:11:59',
                      typeDescriptions: {
                        typeIdentifier: 't_uint256',
                        typeString: 'uint256',
                      },
                    },
                    nodeType: 'BinaryOperation',
                    operator: '<',
                    rightExpression: {
                      id: 39969,
                      name: 'uptimeFeedGracePeriod',
                      nodeType: 'Identifier',
                      overloadedDeclarations: [],
                      referencedDeclaration: 39573,
                      src: '12944:21:59',
                      typeDescriptions: {
                        typeIdentifier: 't_uint256',
                        typeString: 'uint256',
                      },
                    },
                    src: '12930:35:59',
                    typeDescriptions: {
                      typeIdentifier: 't_bool',
                      typeString: 'bool',
                    },
                  },
                  id: 39974,
                  nodeType: 'IfStatement',
                  src: '12926:68:59',
                  trueBody: {
                    errorCall: {
                      arguments: [],
                      expression: {
                        argumentTypes: [],
                        id: 39971,
                        name: 'GracePeriodNotOver',
                        nodeType: 'Identifier',
                        overloadedDeclarations: [],
                        referencedDeclaration: 39492,
                        src: '12974:18:59',
                        typeDescriptions: {
                          typeIdentifier: 't_function_error_pure$__$returns$__$',
                          typeString: 'function () pure',
                        },
                      },
                      id: 39972,
                      isConstant: false,
                      isLValue: false,
                      isPure: false,
                      kind: 'functionCall',
                      lValueRequested: false,
                      nameLocations: [],
                      names: [],
                      nodeType: 'FunctionCall',
                      src: '12974:20:59',
                      tryCall: false,
                      typeDescriptions: {
                        typeIdentifier: 't_tuple$__$',
                        typeString: 'tuple()',
                      },
                    },
                    id: 39973,
                    nodeType: 'RevertStatement',
                    src: '12967:27:59',
                  },
                },
                {
                  assignments: [39976, 39978, null, 39980, 39982],
                  declarations: [
                    {
                      constant: false,
                      id: 39976,
                      mutability: 'mutable',
                      name: 'priceRoundId',
                      nameLocation: '13073:12:59',
                      nodeType: 'VariableDeclaration',
                      scope: 40028,
                      src: '13066:19:59',
                      stateVariable: false,
                      storageLocation: 'default',
                      typeDescriptions: {
                        typeIdentifier: 't_uint80',
                        typeString: 'uint80',
                      },
                      typeName: {
                        id: 39975,
                        name: 'uint80',
                        nodeType: 'ElementaryTypeName',
                        src: '13066:6:59',
                        typeDescriptions: {
                          typeIdentifier: 't_uint80',
                          typeString: 'uint80',
                        },
                      },
                      visibility: 'internal',
                    },
                    {
                      constant: false,
                      id: 39978,
                      mutability: 'mutable',
                      name: 'answer',
                      nameLocation: '13094:6:59',
                      nodeType: 'VariableDeclaration',
                      scope: 40028,
                      src: '13087:13:59',
                      stateVariable: false,
                      storageLocation: 'default',
                      typeDescriptions: {
                        typeIdentifier: 't_int256',
                        typeString: 'int256',
                      },
                      typeName: {
                        id: 39977,
                        name: 'int256',
                        nodeType: 'ElementaryTypeName',
                        src: '13087:6:59',
                        typeDescriptions: {
                          typeIdentifier: 't_int256',
                          typeString: 'int256',
                        },
                      },
                      visibility: 'internal',
                    },
                    null,
                    {
                      constant: false,
                      id: 39980,
                      mutability: 'mutable',
                      name: 'priceUpdatedAt',
                      nameLocation: '13111:14:59',
                      nodeType: 'VariableDeclaration',
                      scope: 40028,
                      src: '13103:22:59',
                      stateVariable: false,
                      storageLocation: 'default',
                      typeDescriptions: {
                        typeIdentifier: 't_uint256',
                        typeString: 'uint256',
                      },
                      typeName: {
                        id: 39979,
                        name: 'uint256',
                        nodeType: 'ElementaryTypeName',
                        src: '13103:7:59',
                        typeDescriptions: {
                          typeIdentifier: 't_uint256',
                          typeString: 'uint256',
                        },
                      },
                      visibility: 'internal',
                    },
                    {
                      constant: false,
                      id: 39982,
                      mutability: 'mutable',
                      name: 'priceAnsweredInRound',
                      nameLocation: '13134:20:59',
                      nodeType: 'VariableDeclaration',
                      scope: 40028,
                      src: '13127:27:59',
                      stateVariable: false,
                      storageLocation: 'default',
                      typeDescriptions: {
                        typeIdentifier: 't_uint80',
                        typeString: 'uint80',
                      },
                      typeName: {
                        id: 39981,
                        name: 'uint80',
                        nodeType: 'ElementaryTypeName',
                        src: '13127:6:59',
                        typeDescriptions: {
                          typeIdentifier: 't_uint80',
                          typeString: 'uint80',
                        },
                      },
                      visibility: 'internal',
                    },
                  ],
                  id: 39986,
                  initialValue: {
                    arguments: [],
                    expression: {
                      argumentTypes: [],
                      expression: {
                        id: 39983,
                        name: 'priceFeed',
                        nodeType: 'Identifier',
                        overloadedDeclarations: [],
                        referencedDeclaration: 39554,
                        src: '13170:9:59',
                        typeDescriptions: {
                          typeIdentifier: 't_contract$_AggregatorV3Interface_$45',
                          typeString: 'contract AggregatorV3Interface',
                        },
                      },
                      id: 39984,
                      isConstant: false,
                      isLValue: false,
                      isPure: false,
                      lValueRequested: false,
                      memberLocation: '13180:15:59',
                      memberName: 'latestRoundData',
                      nodeType: 'MemberAccess',
                      referencedDeclaration: 44,
                      src: '13170:25:59',
                      typeDescriptions: {
                        typeIdentifier:
                          't_function_external_view$__$returns$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$',
                        typeString: 'function () view external returns (uint80,int256,uint256,uint256,uint80)',
                      },
                    },
                    id: 39985,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    kind: 'functionCall',
                    lValueRequested: false,
                    nameLocations: [],
                    names: [],
                    nodeType: 'FunctionCall',
                    src: '13170:27:59',
                    tryCall: false,
                    typeDescriptions: {
                      typeIdentifier: 't_tuple$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$',
                      typeString: 'tuple(uint80,int256,uint256,uint256,uint80)',
                    },
                  },
                  nodeType: 'VariableDeclarationStatement',
                  src: '13065:132:59',
                },
                {
                  condition: {
                    commonType: {
                      typeIdentifier: 't_int256',
                      typeString: 'int256',
                    },
                    id: 39989,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    lValueRequested: false,
                    leftExpression: {
                      id: 39987,
                      name: 'answer',
                      nodeType: 'Identifier',
                      overloadedDeclarations: [],
                      referencedDeclaration: 39978,
                      src: '13211:6:59',
                      typeDescriptions: {
                        typeIdentifier: 't_int256',
                        typeString: 'int256',
                      },
                    },
                    nodeType: 'BinaryOperation',
                    operator: '<=',
                    rightExpression: {
                      hexValue: '30',
                      id: 39988,
                      isConstant: false,
                      isLValue: false,
                      isPure: true,
                      kind: 'number',
                      lValueRequested: false,
                      nodeType: 'Literal',
                      src: '13221:1:59',
                      typeDescriptions: {
                        typeIdentifier: 't_rational_0_by_1',
                        typeString: 'int_const 0',
                      },
                      value: '0',
                    },
                    src: '13211:11:59',
                    typeDescriptions: {
                      typeIdentifier: 't_bool',
                      typeString: 'bool',
                    },
                  },
                  id: 39993,
                  nodeType: 'IfStatement',
                  src: '13207:38:59',
                  trueBody: {
                    errorCall: {
                      arguments: [],
                      expression: {
                        argumentTypes: [],
                        id: 39990,
                        name: 'InvalidPrice',
                        nodeType: 'Identifier',
                        overloadedDeclarations: [],
                        referencedDeclaration: 39486,
                        src: '13231:12:59',
                        typeDescriptions: {
                          typeIdentifier: 't_function_error_pure$__$returns$__$',
                          typeString: 'function () pure',
                        },
                      },
                      id: 39991,
                      isConstant: false,
                      isLValue: false,
                      isPure: false,
                      kind: 'functionCall',
                      lValueRequested: false,
                      nameLocations: [],
                      names: [],
                      nodeType: 'FunctionCall',
                      src: '13231:14:59',
                      tryCall: false,
                      typeDescriptions: {
                        typeIdentifier: 't_tuple$__$',
                        typeString: 'tuple()',
                      },
                    },
                    id: 39992,
                    nodeType: 'RevertStatement',
                    src: '13224:21:59',
                  },
                },
                {
                  condition: {
                    commonType: {
                      typeIdentifier: 't_uint256',
                      typeString: 'uint256',
                    },
                    id: 39996,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    lValueRequested: false,
                    leftExpression: {
                      id: 39994,
                      name: 'priceUpdatedAt',
                      nodeType: 'Identifier',
                      overloadedDeclarations: [],
                      referencedDeclaration: 39980,
                      src: '13259:14:59',
                      typeDescriptions: {
                        typeIdentifier: 't_uint256',
                        typeString: 'uint256',
                      },
                    },
                    nodeType: 'BinaryOperation',
                    operator: '==',
                    rightExpression: {
                      hexValue: '30',
                      id: 39995,
                      isConstant: false,
                      isLValue: false,
                      isPure: true,
                      kind: 'number',
                      lValueRequested: false,
                      nodeType: 'Literal',
                      src: '13277:1:59',
                      typeDescriptions: {
                        typeIdentifier: 't_rational_0_by_1',
                        typeString: 'int_const 0',
                      },
                      value: '0',
                    },
                    src: '13259:19:59',
                    typeDescriptions: {
                      typeIdentifier: 't_bool',
                      typeString: 'bool',
                    },
                  },
                  id: 40000,
                  nodeType: 'IfStatement',
                  src: '13255:49:59',
                  trueBody: {
                    errorCall: {
                      arguments: [],
                      expression: {
                        argumentTypes: [],
                        id: 39997,
                        name: 'IncompleteRound',
                        nodeType: 'Identifier',
                        overloadedDeclarations: [],
                        referencedDeclaration: 39483,
                        src: '13287:15:59',
                        typeDescriptions: {
                          typeIdentifier: 't_function_error_pure$__$returns$__$',
                          typeString: 'function () pure',
                        },
                      },
                      id: 39998,
                      isConstant: false,
                      isLValue: false,
                      isPure: false,
                      kind: 'functionCall',
                      lValueRequested: false,
                      nameLocations: [],
                      names: [],
                      nodeType: 'FunctionCall',
                      src: '13287:17:59',
                      tryCall: false,
                      typeDescriptions: {
                        typeIdentifier: 't_tuple$__$',
                        typeString: 'tuple()',
                      },
                    },
                    id: 39999,
                    nodeType: 'RevertStatement',
                    src: '13280:24:59',
                  },
                },
                {
                  condition: {
                    commonType: {
                      typeIdentifier: 't_uint80',
                      typeString: 'uint80',
                    },
                    id: 40003,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    lValueRequested: false,
                    leftExpression: {
                      id: 40001,
                      name: 'priceAnsweredInRound',
                      nodeType: 'Identifier',
                      overloadedDeclarations: [],
                      referencedDeclaration: 39982,
                      src: '13318:20:59',
                      typeDescriptions: {
                        typeIdentifier: 't_uint80',
                        typeString: 'uint80',
                      },
                    },
                    nodeType: 'BinaryOperation',
                    operator: '<',
                    rightExpression: {
                      id: 40002,
                      name: 'priceRoundId',
                      nodeType: 'Identifier',
                      overloadedDeclarations: [],
                      referencedDeclaration: 39976,
                      src: '13341:12:59',
                      typeDescriptions: {
                        typeIdentifier: 't_uint80',
                        typeString: 'uint80',
                      },
                    },
                    src: '13318:35:59',
                    typeDescriptions: {
                      typeIdentifier: 't_bool',
                      typeString: 'bool',
                    },
                  },
                  id: 40007,
                  nodeType: 'IfStatement',
                  src: '13314:61:59',
                  trueBody: {
                    errorCall: {
                      arguments: [],
                      expression: {
                        argumentTypes: [],
                        id: 40004,
                        name: 'StaleAnswer',
                        nodeType: 'Identifier',
                        overloadedDeclarations: [],
                        referencedDeclaration: 39480,
                        src: '13362:11:59',
                        typeDescriptions: {
                          typeIdentifier: 't_function_error_pure$__$returns$__$',
                          typeString: 'function () pure',
                        },
                      },
                      id: 40005,
                      isConstant: false,
                      isLValue: false,
                      isPure: false,
                      kind: 'functionCall',
                      lValueRequested: false,
                      nameLocations: [],
                      names: [],
                      nodeType: 'FunctionCall',
                      src: '13362:13:59',
                      tryCall: false,
                      typeDescriptions: {
                        typeIdentifier: 't_tuple$__$',
                        typeString: 'tuple()',
                      },
                    },
                    id: 40006,
                    nodeType: 'RevertStatement',
                    src: '13355:20:59',
                  },
                },
                {
                  expression: {
                    id: 40010,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    lValueRequested: false,
                    leftHandSide: {
                      id: 40008,
                      name: 'cachedPrice',
                      nodeType: 'Identifier',
                      overloadedDeclarations: [],
                      referencedDeclaration: 39922,
                      src: '13386:11:59',
                      typeDescriptions: {
                        typeIdentifier: 't_uint256',
                        typeString: 'uint256',
                      },
                    },
                    nodeType: 'Assignment',
                    operator: '=',
                    rightHandSide: {
                      id: 40009,
                      name: 'ethUsdPrice',
                      nodeType: 'Identifier',
                      overloadedDeclarations: [],
                      referencedDeclaration: 39579,
                      src: '13400:11:59',
                      typeDescriptions: {
                        typeIdentifier: 't_uint256',
                        typeString: 'uint256',
                      },
                    },
                    src: '13386:25:59',
                    typeDescriptions: {
                      typeIdentifier: 't_uint256',
                      typeString: 'uint256',
                    },
                  },
                  id: 40011,
                  nodeType: 'ExpressionStatement',
                  src: '13386:25:59',
                },
                {
                  expression: {
                    id: 40017,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    lValueRequested: false,
                    leftHandSide: {
                      id: 40012,
                      name: 'newPrice',
                      nodeType: 'Identifier',
                      overloadedDeclarations: [],
                      referencedDeclaration: 39924,
                      src: '13421:8:59',
                      typeDescriptions: {
                        typeIdentifier: 't_uint256',
                        typeString: 'uint256',
                      },
                    },
                    nodeType: 'Assignment',
                    operator: '=',
                    rightHandSide: {
                      arguments: [
                        {
                          id: 40015,
                          name: 'answer',
                          nodeType: 'Identifier',
                          overloadedDeclarations: [],
                          referencedDeclaration: 39978,
                          src: '13440:6:59',
                          typeDescriptions: {
                            typeIdentifier: 't_int256',
                            typeString: 'int256',
                          },
                        },
                      ],
                      expression: {
                        argumentTypes: [
                          {
                            typeIdentifier: 't_int256',
                            typeString: 'int256',
                          },
                        ],
                        id: 40014,
                        isConstant: false,
                        isLValue: false,
                        isPure: true,
                        lValueRequested: false,
                        nodeType: 'ElementaryTypeNameExpression',
                        src: '13432:7:59',
                        typeDescriptions: {
                          typeIdentifier: 't_type$_t_uint256_$',
                          typeString: 'type(uint256)',
                        },
                        typeName: {
                          id: 40013,
                          name: 'uint256',
                          nodeType: 'ElementaryTypeName',
                          src: '13432:7:59',
                          typeDescriptions: {},
                        },
                      },
                      id: 40016,
                      isConstant: false,
                      isLValue: false,
                      isPure: false,
                      kind: 'typeConversion',
                      lValueRequested: false,
                      nameLocations: [],
                      names: [],
                      nodeType: 'FunctionCall',
                      src: '13432:15:59',
                      tryCall: false,
                      typeDescriptions: {
                        typeIdentifier: 't_uint256',
                        typeString: 'uint256',
                      },
                    },
                    src: '13421:26:59',
                    typeDescriptions: {
                      typeIdentifier: 't_uint256',
                      typeString: 'uint256',
                    },
                  },
                  id: 40018,
                  nodeType: 'ExpressionStatement',
                  src: '13421:26:59',
                },
                {
                  expression: {
                    id: 40022,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    lValueRequested: false,
                    leftHandSide: {
                      id: 40019,
                      name: 'lastPriceFeedUpdate',
                      nodeType: 'Identifier',
                      overloadedDeclarations: [],
                      referencedDeclaration: 39582,
                      src: '13458:19:59',
                      typeDescriptions: {
                        typeIdentifier: 't_uint256',
                        typeString: 'uint256',
                      },
                    },
                    nodeType: 'Assignment',
                    operator: '=',
                    rightHandSide: {
                      expression: {
                        id: 40020,
                        name: 'block',
                        nodeType: 'Identifier',
                        overloadedDeclarations: [],
                        referencedDeclaration: -4,
                        src: '13480:5:59',
                        typeDescriptions: {
                          typeIdentifier: 't_magic_block',
                          typeString: 'block',
                        },
                      },
                      id: 40021,
                      isConstant: false,
                      isLValue: false,
                      isPure: false,
                      lValueRequested: false,
                      memberLocation: '13486:9:59',
                      memberName: 'timestamp',
                      nodeType: 'MemberAccess',
                      src: '13480:15:59',
                      typeDescriptions: {
                        typeIdentifier: 't_uint256',
                        typeString: 'uint256',
                      },
                    },
                    src: '13458:37:59',
                    typeDescriptions: {
                      typeIdentifier: 't_uint256',
                      typeString: 'uint256',
                    },
                  },
                  id: 40023,
                  nodeType: 'ExpressionStatement',
                  src: '13458:37:59',
                },
                {
                  expression: {
                    id: 40026,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    lValueRequested: false,
                    leftHandSide: {
                      id: 40024,
                      name: 'ethUsdPrice',
                      nodeType: 'Identifier',
                      overloadedDeclarations: [],
                      referencedDeclaration: 39579,
                      src: '13505:11:59',
                      typeDescriptions: {
                        typeIdentifier: 't_uint256',
                        typeString: 'uint256',
                      },
                    },
                    nodeType: 'Assignment',
                    operator: '=',
                    rightHandSide: {
                      id: 40025,
                      name: 'newPrice',
                      nodeType: 'Identifier',
                      overloadedDeclarations: [],
                      referencedDeclaration: 39924,
                      src: '13519:8:59',
                      typeDescriptions: {
                        typeIdentifier: 't_uint256',
                        typeString: 'uint256',
                      },
                    },
                    src: '13505:22:59',
                    typeDescriptions: {
                      typeIdentifier: 't_uint256',
                      typeString: 'uint256',
                    },
                  },
                  id: 40027,
                  nodeType: 'ExpressionStatement',
                  src: '13505:22:59',
                },
              ],
            },
            documentation: {
              id: 39919,
              nodeType: 'StructuredDocumentation',
              src: '12095:101:59',
              text: ' @dev Get the latest ETH/USD price from the price feed and update the cached price.',
            },
            implemented: true,
            kind: 'function',
            modifiers: [],
            name: '_refreshPrice',
            nameLocation: '12210:13:59',
            parameters: {
              id: 39920,
              nodeType: 'ParameterList',
              parameters: [],
              src: '12223:2:59',
            },
            returnParameters: {
              id: 39925,
              nodeType: 'ParameterList',
              parameters: [
                {
                  constant: false,
                  id: 39922,
                  mutability: 'mutable',
                  name: 'cachedPrice',
                  nameLocation: '12252:11:59',
                  nodeType: 'VariableDeclaration',
                  scope: 40029,
                  src: '12244:19:59',
                  stateVariable: false,
                  storageLocation: 'default',
                  typeDescriptions: {
                    typeIdentifier: 't_uint256',
                    typeString: 'uint256',
                  },
                  typeName: {
                    id: 39921,
                    name: 'uint256',
                    nodeType: 'ElementaryTypeName',
                    src: '12244:7:59',
                    typeDescriptions: {
                      typeIdentifier: 't_uint256',
                      typeString: 'uint256',
                    },
                  },
                  visibility: 'internal',
                },
                {
                  constant: false,
                  id: 39924,
                  mutability: 'mutable',
                  name: 'newPrice',
                  nameLocation: '12273:8:59',
                  nodeType: 'VariableDeclaration',
                  scope: 40029,
                  src: '12265:16:59',
                  stateVariable: false,
                  storageLocation: 'default',
                  typeDescriptions: {
                    typeIdentifier: 't_uint256',
                    typeString: 'uint256',
                  },
                  typeName: {
                    id: 39923,
                    name: 'uint256',
                    nodeType: 'ElementaryTypeName',
                    src: '12265:7:59',
                    typeDescriptions: {
                      typeIdentifier: 't_uint256',
                      typeString: 'uint256',
                    },
                  },
                  visibility: 'internal',
                },
              ],
              src: '12243:39:59',
            },
            scope: 40314,
            stateMutability: 'nonpayable',
            virtual: false,
            visibility: 'internal',
          },
          {
            id: 40044,
            nodeType: 'FunctionDefinition',
            src: '13540:125:59',
            nodes: [],
            body: {
              id: 40043,
              nodeType: 'Block',
              src: '13598:67:59',
              nodes: [],
              statements: [
                {
                  expression: {
                    arguments: [
                      {
                        id: 40037,
                        name: 'units',
                        nodeType: 'Identifier',
                        overloadedDeclarations: [],
                        referencedDeclaration: 40031,
                        src: '13622:5:59',
                        typeDescriptions: {
                          typeIdentifier: 't_uint256',
                          typeString: 'uint256',
                        },
                      },
                      {
                        id: 40038,
                        name: 'usdUnitPrice',
                        nodeType: 'Identifier',
                        overloadedDeclarations: [],
                        referencedDeclaration: 39564,
                        src: '13629:12:59',
                        typeDescriptions: {
                          typeIdentifier: 't_uint256',
                          typeString: 'uint256',
                        },
                      },
                      {
                        arguments: [],
                        expression: {
                          argumentTypes: [],
                          id: 40039,
                          name: '_ethUsdPrice',
                          nodeType: 'Identifier',
                          overloadedDeclarations: [],
                          referencedDeclaration: 39918,
                          src: '13643:12:59',
                          typeDescriptions: {
                            typeIdentifier: 't_function_internal_nonpayable$__$returns$_t_uint256_$',
                            typeString: 'function () returns (uint256)',
                          },
                        },
                        id: 40040,
                        isConstant: false,
                        isLValue: false,
                        isPure: false,
                        kind: 'functionCall',
                        lValueRequested: false,
                        nameLocations: [],
                        names: [],
                        nodeType: 'FunctionCall',
                        src: '13643:14:59',
                        tryCall: false,
                        typeDescriptions: {
                          typeIdentifier: 't_uint256',
                          typeString: 'uint256',
                        },
                      },
                    ],
                    expression: {
                      argumentTypes: [
                        {
                          typeIdentifier: 't_uint256',
                          typeString: 'uint256',
                        },
                        {
                          typeIdentifier: 't_uint256',
                          typeString: 'uint256',
                        },
                        {
                          typeIdentifier: 't_uint256',
                          typeString: 'uint256',
                        },
                      ],
                      id: 40036,
                      name: '_price',
                      nodeType: 'Identifier',
                      overloadedDeclarations: [40044, 40065],
                      referencedDeclaration: 40065,
                      src: '13615:6:59',
                      typeDescriptions: {
                        typeIdentifier:
                          't_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$',
                        typeString: 'function (uint256,uint256,uint256) pure returns (uint256)',
                      },
                    },
                    id: 40041,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    kind: 'functionCall',
                    lValueRequested: false,
                    nameLocations: [],
                    names: [],
                    nodeType: 'FunctionCall',
                    src: '13615:43:59',
                    tryCall: false,
                    typeDescriptions: {
                      typeIdentifier: 't_uint256',
                      typeString: 'uint256',
                    },
                  },
                  functionReturnParameters: 40035,
                  id: 40042,
                  nodeType: 'Return',
                  src: '13608:50:59',
                },
              ],
            },
            implemented: true,
            kind: 'function',
            modifiers: [],
            name: '_price',
            nameLocation: '13549:6:59',
            parameters: {
              id: 40032,
              nodeType: 'ParameterList',
              parameters: [
                {
                  constant: false,
                  id: 40031,
                  mutability: 'mutable',
                  name: 'units',
                  nameLocation: '13564:5:59',
                  nodeType: 'VariableDeclaration',
                  scope: 40044,
                  src: '13556:13:59',
                  stateVariable: false,
                  storageLocation: 'default',
                  typeDescriptions: {
                    typeIdentifier: 't_uint256',
                    typeString: 'uint256',
                  },
                  typeName: {
                    id: 40030,
                    name: 'uint256',
                    nodeType: 'ElementaryTypeName',
                    src: '13556:7:59',
                    typeDescriptions: {
                      typeIdentifier: 't_uint256',
                      typeString: 'uint256',
                    },
                  },
                  visibility: 'internal',
                },
              ],
              src: '13555:15:59',
            },
            returnParameters: {
              id: 40035,
              nodeType: 'ParameterList',
              parameters: [
                {
                  constant: false,
                  id: 40034,
                  mutability: 'mutable',
                  name: '',
                  nameLocation: '-1:-1:-1',
                  nodeType: 'VariableDeclaration',
                  scope: 40044,
                  src: '13589:7:59',
                  stateVariable: false,
                  storageLocation: 'default',
                  typeDescriptions: {
                    typeIdentifier: 't_uint256',
                    typeString: 'uint256',
                  },
                  typeName: {
                    id: 40033,
                    name: 'uint256',
                    nodeType: 'ElementaryTypeName',
                    src: '13589:7:59',
                    typeDescriptions: {
                      typeIdentifier: 't_uint256',
                      typeString: 'uint256',
                    },
                  },
                  visibility: 'internal',
                },
              ],
              src: '13588:9:59',
            },
            scope: 40314,
            stateMutability: 'nonpayable',
            virtual: false,
            visibility: 'internal',
          },
          {
            id: 40065,
            nodeType: 'FunctionDefinition',
            src: '13963:166:59',
            nodes: [],
            body: {
              id: 40064,
              nodeType: 'Block',
              src: '14065:64:59',
              nodes: [],
              statements: [
                {
                  expression: {
                    arguments: [
                      {
                        id: 40061,
                        name: 'ethPerUsd',
                        nodeType: 'Identifier',
                        overloadedDeclarations: [],
                        referencedDeclaration: 40051,
                        src: '14112:9:59',
                        typeDescriptions: {
                          typeIdentifier: 't_uint256',
                          typeString: 'uint256',
                        },
                      },
                    ],
                    expression: {
                      argumentTypes: [
                        {
                          typeIdentifier: 't_uint256',
                          typeString: 'uint256',
                        },
                      ],
                      expression: {
                        components: [
                          {
                            commonType: {
                              typeIdentifier: 't_uint256',
                              typeString: 'uint256',
                            },
                            id: 40058,
                            isConstant: false,
                            isLValue: false,
                            isPure: false,
                            lValueRequested: false,
                            leftExpression: {
                              id: 40056,
                              name: 'units',
                              nodeType: 'Identifier',
                              overloadedDeclarations: [],
                              referencedDeclaration: 40047,
                              src: '14083:5:59',
                              typeDescriptions: {
                                typeIdentifier: 't_uint256',
                                typeString: 'uint256',
                              },
                            },
                            nodeType: 'BinaryOperation',
                            operator: '*',
                            rightExpression: {
                              id: 40057,
                              name: 'usdPerUnit',
                              nodeType: 'Identifier',
                              overloadedDeclarations: [],
                              referencedDeclaration: 40049,
                              src: '14091:10:59',
                              typeDescriptions: {
                                typeIdentifier: 't_uint256',
                                typeString: 'uint256',
                              },
                            },
                            src: '14083:18:59',
                            typeDescriptions: {
                              typeIdentifier: 't_uint256',
                              typeString: 'uint256',
                            },
                          },
                        ],
                        id: 40059,
                        isConstant: false,
                        isInlineArray: false,
                        isLValue: false,
                        isPure: false,
                        lValueRequested: false,
                        nodeType: 'TupleExpression',
                        src: '14082:20:59',
                        typeDescriptions: {
                          typeIdentifier: 't_uint256',
                          typeString: 'uint256',
                        },
                      },
                      id: 40060,
                      isConstant: false,
                      isLValue: false,
                      isPure: false,
                      lValueRequested: false,
                      memberLocation: '14103:8:59',
                      memberName: 'divWadUp',
                      nodeType: 'MemberAccess',
                      referencedDeclaration: 36134,
                      src: '14082:29:59',
                      typeDescriptions: {
                        typeIdentifier:
                          't_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$',
                        typeString: 'function (uint256,uint256) pure returns (uint256)',
                      },
                    },
                    id: 40062,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    kind: 'functionCall',
                    lValueRequested: false,
                    nameLocations: [],
                    names: [],
                    nodeType: 'FunctionCall',
                    src: '14082:40:59',
                    tryCall: false,
                    typeDescriptions: {
                      typeIdentifier: 't_uint256',
                      typeString: 'uint256',
                    },
                  },
                  functionReturnParameters: 40055,
                  id: 40063,
                  nodeType: 'Return',
                  src: '14075:47:59',
                },
              ],
            },
            documentation: {
              id: 40045,
              nodeType: 'StructuredDocumentation',
              src: '13671:287:59',
              text: ' @param units      Number of storage units. Integer, no decimals.\n @param usdPerUnit Unit price in USD. Fixed point with 8 decimals.\n @param ethPerUsd  ETH/USD price. Fixed point with 8 decimals.\n @return uint256 price in wei, i.e. 18 decimals.',
            },
            implemented: true,
            kind: 'function',
            modifiers: [],
            name: '_price',
            nameLocation: '13972:6:59',
            parameters: {
              id: 40052,
              nodeType: 'ParameterList',
              parameters: [
                {
                  constant: false,
                  id: 40047,
                  mutability: 'mutable',
                  name: 'units',
                  nameLocation: '13987:5:59',
                  nodeType: 'VariableDeclaration',
                  scope: 40065,
                  src: '13979:13:59',
                  stateVariable: false,
                  storageLocation: 'default',
                  typeDescriptions: {
                    typeIdentifier: 't_uint256',
                    typeString: 'uint256',
                  },
                  typeName: {
                    id: 40046,
                    name: 'uint256',
                    nodeType: 'ElementaryTypeName',
                    src: '13979:7:59',
                    typeDescriptions: {
                      typeIdentifier: 't_uint256',
                      typeString: 'uint256',
                    },
                  },
                  visibility: 'internal',
                },
                {
                  constant: false,
                  id: 40049,
                  mutability: 'mutable',
                  name: 'usdPerUnit',
                  nameLocation: '14002:10:59',
                  nodeType: 'VariableDeclaration',
                  scope: 40065,
                  src: '13994:18:59',
                  stateVariable: false,
                  storageLocation: 'default',
                  typeDescriptions: {
                    typeIdentifier: 't_uint256',
                    typeString: 'uint256',
                  },
                  typeName: {
                    id: 40048,
                    name: 'uint256',
                    nodeType: 'ElementaryTypeName',
                    src: '13994:7:59',
                    typeDescriptions: {
                      typeIdentifier: 't_uint256',
                      typeString: 'uint256',
                    },
                  },
                  visibility: 'internal',
                },
                {
                  constant: false,
                  id: 40051,
                  mutability: 'mutable',
                  name: 'ethPerUsd',
                  nameLocation: '14022:9:59',
                  nodeType: 'VariableDeclaration',
                  scope: 40065,
                  src: '14014:17:59',
                  stateVariable: false,
                  storageLocation: 'default',
                  typeDescriptions: {
                    typeIdentifier: 't_uint256',
                    typeString: 'uint256',
                  },
                  typeName: {
                    id: 40050,
                    name: 'uint256',
                    nodeType: 'ElementaryTypeName',
                    src: '14014:7:59',
                    typeDescriptions: {
                      typeIdentifier: 't_uint256',
                      typeString: 'uint256',
                    },
                  },
                  visibility: 'internal',
                },
              ],
              src: '13978:54:59',
            },
            returnParameters: {
              id: 40055,
              nodeType: 'ParameterList',
              parameters: [
                {
                  constant: false,
                  id: 40054,
                  mutability: 'mutable',
                  name: '',
                  nameLocation: '-1:-1:-1',
                  nodeType: 'VariableDeclaration',
                  scope: 40065,
                  src: '14056:7:59',
                  stateVariable: false,
                  storageLocation: 'default',
                  typeDescriptions: {
                    typeIdentifier: 't_uint256',
                    typeString: 'uint256',
                  },
                  typeName: {
                    id: 40053,
                    name: 'uint256',
                    nodeType: 'ElementaryTypeName',
                    src: '14056:7:59',
                    typeDescriptions: {
                      typeIdentifier: 't_uint256',
                      typeString: 'uint256',
                    },
                  },
                  visibility: 'internal',
                },
              ],
              src: '14055:9:59',
            },
            scope: 40314,
            stateMutability: 'pure',
            virtual: false,
            visibility: 'internal',
          },
          {
            id: 40105,
            nodeType: 'FunctionDefinition',
            src: '14538:280:59',
            nodes: [],
            body: {
              id: 40104,
              nodeType: 'Block',
              src: '14619:199:59',
              nodes: [],
              statements: [
                {
                  condition: {
                    commonType: {
                      typeIdentifier: 't_uint256',
                      typeString: 'uint256',
                    },
                    id: 40079,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    lValueRequested: false,
                    leftExpression: {
                      id: 40077,
                      name: 'units',
                      nodeType: 'Identifier',
                      overloadedDeclarations: [],
                      referencedDeclaration: 40070,
                      src: '14633:5:59',
                      typeDescriptions: {
                        typeIdentifier: 't_uint256',
                        typeString: 'uint256',
                      },
                    },
                    nodeType: 'BinaryOperation',
                    operator: '==',
                    rightExpression: {
                      hexValue: '30',
                      id: 40078,
                      isConstant: false,
                      isLValue: false,
                      isPure: true,
                      kind: 'number',
                      lValueRequested: false,
                      nodeType: 'Literal',
                      src: '14642:1:59',
                      typeDescriptions: {
                        typeIdentifier: 't_rational_0_by_1',
                        typeString: 'int_const 0',
                      },
                      value: '0',
                    },
                    src: '14633:10:59',
                    typeDescriptions: {
                      typeIdentifier: 't_bool',
                      typeString: 'bool',
                    },
                  },
                  id: 40083,
                  nodeType: 'IfStatement',
                  src: '14629:38:59',
                  trueBody: {
                    errorCall: {
                      arguments: [],
                      expression: {
                        argumentTypes: [],
                        id: 40080,
                        name: 'InvalidAmount',
                        nodeType: 'Identifier',
                        overloadedDeclarations: [],
                        referencedDeclaration: 39465,
                        src: '14652:13:59',
                        typeDescriptions: {
                          typeIdentifier: 't_function_error_pure$__$returns$__$',
                          typeString: 'function () pure',
                        },
                      },
                      id: 40081,
                      isConstant: false,
                      isLValue: false,
                      isPure: false,
                      kind: 'functionCall',
                      lValueRequested: false,
                      nameLocations: [],
                      names: [],
                      nodeType: 'FunctionCall',
                      src: '14652:15:59',
                      tryCall: false,
                      typeDescriptions: {
                        typeIdentifier: 't_tuple$__$',
                        typeString: 'tuple()',
                      },
                    },
                    id: 40082,
                    nodeType: 'RevertStatement',
                    src: '14645:22:59',
                  },
                },
                {
                  condition: {
                    commonType: {
                      typeIdentifier: 't_uint256',
                      typeString: 'uint256',
                    },
                    id: 40088,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    lValueRequested: false,
                    leftExpression: {
                      commonType: {
                        typeIdentifier: 't_uint256',
                        typeString: 'uint256',
                      },
                      id: 40086,
                      isConstant: false,
                      isLValue: false,
                      isPure: false,
                      lValueRequested: false,
                      leftExpression: {
                        id: 40084,
                        name: 'rentedUnits',
                        nodeType: 'Identifier',
                        overloadedDeclarations: [],
                        referencedDeclaration: 39576,
                        src: '14681:11:59',
                        typeDescriptions: {
                          typeIdentifier: 't_uint256',
                          typeString: 'uint256',
                        },
                      },
                      nodeType: 'BinaryOperation',
                      operator: '+',
                      rightExpression: {
                        id: 40085,
                        name: 'units',
                        nodeType: 'Identifier',
                        overloadedDeclarations: [],
                        referencedDeclaration: 40070,
                        src: '14695:5:59',
                        typeDescriptions: {
                          typeIdentifier: 't_uint256',
                          typeString: 'uint256',
                        },
                      },
                      src: '14681:19:59',
                      typeDescriptions: {
                        typeIdentifier: 't_uint256',
                        typeString: 'uint256',
                      },
                    },
                    nodeType: 'BinaryOperation',
                    operator: '>',
                    rightExpression: {
                      id: 40087,
                      name: 'maxUnits',
                      nodeType: 'Identifier',
                      overloadedDeclarations: [],
                      referencedDeclaration: 39567,
                      src: '14703:8:59',
                      typeDescriptions: {
                        typeIdentifier: 't_uint256',
                        typeString: 'uint256',
                      },
                    },
                    src: '14681:30:59',
                    typeDescriptions: {
                      typeIdentifier: 't_bool',
                      typeString: 'bool',
                    },
                  },
                  id: 40092,
                  nodeType: 'IfStatement',
                  src: '14677:60:59',
                  trueBody: {
                    errorCall: {
                      arguments: [],
                      expression: {
                        argumentTypes: [],
                        id: 40089,
                        name: 'ExceedsCapacity',
                        nodeType: 'Identifier',
                        overloadedDeclarations: [],
                        referencedDeclaration: 39462,
                        src: '14720:15:59',
                        typeDescriptions: {
                          typeIdentifier: 't_function_error_pure$__$returns$__$',
                          typeString: 'function () pure',
                        },
                      },
                      id: 40090,
                      isConstant: false,
                      isLValue: false,
                      isPure: false,
                      kind: 'functionCall',
                      lValueRequested: false,
                      nameLocations: [],
                      names: [],
                      nodeType: 'FunctionCall',
                      src: '14720:17:59',
                      tryCall: false,
                      typeDescriptions: {
                        typeIdentifier: 't_tuple$__$',
                        typeString: 'tuple()',
                      },
                    },
                    id: 40091,
                    nodeType: 'RevertStatement',
                    src: '14713:24:59',
                  },
                },
                {
                  expression: {
                    id: 40095,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    lValueRequested: false,
                    leftHandSide: {
                      id: 40093,
                      name: 'rentedUnits',
                      nodeType: 'Identifier',
                      overloadedDeclarations: [],
                      referencedDeclaration: 39576,
                      src: '14748:11:59',
                      typeDescriptions: {
                        typeIdentifier: 't_uint256',
                        typeString: 'uint256',
                      },
                    },
                    nodeType: 'Assignment',
                    operator: '+=',
                    rightHandSide: {
                      id: 40094,
                      name: 'units',
                      nodeType: 'Identifier',
                      overloadedDeclarations: [],
                      referencedDeclaration: 40070,
                      src: '14763:5:59',
                      typeDescriptions: {
                        typeIdentifier: 't_uint256',
                        typeString: 'uint256',
                      },
                    },
                    src: '14748:20:59',
                    typeDescriptions: {
                      typeIdentifier: 't_uint256',
                      typeString: 'uint256',
                    },
                  },
                  id: 40096,
                  nodeType: 'ExpressionStatement',
                  src: '14748:20:59',
                },
                {
                  eventCall: {
                    arguments: [
                      {
                        expression: {
                          id: 40098,
                          name: 'msg',
                          nodeType: 'Identifier',
                          overloadedDeclarations: [],
                          referencedDeclaration: -15,
                          src: '14788:3:59',
                          typeDescriptions: {
                            typeIdentifier: 't_magic_message',
                            typeString: 'msg',
                          },
                        },
                        id: 40099,
                        isConstant: false,
                        isLValue: false,
                        isPure: false,
                        lValueRequested: false,
                        memberLocation: '14792:6:59',
                        memberName: 'sender',
                        nodeType: 'MemberAccess',
                        src: '14788:10:59',
                        typeDescriptions: {
                          typeIdentifier: 't_address',
                          typeString: 'address',
                        },
                      },
                      {
                        id: 40100,
                        name: 'fid',
                        nodeType: 'Identifier',
                        overloadedDeclarations: [],
                        referencedDeclaration: 40068,
                        src: '14800:3:59',
                        typeDescriptions: {
                          typeIdentifier: 't_uint256',
                          typeString: 'uint256',
                        },
                      },
                      {
                        id: 40101,
                        name: 'units',
                        nodeType: 'Identifier',
                        overloadedDeclarations: [],
                        referencedDeclaration: 40070,
                        src: '14805:5:59',
                        typeDescriptions: {
                          typeIdentifier: 't_uint256',
                          typeString: 'uint256',
                        },
                      },
                    ],
                    expression: {
                      argumentTypes: [
                        {
                          typeIdentifier: 't_address',
                          typeString: 'address',
                        },
                        {
                          typeIdentifier: 't_uint256',
                          typeString: 'uint256',
                        },
                        {
                          typeIdentifier: 't_uint256',
                          typeString: 'uint256',
                        },
                      ],
                      id: 40097,
                      name: 'Rent',
                      nodeType: 'Identifier',
                      overloadedDeclarations: [],
                      referencedDeclaration: 39504,
                      src: '14783:4:59',
                      typeDescriptions: {
                        typeIdentifier: 't_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$',
                        typeString: 'function (address,uint256,uint256)',
                      },
                    },
                    id: 40102,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    kind: 'functionCall',
                    lValueRequested: false,
                    nameLocations: [],
                    names: [],
                    nodeType: 'FunctionCall',
                    src: '14783:28:59',
                    tryCall: false,
                    typeDescriptions: {
                      typeIdentifier: 't_tuple$__$',
                      typeString: 'tuple()',
                    },
                  },
                  id: 40103,
                  nodeType: 'EmitStatement',
                  src: '14778:33:59',
                },
              ],
            },
            documentation: {
              id: 40066,
              nodeType: 'StructuredDocumentation',
              src: '14318:215:59',
              text: ' @notice Credit a single fid with free storage units. Only callable by owner.\n @param fid   The fid that will receive the credit.\n @param units Number of storage units to credit.',
            },
            functionSelector: 'ab7ccc1c',
            implemented: true,
            kind: 'function',
            modifiers: [
              {
                id: 40073,
                kind: 'modifierInvocation',
                modifierName: {
                  id: 40072,
                  name: 'onlyOwner',
                  nameLocations: ['14591:9:59'],
                  nodeType: 'IdentifierPath',
                  referencedDeclaration: 33256,
                  src: '14591:9:59',
                },
                nodeType: 'ModifierInvocation',
                src: '14591:9:59',
              },
              {
                id: 40075,
                kind: 'modifierInvocation',
                modifierName: {
                  id: 40074,
                  name: 'whenNotDeprecated',
                  nameLocations: ['14601:17:59'],
                  nodeType: 'IdentifierPath',
                  referencedDeclaration: 39651,
                  src: '14601:17:59',
                },
                nodeType: 'ModifierInvocation',
                src: '14601:17:59',
              },
            ],
            name: 'credit',
            nameLocation: '14547:6:59',
            parameters: {
              id: 40071,
              nodeType: 'ParameterList',
              parameters: [
                {
                  constant: false,
                  id: 40068,
                  mutability: 'mutable',
                  name: 'fid',
                  nameLocation: '14562:3:59',
                  nodeType: 'VariableDeclaration',
                  scope: 40105,
                  src: '14554:11:59',
                  stateVariable: false,
                  storageLocation: 'default',
                  typeDescriptions: {
                    typeIdentifier: 't_uint256',
                    typeString: 'uint256',
                  },
                  typeName: {
                    id: 40067,
                    name: 'uint256',
                    nodeType: 'ElementaryTypeName',
                    src: '14554:7:59',
                    typeDescriptions: {
                      typeIdentifier: 't_uint256',
                      typeString: 'uint256',
                    },
                  },
                  visibility: 'internal',
                },
                {
                  constant: false,
                  id: 40070,
                  mutability: 'mutable',
                  name: 'units',
                  nameLocation: '14575:5:59',
                  nodeType: 'VariableDeclaration',
                  scope: 40105,
                  src: '14567:13:59',
                  stateVariable: false,
                  storageLocation: 'default',
                  typeDescriptions: {
                    typeIdentifier: 't_uint256',
                    typeString: 'uint256',
                  },
                  typeName: {
                    id: 40069,
                    name: 'uint256',
                    nodeType: 'ElementaryTypeName',
                    src: '14567:7:59',
                    typeDescriptions: {
                      typeIdentifier: 't_uint256',
                      typeString: 'uint256',
                    },
                  },
                  visibility: 'internal',
                },
              ],
              src: '14553:28:59',
            },
            returnParameters: {
              id: 40076,
              nodeType: 'ParameterList',
              parameters: [],
              src: '14619:0:59',
            },
            scope: 40314,
            stateMutability: 'nonpayable',
            virtual: false,
            visibility: 'external',
          },
          {
            id: 40160,
            nodeType: 'FunctionDefinition',
            src: '15023:374:59',
            nodes: [],
            body: {
              id: 40159,
              nodeType: 'Block',
              src: '15121:276:59',
              nodes: [],
              statements: [
                {
                  assignments: [40119],
                  declarations: [
                    {
                      constant: false,
                      id: 40119,
                      mutability: 'mutable',
                      name: 'totalUnits',
                      nameLocation: '15139:10:59',
                      nodeType: 'VariableDeclaration',
                      scope: 40159,
                      src: '15131:18:59',
                      stateVariable: false,
                      storageLocation: 'default',
                      typeDescriptions: {
                        typeIdentifier: 't_uint256',
                        typeString: 'uint256',
                      },
                      typeName: {
                        id: 40118,
                        name: 'uint256',
                        nodeType: 'ElementaryTypeName',
                        src: '15131:7:59',
                        typeDescriptions: {
                          typeIdentifier: 't_uint256',
                          typeString: 'uint256',
                        },
                      },
                      visibility: 'internal',
                    },
                  ],
                  id: 40124,
                  initialValue: {
                    commonType: {
                      typeIdentifier: 't_uint256',
                      typeString: 'uint256',
                    },
                    id: 40123,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    lValueRequested: false,
                    leftExpression: {
                      expression: {
                        id: 40120,
                        name: 'fids',
                        nodeType: 'Identifier',
                        overloadedDeclarations: [],
                        referencedDeclaration: 40109,
                        src: '15152:4:59',
                        typeDescriptions: {
                          typeIdentifier: 't_array$_t_uint256_$dyn_calldata_ptr',
                          typeString: 'uint256[] calldata',
                        },
                      },
                      id: 40121,
                      isConstant: false,
                      isLValue: false,
                      isPure: false,
                      lValueRequested: false,
                      memberLocation: '15157:6:59',
                      memberName: 'length',
                      nodeType: 'MemberAccess',
                      src: '15152:11:59',
                      typeDescriptions: {
                        typeIdentifier: 't_uint256',
                        typeString: 'uint256',
                      },
                    },
                    nodeType: 'BinaryOperation',
                    operator: '*',
                    rightExpression: {
                      id: 40122,
                      name: 'units',
                      nodeType: 'Identifier',
                      overloadedDeclarations: [],
                      referencedDeclaration: 40111,
                      src: '15166:5:59',
                      typeDescriptions: {
                        typeIdentifier: 't_uint256',
                        typeString: 'uint256',
                      },
                    },
                    src: '15152:19:59',
                    typeDescriptions: {
                      typeIdentifier: 't_uint256',
                      typeString: 'uint256',
                    },
                  },
                  nodeType: 'VariableDeclarationStatement',
                  src: '15131:40:59',
                },
                {
                  condition: {
                    commonType: {
                      typeIdentifier: 't_uint256',
                      typeString: 'uint256',
                    },
                    id: 40129,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    lValueRequested: false,
                    leftExpression: {
                      commonType: {
                        typeIdentifier: 't_uint256',
                        typeString: 'uint256',
                      },
                      id: 40127,
                      isConstant: false,
                      isLValue: false,
                      isPure: false,
                      lValueRequested: false,
                      leftExpression: {
                        id: 40125,
                        name: 'rentedUnits',
                        nodeType: 'Identifier',
                        overloadedDeclarations: [],
                        referencedDeclaration: 39576,
                        src: '15185:11:59',
                        typeDescriptions: {
                          typeIdentifier: 't_uint256',
                          typeString: 'uint256',
                        },
                      },
                      nodeType: 'BinaryOperation',
                      operator: '+',
                      rightExpression: {
                        id: 40126,
                        name: 'totalUnits',
                        nodeType: 'Identifier',
                        overloadedDeclarations: [],
                        referencedDeclaration: 40119,
                        src: '15199:10:59',
                        typeDescriptions: {
                          typeIdentifier: 't_uint256',
                          typeString: 'uint256',
                        },
                      },
                      src: '15185:24:59',
                      typeDescriptions: {
                        typeIdentifier: 't_uint256',
                        typeString: 'uint256',
                      },
                    },
                    nodeType: 'BinaryOperation',
                    operator: '>',
                    rightExpression: {
                      id: 40128,
                      name: 'maxUnits',
                      nodeType: 'Identifier',
                      overloadedDeclarations: [],
                      referencedDeclaration: 39567,
                      src: '15212:8:59',
                      typeDescriptions: {
                        typeIdentifier: 't_uint256',
                        typeString: 'uint256',
                      },
                    },
                    src: '15185:35:59',
                    typeDescriptions: {
                      typeIdentifier: 't_bool',
                      typeString: 'bool',
                    },
                  },
                  id: 40133,
                  nodeType: 'IfStatement',
                  src: '15181:65:59',
                  trueBody: {
                    errorCall: {
                      arguments: [],
                      expression: {
                        argumentTypes: [],
                        id: 40130,
                        name: 'ExceedsCapacity',
                        nodeType: 'Identifier',
                        overloadedDeclarations: [],
                        referencedDeclaration: 39462,
                        src: '15229:15:59',
                        typeDescriptions: {
                          typeIdentifier: 't_function_error_pure$__$returns$__$',
                          typeString: 'function () pure',
                        },
                      },
                      id: 40131,
                      isConstant: false,
                      isLValue: false,
                      isPure: false,
                      kind: 'functionCall',
                      lValueRequested: false,
                      nameLocations: [],
                      names: [],
                      nodeType: 'FunctionCall',
                      src: '15229:17:59',
                      tryCall: false,
                      typeDescriptions: {
                        typeIdentifier: 't_tuple$__$',
                        typeString: 'tuple()',
                      },
                    },
                    id: 40132,
                    nodeType: 'RevertStatement',
                    src: '15222:24:59',
                  },
                },
                {
                  expression: {
                    id: 40136,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    lValueRequested: false,
                    leftHandSide: {
                      id: 40134,
                      name: 'rentedUnits',
                      nodeType: 'Identifier',
                      overloadedDeclarations: [],
                      referencedDeclaration: 39576,
                      src: '15256:11:59',
                      typeDescriptions: {
                        typeIdentifier: 't_uint256',
                        typeString: 'uint256',
                      },
                    },
                    nodeType: 'Assignment',
                    operator: '+=',
                    rightHandSide: {
                      id: 40135,
                      name: 'totalUnits',
                      nodeType: 'Identifier',
                      overloadedDeclarations: [],
                      referencedDeclaration: 40119,
                      src: '15271:10:59',
                      typeDescriptions: {
                        typeIdentifier: 't_uint256',
                        typeString: 'uint256',
                      },
                    },
                    src: '15256:25:59',
                    typeDescriptions: {
                      typeIdentifier: 't_uint256',
                      typeString: 'uint256',
                    },
                  },
                  id: 40137,
                  nodeType: 'ExpressionStatement',
                  src: '15256:25:59',
                },
                {
                  body: {
                    id: 40157,
                    nodeType: 'Block',
                    src: '15329:62:59',
                    statements: [
                      {
                        eventCall: {
                          arguments: [
                            {
                              expression: {
                                id: 40149,
                                name: 'msg',
                                nodeType: 'Identifier',
                                overloadedDeclarations: [],
                                referencedDeclaration: -15,
                                src: '15353:3:59',
                                typeDescriptions: {
                                  typeIdentifier: 't_magic_message',
                                  typeString: 'msg',
                                },
                              },
                              id: 40150,
                              isConstant: false,
                              isLValue: false,
                              isPure: false,
                              lValueRequested: false,
                              memberLocation: '15357:6:59',
                              memberName: 'sender',
                              nodeType: 'MemberAccess',
                              src: '15353:10:59',
                              typeDescriptions: {
                                typeIdentifier: 't_address',
                                typeString: 'address',
                              },
                            },
                            {
                              baseExpression: {
                                id: 40151,
                                name: 'fids',
                                nodeType: 'Identifier',
                                overloadedDeclarations: [],
                                referencedDeclaration: 40109,
                                src: '15365:4:59',
                                typeDescriptions: {
                                  typeIdentifier: 't_array$_t_uint256_$dyn_calldata_ptr',
                                  typeString: 'uint256[] calldata',
                                },
                              },
                              id: 40153,
                              indexExpression: {
                                id: 40152,
                                name: 'i',
                                nodeType: 'Identifier',
                                overloadedDeclarations: [],
                                referencedDeclaration: 40139,
                                src: '15370:1:59',
                                typeDescriptions: {
                                  typeIdentifier: 't_uint256',
                                  typeString: 'uint256',
                                },
                              },
                              isConstant: false,
                              isLValue: false,
                              isPure: false,
                              lValueRequested: false,
                              nodeType: 'IndexAccess',
                              src: '15365:7:59',
                              typeDescriptions: {
                                typeIdentifier: 't_uint256',
                                typeString: 'uint256',
                              },
                            },
                            {
                              id: 40154,
                              name: 'units',
                              nodeType: 'Identifier',
                              overloadedDeclarations: [],
                              referencedDeclaration: 40111,
                              src: '15374:5:59',
                              typeDescriptions: {
                                typeIdentifier: 't_uint256',
                                typeString: 'uint256',
                              },
                            },
                          ],
                          expression: {
                            argumentTypes: [
                              {
                                typeIdentifier: 't_address',
                                typeString: 'address',
                              },
                              {
                                typeIdentifier: 't_uint256',
                                typeString: 'uint256',
                              },
                              {
                                typeIdentifier: 't_uint256',
                                typeString: 'uint256',
                              },
                            ],
                            id: 40148,
                            name: 'Rent',
                            nodeType: 'Identifier',
                            overloadedDeclarations: [],
                            referencedDeclaration: 39504,
                            src: '15348:4:59',
                            typeDescriptions: {
                              typeIdentifier:
                                't_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$',
                              typeString: 'function (address,uint256,uint256)',
                            },
                          },
                          id: 40155,
                          isConstant: false,
                          isLValue: false,
                          isPure: false,
                          kind: 'functionCall',
                          lValueRequested: false,
                          nameLocations: [],
                          names: [],
                          nodeType: 'FunctionCall',
                          src: '15348:32:59',
                          tryCall: false,
                          typeDescriptions: {
                            typeIdentifier: 't_tuple$__$',
                            typeString: 'tuple()',
                          },
                        },
                        id: 40156,
                        nodeType: 'EmitStatement',
                        src: '15343:37:59',
                      },
                    ],
                  },
                  condition: {
                    commonType: {
                      typeIdentifier: 't_uint256',
                      typeString: 'uint256',
                    },
                    id: 40144,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    lValueRequested: false,
                    leftExpression: {
                      id: 40141,
                      name: 'i',
                      nodeType: 'Identifier',
                      overloadedDeclarations: [],
                      referencedDeclaration: 40139,
                      src: '15307:1:59',
                      typeDescriptions: {
                        typeIdentifier: 't_uint256',
                        typeString: 'uint256',
                      },
                    },
                    nodeType: 'BinaryOperation',
                    operator: '<',
                    rightExpression: {
                      expression: {
                        id: 40142,
                        name: 'fids',
                        nodeType: 'Identifier',
                        overloadedDeclarations: [],
                        referencedDeclaration: 40109,
                        src: '15311:4:59',
                        typeDescriptions: {
                          typeIdentifier: 't_array$_t_uint256_$dyn_calldata_ptr',
                          typeString: 'uint256[] calldata',
                        },
                      },
                      id: 40143,
                      isConstant: false,
                      isLValue: false,
                      isPure: false,
                      lValueRequested: false,
                      memberLocation: '15316:6:59',
                      memberName: 'length',
                      nodeType: 'MemberAccess',
                      src: '15311:11:59',
                      typeDescriptions: {
                        typeIdentifier: 't_uint256',
                        typeString: 'uint256',
                      },
                    },
                    src: '15307:15:59',
                    typeDescriptions: {
                      typeIdentifier: 't_bool',
                      typeString: 'bool',
                    },
                  },
                  id: 40158,
                  initializationExpression: {
                    assignments: [40139],
                    declarations: [
                      {
                        constant: false,
                        id: 40139,
                        mutability: 'mutable',
                        name: 'i',
                        nameLocation: '15304:1:59',
                        nodeType: 'VariableDeclaration',
                        scope: 40158,
                        src: '15296:9:59',
                        stateVariable: false,
                        storageLocation: 'default',
                        typeDescriptions: {
                          typeIdentifier: 't_uint256',
                          typeString: 'uint256',
                        },
                        typeName: {
                          id: 40138,
                          name: 'uint256',
                          nodeType: 'ElementaryTypeName',
                          src: '15296:7:59',
                          typeDescriptions: {
                            typeIdentifier: 't_uint256',
                            typeString: 'uint256',
                          },
                        },
                        visibility: 'internal',
                      },
                    ],
                    id: 40140,
                    nodeType: 'VariableDeclarationStatement',
                    src: '15296:9:59',
                  },
                  loopExpression: {
                    expression: {
                      id: 40146,
                      isConstant: false,
                      isLValue: false,
                      isPure: false,
                      lValueRequested: false,
                      nodeType: 'UnaryOperation',
                      operator: '++',
                      prefix: true,
                      src: '15324:3:59',
                      subExpression: {
                        id: 40145,
                        name: 'i',
                        nodeType: 'Identifier',
                        overloadedDeclarations: [],
                        referencedDeclaration: 40139,
                        src: '15326:1:59',
                        typeDescriptions: {
                          typeIdentifier: 't_uint256',
                          typeString: 'uint256',
                        },
                      },
                      typeDescriptions: {
                        typeIdentifier: 't_uint256',
                        typeString: 'uint256',
                      },
                    },
                    id: 40147,
                    nodeType: 'ExpressionStatement',
                    src: '15324:3:59',
                  },
                  nodeType: 'ForStatement',
                  src: '15291:100:59',
                },
              ],
            },
            documentation: {
              id: 40106,
              nodeType: 'StructuredDocumentation',
              src: '14824:194:59',
              text: ' @notice Credit multiple fids with free storage units. Only callable by owner.\n @param fids  An array of fids.\n @param units Number of storage units per fid.',
            },
            functionSelector: 'b3a90c67',
            implemented: true,
            kind: 'function',
            modifiers: [
              {
                id: 40114,
                kind: 'modifierInvocation',
                modifierName: {
                  id: 40113,
                  name: 'onlyOwner',
                  nameLocations: ['15093:9:59'],
                  nodeType: 'IdentifierPath',
                  referencedDeclaration: 33256,
                  src: '15093:9:59',
                },
                nodeType: 'ModifierInvocation',
                src: '15093:9:59',
              },
              {
                id: 40116,
                kind: 'modifierInvocation',
                modifierName: {
                  id: 40115,
                  name: 'whenNotDeprecated',
                  nameLocations: ['15103:17:59'],
                  nodeType: 'IdentifierPath',
                  referencedDeclaration: 39651,
                  src: '15103:17:59',
                },
                nodeType: 'ModifierInvocation',
                src: '15103:17:59',
              },
            ],
            name: 'batchCredit',
            nameLocation: '15032:11:59',
            parameters: {
              id: 40112,
              nodeType: 'ParameterList',
              parameters: [
                {
                  constant: false,
                  id: 40109,
                  mutability: 'mutable',
                  name: 'fids',
                  nameLocation: '15063:4:59',
                  nodeType: 'VariableDeclaration',
                  scope: 40160,
                  src: '15044:23:59',
                  stateVariable: false,
                  storageLocation: 'calldata',
                  typeDescriptions: {
                    typeIdentifier: 't_array$_t_uint256_$dyn_calldata_ptr',
                    typeString: 'uint256[]',
                  },
                  typeName: {
                    baseType: {
                      id: 40107,
                      name: 'uint256',
                      nodeType: 'ElementaryTypeName',
                      src: '15044:7:59',
                      typeDescriptions: {
                        typeIdentifier: 't_uint256',
                        typeString: 'uint256',
                      },
                    },
                    id: 40108,
                    nodeType: 'ArrayTypeName',
                    src: '15044:9:59',
                    typeDescriptions: {
                      typeIdentifier: 't_array$_t_uint256_$dyn_storage_ptr',
                      typeString: 'uint256[]',
                    },
                  },
                  visibility: 'internal',
                },
                {
                  constant: false,
                  id: 40111,
                  mutability: 'mutable',
                  name: 'units',
                  nameLocation: '15077:5:59',
                  nodeType: 'VariableDeclaration',
                  scope: 40160,
                  src: '15069:13:59',
                  stateVariable: false,
                  storageLocation: 'default',
                  typeDescriptions: {
                    typeIdentifier: 't_uint256',
                    typeString: 'uint256',
                  },
                  typeName: {
                    id: 40110,
                    name: 'uint256',
                    nodeType: 'ElementaryTypeName',
                    src: '15069:7:59',
                    typeDescriptions: {
                      typeIdentifier: 't_uint256',
                      typeString: 'uint256',
                    },
                  },
                  visibility: 'internal',
                },
              ],
              src: '15043:40:59',
            },
            returnParameters: {
              id: 40117,
              nodeType: 'ParameterList',
              parameters: [],
              src: '15121:0:59',
            },
            scope: 40314,
            stateMutability: 'nonpayable',
            virtual: false,
            visibility: 'external',
          },
          {
            id: 40170,
            nodeType: 'FunctionDefinition',
            src: '15484:75:59',
            nodes: [],
            body: {
              id: 40169,
              nodeType: 'Block',
              src: '15527:32:59',
              nodes: [],
              statements: [
                {
                  expression: {
                    arguments: [],
                    expression: {
                      argumentTypes: [],
                      id: 40166,
                      name: '_refreshPrice',
                      nodeType: 'Identifier',
                      overloadedDeclarations: [],
                      referencedDeclaration: 40029,
                      src: '15537:13:59',
                      typeDescriptions: {
                        typeIdentifier: 't_function_internal_nonpayable$__$returns$_t_uint256_$_t_uint256_$',
                        typeString: 'function () returns (uint256,uint256)',
                      },
                    },
                    id: 40167,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    kind: 'functionCall',
                    lValueRequested: false,
                    nameLocations: [],
                    names: [],
                    nodeType: 'FunctionCall',
                    src: '15537:15:59',
                    tryCall: false,
                    typeDescriptions: {
                      typeIdentifier: 't_tuple$_t_uint256_$_t_uint256_$',
                      typeString: 'tuple(uint256,uint256)',
                    },
                  },
                  id: 40168,
                  nodeType: 'ExpressionStatement',
                  src: '15537:15:59',
                },
              ],
            },
            documentation: {
              id: 40161,
              nodeType: 'StructuredDocumentation',
              src: '15403:76:59',
              text: ' @notice Force refresh the cached Chainlink ETH/USD price.',
            },
            functionSelector: '3c67a5b2',
            implemented: true,
            kind: 'function',
            modifiers: [
              {
                id: 40164,
                kind: 'modifierInvocation',
                modifierName: {
                  id: 40163,
                  name: 'onlyOwner',
                  nameLocations: ['15517:9:59'],
                  nodeType: 'IdentifierPath',
                  referencedDeclaration: 33256,
                  src: '15517:9:59',
                },
                nodeType: 'ModifierInvocation',
                src: '15517:9:59',
              },
            ],
            name: 'refreshPrice',
            nameLocation: '15493:12:59',
            parameters: {
              id: 40162,
              nodeType: 'ParameterList',
              parameters: [],
              src: '15505:2:59',
            },
            returnParameters: {
              id: 40165,
              nodeType: 'ParameterList',
              parameters: [],
              src: '15527:0:59',
            },
            scope: 40314,
            stateMutability: 'nonpayable',
            virtual: false,
            visibility: 'external',
          },
          {
            id: 40188,
            nodeType: 'FunctionDefinition',
            src: '15727:142:59',
            nodes: [],
            body: {
              id: 40187,
              nodeType: 'Block',
              src: '15782:87:59',
              nodes: [],
              statements: [
                {
                  eventCall: {
                    arguments: [
                      {
                        id: 40179,
                        name: 'usdUnitPrice',
                        nodeType: 'Identifier',
                        overloadedDeclarations: [],
                        referencedDeclaration: 39564,
                        src: '15806:12:59',
                        typeDescriptions: {
                          typeIdentifier: 't_uint256',
                          typeString: 'uint256',
                        },
                      },
                      {
                        id: 40180,
                        name: 'usdPrice',
                        nodeType: 'Identifier',
                        overloadedDeclarations: [],
                        referencedDeclaration: 40173,
                        src: '15820:8:59',
                        typeDescriptions: {
                          typeIdentifier: 't_uint256',
                          typeString: 'uint256',
                        },
                      },
                    ],
                    expression: {
                      argumentTypes: [
                        {
                          typeIdentifier: 't_uint256',
                          typeString: 'uint256',
                        },
                        {
                          typeIdentifier: 't_uint256',
                          typeString: 'uint256',
                        },
                      ],
                      id: 40178,
                      name: 'SetPrice',
                      nodeType: 'Identifier',
                      overloadedDeclarations: [],
                      referencedDeclaration: 39511,
                      src: '15797:8:59',
                      typeDescriptions: {
                        typeIdentifier: 't_function_event_nonpayable$_t_uint256_$_t_uint256_$returns$__$',
                        typeString: 'function (uint256,uint256)',
                      },
                    },
                    id: 40181,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    kind: 'functionCall',
                    lValueRequested: false,
                    nameLocations: [],
                    names: [],
                    nodeType: 'FunctionCall',
                    src: '15797:32:59',
                    tryCall: false,
                    typeDescriptions: {
                      typeIdentifier: 't_tuple$__$',
                      typeString: 'tuple()',
                    },
                  },
                  id: 40182,
                  nodeType: 'EmitStatement',
                  src: '15792:37:59',
                },
                {
                  expression: {
                    id: 40185,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    lValueRequested: false,
                    leftHandSide: {
                      id: 40183,
                      name: 'usdUnitPrice',
                      nodeType: 'Identifier',
                      overloadedDeclarations: [],
                      referencedDeclaration: 39564,
                      src: '15839:12:59',
                      typeDescriptions: {
                        typeIdentifier: 't_uint256',
                        typeString: 'uint256',
                      },
                    },
                    nodeType: 'Assignment',
                    operator: '=',
                    rightHandSide: {
                      id: 40184,
                      name: 'usdPrice',
                      nodeType: 'Identifier',
                      overloadedDeclarations: [],
                      referencedDeclaration: 40173,
                      src: '15854:8:59',
                      typeDescriptions: {
                        typeIdentifier: 't_uint256',
                        typeString: 'uint256',
                      },
                    },
                    src: '15839:23:59',
                    typeDescriptions: {
                      typeIdentifier: 't_uint256',
                      typeString: 'uint256',
                    },
                  },
                  id: 40186,
                  nodeType: 'ExpressionStatement',
                  src: '15839:23:59',
                },
              ],
            },
            documentation: {
              id: 40171,
              nodeType: 'StructuredDocumentation',
              src: '15565:157:59',
              text: ' @notice Change the USD price per storage unit.\n @param usdPrice The new unit price in USD. Fixed point value with 8 decimals.',
            },
            functionSelector: '91b7f5ed',
            implemented: true,
            kind: 'function',
            modifiers: [
              {
                id: 40176,
                kind: 'modifierInvocation',
                modifierName: {
                  id: 40175,
                  name: 'onlyOwner',
                  nameLocations: ['15772:9:59'],
                  nodeType: 'IdentifierPath',
                  referencedDeclaration: 33256,
                  src: '15772:9:59',
                },
                nodeType: 'ModifierInvocation',
                src: '15772:9:59',
              },
            ],
            name: 'setPrice',
            nameLocation: '15736:8:59',
            parameters: {
              id: 40174,
              nodeType: 'ParameterList',
              parameters: [
                {
                  constant: false,
                  id: 40173,
                  mutability: 'mutable',
                  name: 'usdPrice',
                  nameLocation: '15753:8:59',
                  nodeType: 'VariableDeclaration',
                  scope: 40188,
                  src: '15745:16:59',
                  stateVariable: false,
                  storageLocation: 'default',
                  typeDescriptions: {
                    typeIdentifier: 't_uint256',
                    typeString: 'uint256',
                  },
                  typeName: {
                    id: 40172,
                    name: 'uint256',
                    nodeType: 'ElementaryTypeName',
                    src: '15745:7:59',
                    typeDescriptions: {
                      typeIdentifier: 't_uint256',
                      typeString: 'uint256',
                    },
                  },
                  visibility: 'internal',
                },
              ],
              src: '15744:18:59',
            },
            returnParameters: {
              id: 40177,
              nodeType: 'ParameterList',
              parameters: [],
              src: '15782:0:59',
            },
            scope: 40314,
            stateMutability: 'nonpayable',
            virtual: false,
            visibility: 'external',
          },
          {
            id: 40206,
            nodeType: 'FunctionDefinition',
            src: '16016:125:59',
            nodes: [],
            body: {
              id: 40205,
              nodeType: 'Block',
              src: '16069:72:59',
              nodes: [],
              statements: [
                {
                  eventCall: {
                    arguments: [
                      {
                        id: 40197,
                        name: 'maxUnits',
                        nodeType: 'Identifier',
                        overloadedDeclarations: [],
                        referencedDeclaration: 39567,
                        src: '16096:8:59',
                        typeDescriptions: {
                          typeIdentifier: 't_uint256',
                          typeString: 'uint256',
                        },
                      },
                      {
                        id: 40198,
                        name: 'max',
                        nodeType: 'Identifier',
                        overloadedDeclarations: [],
                        referencedDeclaration: 40191,
                        src: '16106:3:59',
                        typeDescriptions: {
                          typeIdentifier: 't_uint256',
                          typeString: 'uint256',
                        },
                      },
                    ],
                    expression: {
                      argumentTypes: [
                        {
                          typeIdentifier: 't_uint256',
                          typeString: 'uint256',
                        },
                        {
                          typeIdentifier: 't_uint256',
                          typeString: 'uint256',
                        },
                      ],
                      id: 40196,
                      name: 'SetMaxUnits',
                      nodeType: 'Identifier',
                      overloadedDeclarations: [],
                      referencedDeclaration: 39518,
                      src: '16084:11:59',
                      typeDescriptions: {
                        typeIdentifier: 't_function_event_nonpayable$_t_uint256_$_t_uint256_$returns$__$',
                        typeString: 'function (uint256,uint256)',
                      },
                    },
                    id: 40199,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    kind: 'functionCall',
                    lValueRequested: false,
                    nameLocations: [],
                    names: [],
                    nodeType: 'FunctionCall',
                    src: '16084:26:59',
                    tryCall: false,
                    typeDescriptions: {
                      typeIdentifier: 't_tuple$__$',
                      typeString: 'tuple()',
                    },
                  },
                  id: 40200,
                  nodeType: 'EmitStatement',
                  src: '16079:31:59',
                },
                {
                  expression: {
                    id: 40203,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    lValueRequested: false,
                    leftHandSide: {
                      id: 40201,
                      name: 'maxUnits',
                      nodeType: 'Identifier',
                      overloadedDeclarations: [],
                      referencedDeclaration: 39567,
                      src: '16120:8:59',
                      typeDescriptions: {
                        typeIdentifier: 't_uint256',
                        typeString: 'uint256',
                      },
                    },
                    nodeType: 'Assignment',
                    operator: '=',
                    rightHandSide: {
                      id: 40202,
                      name: 'max',
                      nodeType: 'Identifier',
                      overloadedDeclarations: [],
                      referencedDeclaration: 40191,
                      src: '16131:3:59',
                      typeDescriptions: {
                        typeIdentifier: 't_uint256',
                        typeString: 'uint256',
                      },
                    },
                    src: '16120:14:59',
                    typeDescriptions: {
                      typeIdentifier: 't_uint256',
                      typeString: 'uint256',
                    },
                  },
                  id: 40204,
                  nodeType: 'ExpressionStatement',
                  src: '16120:14:59',
                },
              ],
            },
            documentation: {
              id: 40189,
              nodeType: 'StructuredDocumentation',
              src: '15875:136:59',
              text: ' @notice Change the maximum supply of storage units.\n @param max The new maximum supply of storage units.',
            },
            functionSelector: 'd285e8fd',
            implemented: true,
            kind: 'function',
            modifiers: [
              {
                id: 40194,
                kind: 'modifierInvocation',
                modifierName: {
                  id: 40193,
                  name: 'onlyOwner',
                  nameLocations: ['16059:9:59'],
                  nodeType: 'IdentifierPath',
                  referencedDeclaration: 33256,
                  src: '16059:9:59',
                },
                nodeType: 'ModifierInvocation',
                src: '16059:9:59',
              },
            ],
            name: 'setMaxUnits',
            nameLocation: '16025:11:59',
            parameters: {
              id: 40192,
              nodeType: 'ParameterList',
              parameters: [
                {
                  constant: false,
                  id: 40191,
                  mutability: 'mutable',
                  name: 'max',
                  nameLocation: '16045:3:59',
                  nodeType: 'VariableDeclaration',
                  scope: 40206,
                  src: '16037:11:59',
                  stateVariable: false,
                  storageLocation: 'default',
                  typeDescriptions: {
                    typeIdentifier: 't_uint256',
                    typeString: 'uint256',
                  },
                  typeName: {
                    id: 40190,
                    name: 'uint256',
                    nodeType: 'ElementaryTypeName',
                    src: '16037:7:59',
                    typeDescriptions: {
                      typeIdentifier: 't_uint256',
                      typeString: 'uint256',
                    },
                  },
                  visibility: 'internal',
                },
              ],
              src: '16036:13:59',
            },
            returnParameters: {
              id: 40195,
              nodeType: 'ParameterList',
              parameters: [],
              src: '16069:0:59',
            },
            scope: 40314,
            stateMutability: 'nonpayable',
            virtual: false,
            visibility: 'external',
          },
          {
            id: 40232,
            nodeType: 'FunctionDefinition',
            src: '16272:270:59',
            nodes: [],
            body: {
              id: 40231,
              nodeType: 'Block',
              src: '16343:199:59',
              nodes: [],
              statements: [
                {
                  condition: {
                    commonType: {
                      typeIdentifier: 't_uint256',
                      typeString: 'uint256',
                    },
                    id: 40217,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    lValueRequested: false,
                    leftExpression: {
                      id: 40214,
                      name: 'timestamp',
                      nodeType: 'Identifier',
                      overloadedDeclarations: [],
                      referencedDeclaration: 40209,
                      src: '16357:9:59',
                      typeDescriptions: {
                        typeIdentifier: 't_uint256',
                        typeString: 'uint256',
                      },
                    },
                    nodeType: 'BinaryOperation',
                    operator: '<',
                    rightExpression: {
                      expression: {
                        id: 40215,
                        name: 'block',
                        nodeType: 'Identifier',
                        overloadedDeclarations: [],
                        referencedDeclaration: -4,
                        src: '16369:5:59',
                        typeDescriptions: {
                          typeIdentifier: 't_magic_block',
                          typeString: 'block',
                        },
                      },
                      id: 40216,
                      isConstant: false,
                      isLValue: false,
                      isPure: false,
                      lValueRequested: false,
                      memberLocation: '16375:9:59',
                      memberName: 'timestamp',
                      nodeType: 'MemberAccess',
                      src: '16369:15:59',
                      typeDescriptions: {
                        typeIdentifier: 't_uint256',
                        typeString: 'uint256',
                      },
                    },
                    src: '16357:27:59',
                    typeDescriptions: {
                      typeIdentifier: 't_bool',
                      typeString: 'bool',
                    },
                  },
                  id: 40221,
                  nodeType: 'IfStatement',
                  src: '16353:69:59',
                  trueBody: {
                    errorCall: {
                      arguments: [],
                      expression: {
                        argumentTypes: [],
                        id: 40218,
                        name: 'InvalidDeprecationTimestamp',
                        nodeType: 'Identifier',
                        overloadedDeclarations: [],
                        referencedDeclaration: 39495,
                        src: '16393:27:59',
                        typeDescriptions: {
                          typeIdentifier: 't_function_error_pure$__$returns$__$',
                          typeString: 'function () pure',
                        },
                      },
                      id: 40219,
                      isConstant: false,
                      isLValue: false,
                      isPure: false,
                      kind: 'functionCall',
                      lValueRequested: false,
                      nameLocations: [],
                      names: [],
                      nodeType: 'FunctionCall',
                      src: '16393:29:59',
                      tryCall: false,
                      typeDescriptions: {
                        typeIdentifier: 't_tuple$__$',
                        typeString: 'tuple()',
                      },
                    },
                    id: 40220,
                    nodeType: 'RevertStatement',
                    src: '16386:36:59',
                  },
                },
                {
                  eventCall: {
                    arguments: [
                      {
                        id: 40223,
                        name: 'deprecationTimestamp',
                        nodeType: 'Identifier',
                        overloadedDeclarations: [],
                        referencedDeclaration: 39561,
                        src: '16461:20:59',
                        typeDescriptions: {
                          typeIdentifier: 't_uint256',
                          typeString: 'uint256',
                        },
                      },
                      {
                        id: 40224,
                        name: 'timestamp',
                        nodeType: 'Identifier',
                        overloadedDeclarations: [],
                        referencedDeclaration: 40209,
                        src: '16483:9:59',
                        typeDescriptions: {
                          typeIdentifier: 't_uint256',
                          typeString: 'uint256',
                        },
                      },
                    ],
                    expression: {
                      argumentTypes: [
                        {
                          typeIdentifier: 't_uint256',
                          typeString: 'uint256',
                        },
                        {
                          typeIdentifier: 't_uint256',
                          typeString: 'uint256',
                        },
                      ],
                      id: 40222,
                      name: 'SetDeprecationTimestamp',
                      nodeType: 'Identifier',
                      overloadedDeclarations: [],
                      referencedDeclaration: 39525,
                      src: '16437:23:59',
                      typeDescriptions: {
                        typeIdentifier: 't_function_event_nonpayable$_t_uint256_$_t_uint256_$returns$__$',
                        typeString: 'function (uint256,uint256)',
                      },
                    },
                    id: 40225,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    kind: 'functionCall',
                    lValueRequested: false,
                    nameLocations: [],
                    names: [],
                    nodeType: 'FunctionCall',
                    src: '16437:56:59',
                    tryCall: false,
                    typeDescriptions: {
                      typeIdentifier: 't_tuple$__$',
                      typeString: 'tuple()',
                    },
                  },
                  id: 40226,
                  nodeType: 'EmitStatement',
                  src: '16432:61:59',
                },
                {
                  expression: {
                    id: 40229,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    lValueRequested: false,
                    leftHandSide: {
                      id: 40227,
                      name: 'deprecationTimestamp',
                      nodeType: 'Identifier',
                      overloadedDeclarations: [],
                      referencedDeclaration: 39561,
                      src: '16503:20:59',
                      typeDescriptions: {
                        typeIdentifier: 't_uint256',
                        typeString: 'uint256',
                      },
                    },
                    nodeType: 'Assignment',
                    operator: '=',
                    rightHandSide: {
                      id: 40228,
                      name: 'timestamp',
                      nodeType: 'Identifier',
                      overloadedDeclarations: [],
                      referencedDeclaration: 40209,
                      src: '16526:9:59',
                      typeDescriptions: {
                        typeIdentifier: 't_uint256',
                        typeString: 'uint256',
                      },
                    },
                    src: '16503:32:59',
                    typeDescriptions: {
                      typeIdentifier: 't_uint256',
                      typeString: 'uint256',
                    },
                  },
                  id: 40230,
                  nodeType: 'ExpressionStatement',
                  src: '16503:32:59',
                },
              ],
            },
            documentation: {
              id: 40207,
              nodeType: 'StructuredDocumentation',
              src: '16147:120:59',
              text: ' @notice Change the deprecationTimestamp.\n @param timestamp The new deprecationTimestamp.',
            },
            functionSelector: '8d567f86',
            implemented: true,
            kind: 'function',
            modifiers: [
              {
                id: 40212,
                kind: 'modifierInvocation',
                modifierName: {
                  id: 40211,
                  name: 'onlyOwner',
                  nameLocations: ['16333:9:59'],
                  nodeType: 'IdentifierPath',
                  referencedDeclaration: 33256,
                  src: '16333:9:59',
                },
                nodeType: 'ModifierInvocation',
                src: '16333:9:59',
              },
            ],
            name: 'setDeprecationTimestamp',
            nameLocation: '16281:23:59',
            parameters: {
              id: 40210,
              nodeType: 'ParameterList',
              parameters: [
                {
                  constant: false,
                  id: 40209,
                  mutability: 'mutable',
                  name: 'timestamp',
                  nameLocation: '16313:9:59',
                  nodeType: 'VariableDeclaration',
                  scope: 40232,
                  src: '16305:17:59',
                  stateVariable: false,
                  storageLocation: 'default',
                  typeDescriptions: {
                    typeIdentifier: 't_uint256',
                    typeString: 'uint256',
                  },
                  typeName: {
                    id: 40208,
                    name: 'uint256',
                    nodeType: 'ElementaryTypeName',
                    src: '16305:7:59',
                    typeDescriptions: {
                      typeIdentifier: 't_uint256',
                      typeString: 'uint256',
                    },
                  },
                  visibility: 'internal',
                },
              ],
              src: '16304:19:59',
            },
            returnParameters: {
              id: 40213,
              nodeType: 'ParameterList',
              parameters: [],
              src: '16343:0:59',
            },
            scope: 40314,
            stateMutability: 'nonpayable',
            virtual: false,
            visibility: 'external',
          },
          {
            id: 40250,
            nodeType: 'FunctionDefinition',
            src: '16676:178:59',
            nodes: [],
            body: {
              id: 40249,
              nodeType: 'Block',
              src: '16739:115:59',
              nodes: [],
              statements: [
                {
                  eventCall: {
                    arguments: [
                      {
                        id: 40241,
                        name: 'priceFeedCacheDuration',
                        nodeType: 'Identifier',
                        overloadedDeclarations: [],
                        referencedDeclaration: 39570,
                        src: '16771:22:59',
                        typeDescriptions: {
                          typeIdentifier: 't_uint256',
                          typeString: 'uint256',
                        },
                      },
                      {
                        id: 40242,
                        name: 'duration',
                        nodeType: 'Identifier',
                        overloadedDeclarations: [],
                        referencedDeclaration: 40235,
                        src: '16795:8:59',
                        typeDescriptions: {
                          typeIdentifier: 't_uint256',
                          typeString: 'uint256',
                        },
                      },
                    ],
                    expression: {
                      argumentTypes: [
                        {
                          typeIdentifier: 't_uint256',
                          typeString: 'uint256',
                        },
                        {
                          typeIdentifier: 't_uint256',
                          typeString: 'uint256',
                        },
                      ],
                      id: 40240,
                      name: 'SetCacheDuration',
                      nodeType: 'Identifier',
                      overloadedDeclarations: [],
                      referencedDeclaration: 39532,
                      src: '16754:16:59',
                      typeDescriptions: {
                        typeIdentifier: 't_function_event_nonpayable$_t_uint256_$_t_uint256_$returns$__$',
                        typeString: 'function (uint256,uint256)',
                      },
                    },
                    id: 40243,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    kind: 'functionCall',
                    lValueRequested: false,
                    nameLocations: [],
                    names: [],
                    nodeType: 'FunctionCall',
                    src: '16754:50:59',
                    tryCall: false,
                    typeDescriptions: {
                      typeIdentifier: 't_tuple$__$',
                      typeString: 'tuple()',
                    },
                  },
                  id: 40244,
                  nodeType: 'EmitStatement',
                  src: '16749:55:59',
                },
                {
                  expression: {
                    id: 40247,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    lValueRequested: false,
                    leftHandSide: {
                      id: 40245,
                      name: 'priceFeedCacheDuration',
                      nodeType: 'Identifier',
                      overloadedDeclarations: [],
                      referencedDeclaration: 39570,
                      src: '16814:22:59',
                      typeDescriptions: {
                        typeIdentifier: 't_uint256',
                        typeString: 'uint256',
                      },
                    },
                    nodeType: 'Assignment',
                    operator: '=',
                    rightHandSide: {
                      id: 40246,
                      name: 'duration',
                      nodeType: 'Identifier',
                      overloadedDeclarations: [],
                      referencedDeclaration: 40235,
                      src: '16839:8:59',
                      typeDescriptions: {
                        typeIdentifier: 't_uint256',
                        typeString: 'uint256',
                      },
                    },
                    src: '16814:33:59',
                    typeDescriptions: {
                      typeIdentifier: 't_uint256',
                      typeString: 'uint256',
                    },
                  },
                  id: 40248,
                  nodeType: 'ExpressionStatement',
                  src: '16814:33:59',
                },
              ],
            },
            documentation: {
              id: 40233,
              nodeType: 'StructuredDocumentation',
              src: '16548:123:59',
              text: ' @notice Change the priceFeedCacheDuration.\n @param duration The new priceFeedCacheDuration.',
            },
            functionSelector: '194e9951',
            implemented: true,
            kind: 'function',
            modifiers: [
              {
                id: 40238,
                kind: 'modifierInvocation',
                modifierName: {
                  id: 40237,
                  name: 'onlyOwner',
                  nameLocations: ['16729:9:59'],
                  nodeType: 'IdentifierPath',
                  referencedDeclaration: 33256,
                  src: '16729:9:59',
                },
                nodeType: 'ModifierInvocation',
                src: '16729:9:59',
              },
            ],
            name: 'setCacheDuration',
            nameLocation: '16685:16:59',
            parameters: {
              id: 40236,
              nodeType: 'ParameterList',
              parameters: [
                {
                  constant: false,
                  id: 40235,
                  mutability: 'mutable',
                  name: 'duration',
                  nameLocation: '16710:8:59',
                  nodeType: 'VariableDeclaration',
                  scope: 40250,
                  src: '16702:16:59',
                  stateVariable: false,
                  storageLocation: 'default',
                  typeDescriptions: {
                    typeIdentifier: 't_uint256',
                    typeString: 'uint256',
                  },
                  typeName: {
                    id: 40234,
                    name: 'uint256',
                    nodeType: 'ElementaryTypeName',
                    src: '16702:7:59',
                    typeDescriptions: {
                      typeIdentifier: 't_uint256',
                      typeString: 'uint256',
                    },
                  },
                  visibility: 'internal',
                },
              ],
              src: '16701:18:59',
            },
            returnParameters: {
              id: 40239,
              nodeType: 'ParameterList',
              parameters: [],
              src: '16739:0:59',
            },
            scope: 40314,
            stateMutability: 'nonpayable',
            virtual: false,
            visibility: 'external',
          },
          {
            id: 40268,
            nodeType: 'FunctionDefinition',
            src: '16984:166:59',
            nodes: [],
            body: {
              id: 40267,
              nodeType: 'Block',
              src: '17043:107:59',
              nodes: [],
              statements: [
                {
                  eventCall: {
                    arguments: [
                      {
                        id: 40259,
                        name: 'uptimeFeedGracePeriod',
                        nodeType: 'Identifier',
                        overloadedDeclarations: [],
                        referencedDeclaration: 39573,
                        src: '17073:21:59',
                        typeDescriptions: {
                          typeIdentifier: 't_uint256',
                          typeString: 'uint256',
                        },
                      },
                      {
                        id: 40260,
                        name: 'period',
                        nodeType: 'Identifier',
                        overloadedDeclarations: [],
                        referencedDeclaration: 40253,
                        src: '17096:6:59',
                        typeDescriptions: {
                          typeIdentifier: 't_uint256',
                          typeString: 'uint256',
                        },
                      },
                    ],
                    expression: {
                      argumentTypes: [
                        {
                          typeIdentifier: 't_uint256',
                          typeString: 'uint256',
                        },
                        {
                          typeIdentifier: 't_uint256',
                          typeString: 'uint256',
                        },
                      ],
                      id: 40258,
                      name: 'SetGracePeriod',
                      nodeType: 'Identifier',
                      overloadedDeclarations: [],
                      referencedDeclaration: 39539,
                      src: '17058:14:59',
                      typeDescriptions: {
                        typeIdentifier: 't_function_event_nonpayable$_t_uint256_$_t_uint256_$returns$__$',
                        typeString: 'function (uint256,uint256)',
                      },
                    },
                    id: 40261,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    kind: 'functionCall',
                    lValueRequested: false,
                    nameLocations: [],
                    names: [],
                    nodeType: 'FunctionCall',
                    src: '17058:45:59',
                    tryCall: false,
                    typeDescriptions: {
                      typeIdentifier: 't_tuple$__$',
                      typeString: 'tuple()',
                    },
                  },
                  id: 40262,
                  nodeType: 'EmitStatement',
                  src: '17053:50:59',
                },
                {
                  expression: {
                    id: 40265,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    lValueRequested: false,
                    leftHandSide: {
                      id: 40263,
                      name: 'uptimeFeedGracePeriod',
                      nodeType: 'Identifier',
                      overloadedDeclarations: [],
                      referencedDeclaration: 39573,
                      src: '17113:21:59',
                      typeDescriptions: {
                        typeIdentifier: 't_uint256',
                        typeString: 'uint256',
                      },
                    },
                    nodeType: 'Assignment',
                    operator: '=',
                    rightHandSide: {
                      id: 40264,
                      name: 'period',
                      nodeType: 'Identifier',
                      overloadedDeclarations: [],
                      referencedDeclaration: 40253,
                      src: '17137:6:59',
                      typeDescriptions: {
                        typeIdentifier: 't_uint256',
                        typeString: 'uint256',
                      },
                    },
                    src: '17113:30:59',
                    typeDescriptions: {
                      typeIdentifier: 't_uint256',
                      typeString: 'uint256',
                    },
                  },
                  id: 40266,
                  nodeType: 'ExpressionStatement',
                  src: '17113:30:59',
                },
              ],
            },
            documentation: {
              id: 40251,
              nodeType: 'StructuredDocumentation',
              src: '16860:119:59',
              text: ' @notice Change the uptimeFeedGracePeriod.\n @param period The new uptimeFeedGracePeriod.',
            },
            functionSelector: 'f2f65960',
            implemented: true,
            kind: 'function',
            modifiers: [
              {
                id: 40256,
                kind: 'modifierInvocation',
                modifierName: {
                  id: 40255,
                  name: 'onlyOwner',
                  nameLocations: ['17033:9:59'],
                  nodeType: 'IdentifierPath',
                  referencedDeclaration: 33256,
                  src: '17033:9:59',
                },
                nodeType: 'ModifierInvocation',
                src: '17033:9:59',
              },
            ],
            name: 'setGracePeriod',
            nameLocation: '16993:14:59',
            parameters: {
              id: 40254,
              nodeType: 'ParameterList',
              parameters: [
                {
                  constant: false,
                  id: 40253,
                  mutability: 'mutable',
                  name: 'period',
                  nameLocation: '17016:6:59',
                  nodeType: 'VariableDeclaration',
                  scope: 40268,
                  src: '17008:14:59',
                  stateVariable: false,
                  storageLocation: 'default',
                  typeDescriptions: {
                    typeIdentifier: 't_uint256',
                    typeString: 'uint256',
                  },
                  typeName: {
                    id: 40252,
                    name: 'uint256',
                    nodeType: 'ElementaryTypeName',
                    src: '17008:7:59',
                    typeDescriptions: {
                      typeIdentifier: 't_uint256',
                      typeString: 'uint256',
                    },
                  },
                  visibility: 'internal',
                },
              ],
              src: '17007:16:59',
            },
            returnParameters: {
              id: 40257,
              nodeType: 'ParameterList',
              parameters: [],
              src: '17043:0:59',
            },
            scope: 40314,
            stateMutability: 'nonpayable',
            virtual: false,
            visibility: 'external',
          },
          {
            id: 40313,
            nodeType: 'FunctionDefinition',
            src: '17374:285:59',
            nodes: [],
            body: {
              id: 40312,
              nodeType: 'Block',
              src: '17439:220:59',
              nodes: [],
              statements: [
                {
                  condition: {
                    commonType: {
                      typeIdentifier: 't_uint256',
                      typeString: 'uint256',
                    },
                    id: 40284,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    lValueRequested: false,
                    leftExpression: {
                      expression: {
                        arguments: [
                          {
                            id: 40280,
                            name: 'this',
                            nodeType: 'Identifier',
                            overloadedDeclarations: [],
                            referencedDeclaration: -28,
                            src: '17461:4:59',
                            typeDescriptions: {
                              typeIdentifier: 't_contract$_StorageRent_$40314',
                              typeString: 'contract StorageRent',
                            },
                          },
                        ],
                        expression: {
                          argumentTypes: [
                            {
                              typeIdentifier: 't_contract$_StorageRent_$40314',
                              typeString: 'contract StorageRent',
                            },
                          ],
                          id: 40279,
                          isConstant: false,
                          isLValue: false,
                          isPure: true,
                          lValueRequested: false,
                          nodeType: 'ElementaryTypeNameExpression',
                          src: '17453:7:59',
                          typeDescriptions: {
                            typeIdentifier: 't_type$_t_address_$',
                            typeString: 'type(address)',
                          },
                          typeName: {
                            id: 40278,
                            name: 'address',
                            nodeType: 'ElementaryTypeName',
                            src: '17453:7:59',
                            typeDescriptions: {},
                          },
                        },
                        id: 40281,
                        isConstant: false,
                        isLValue: false,
                        isPure: false,
                        kind: 'typeConversion',
                        lValueRequested: false,
                        nameLocations: [],
                        names: [],
                        nodeType: 'FunctionCall',
                        src: '17453:13:59',
                        tryCall: false,
                        typeDescriptions: {
                          typeIdentifier: 't_address',
                          typeString: 'address',
                        },
                      },
                      id: 40282,
                      isConstant: false,
                      isLValue: false,
                      isPure: false,
                      lValueRequested: false,
                      memberLocation: '17467:7:59',
                      memberName: 'balance',
                      nodeType: 'MemberAccess',
                      src: '17453:21:59',
                      typeDescriptions: {
                        typeIdentifier: 't_uint256',
                        typeString: 'uint256',
                      },
                    },
                    nodeType: 'BinaryOperation',
                    operator: '<',
                    rightExpression: {
                      id: 40283,
                      name: 'amount',
                      nodeType: 'Identifier',
                      overloadedDeclarations: [],
                      referencedDeclaration: 40273,
                      src: '17477:6:59',
                      typeDescriptions: {
                        typeIdentifier: 't_uint256',
                        typeString: 'uint256',
                      },
                    },
                    src: '17453:30:59',
                    typeDescriptions: {
                      typeIdentifier: 't_bool',
                      typeString: 'bool',
                    },
                  },
                  id: 40288,
                  nodeType: 'IfStatement',
                  src: '17449:62:59',
                  trueBody: {
                    errorCall: {
                      arguments: [],
                      expression: {
                        argumentTypes: [],
                        id: 40285,
                        name: 'InsufficientFunds',
                        nodeType: 'Identifier',
                        overloadedDeclarations: [],
                        referencedDeclaration: 39474,
                        src: '17492:17:59',
                        typeDescriptions: {
                          typeIdentifier: 't_function_error_pure$__$returns$__$',
                          typeString: 'function () pure',
                        },
                      },
                      id: 40286,
                      isConstant: false,
                      isLValue: false,
                      isPure: false,
                      kind: 'functionCall',
                      lValueRequested: false,
                      nameLocations: [],
                      names: [],
                      nodeType: 'FunctionCall',
                      src: '17492:19:59',
                      tryCall: false,
                      typeDescriptions: {
                        typeIdentifier: 't_tuple$__$',
                        typeString: 'tuple()',
                      },
                    },
                    id: 40287,
                    nodeType: 'RevertStatement',
                    src: '17485:26:59',
                  },
                },
                {
                  eventCall: {
                    arguments: [
                      {
                        id: 40290,
                        name: 'to',
                        nodeType: 'Identifier',
                        overloadedDeclarations: [],
                        referencedDeclaration: 40271,
                        src: '17535:2:59',
                        typeDescriptions: {
                          typeIdentifier: 't_address',
                          typeString: 'address',
                        },
                      },
                      {
                        id: 40291,
                        name: 'amount',
                        nodeType: 'Identifier',
                        overloadedDeclarations: [],
                        referencedDeclaration: 40273,
                        src: '17539:6:59',
                        typeDescriptions: {
                          typeIdentifier: 't_uint256',
                          typeString: 'uint256',
                        },
                      },
                    ],
                    expression: {
                      argumentTypes: [
                        {
                          typeIdentifier: 't_address',
                          typeString: 'address',
                        },
                        {
                          typeIdentifier: 't_uint256',
                          typeString: 'uint256',
                        },
                      ],
                      id: 40289,
                      name: 'Withdraw',
                      nodeType: 'Identifier',
                      overloadedDeclarations: [],
                      referencedDeclaration: 39546,
                      src: '17526:8:59',
                      typeDescriptions: {
                        typeIdentifier: 't_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$',
                        typeString: 'function (address,uint256)',
                      },
                    },
                    id: 40292,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    kind: 'functionCall',
                    lValueRequested: false,
                    nameLocations: [],
                    names: [],
                    nodeType: 'FunctionCall',
                    src: '17526:20:59',
                    tryCall: false,
                    typeDescriptions: {
                      typeIdentifier: 't_tuple$__$',
                      typeString: 'tuple()',
                    },
                  },
                  id: 40293,
                  nodeType: 'EmitStatement',
                  src: '17521:25:59',
                },
                {
                  assignments: [40295, null],
                  declarations: [
                    {
                      constant: false,
                      id: 40295,
                      mutability: 'mutable',
                      name: 'success',
                      nameLocation: '17562:7:59',
                      nodeType: 'VariableDeclaration',
                      scope: 40312,
                      src: '17557:12:59',
                      stateVariable: false,
                      storageLocation: 'default',
                      typeDescriptions: {
                        typeIdentifier: 't_bool',
                        typeString: 'bool',
                      },
                      typeName: {
                        id: 40294,
                        name: 'bool',
                        nodeType: 'ElementaryTypeName',
                        src: '17557:4:59',
                        typeDescriptions: {
                          typeIdentifier: 't_bool',
                          typeString: 'bool',
                        },
                      },
                      visibility: 'internal',
                    },
                    null,
                  ],
                  id: 40305,
                  initialValue: {
                    arguments: [
                      {
                        hexValue: '',
                        id: 40303,
                        isConstant: false,
                        isLValue: false,
                        isPure: true,
                        kind: 'string',
                        lValueRequested: false,
                        nodeType: 'Literal',
                        src: '17606:2:59',
                        typeDescriptions: {
                          typeIdentifier:
                            't_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470',
                          typeString: 'literal_string ""',
                        },
                        value: '',
                      },
                    ],
                    expression: {
                      argumentTypes: [
                        {
                          typeIdentifier:
                            't_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470',
                          typeString: 'literal_string ""',
                        },
                      ],
                      expression: {
                        argumentTypes: [
                          {
                            typeIdentifier:
                              't_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470',
                            typeString: 'literal_string ""',
                          },
                        ],
                        expression: {
                          arguments: [
                            {
                              id: 40298,
                              name: 'to',
                              nodeType: 'Identifier',
                              overloadedDeclarations: [],
                              referencedDeclaration: 40271,
                              src: '17582:2:59',
                              typeDescriptions: {
                                typeIdentifier: 't_address',
                                typeString: 'address',
                              },
                            },
                          ],
                          expression: {
                            argumentTypes: [
                              {
                                typeIdentifier: 't_address',
                                typeString: 'address',
                              },
                            ],
                            id: 40297,
                            isConstant: false,
                            isLValue: false,
                            isPure: true,
                            lValueRequested: false,
                            nodeType: 'ElementaryTypeNameExpression',
                            src: '17574:8:59',
                            typeDescriptions: {
                              typeIdentifier: 't_type$_t_address_payable_$',
                              typeString: 'type(address payable)',
                            },
                            typeName: {
                              id: 40296,
                              name: 'address',
                              nodeType: 'ElementaryTypeName',
                              src: '17574:8:59',
                              stateMutability: 'payable',
                              typeDescriptions: {},
                            },
                          },
                          id: 40299,
                          isConstant: false,
                          isLValue: false,
                          isPure: false,
                          kind: 'typeConversion',
                          lValueRequested: false,
                          nameLocations: [],
                          names: [],
                          nodeType: 'FunctionCall',
                          src: '17574:11:59',
                          tryCall: false,
                          typeDescriptions: {
                            typeIdentifier: 't_address_payable',
                            typeString: 'address payable',
                          },
                        },
                        id: 40300,
                        isConstant: false,
                        isLValue: false,
                        isPure: false,
                        lValueRequested: false,
                        memberLocation: '17586:4:59',
                        memberName: 'call',
                        nodeType: 'MemberAccess',
                        src: '17574:16:59',
                        typeDescriptions: {
                          typeIdentifier:
                            't_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$',
                          typeString: 'function (bytes memory) payable returns (bool,bytes memory)',
                        },
                      },
                      id: 40302,
                      isConstant: false,
                      isLValue: false,
                      isPure: false,
                      lValueRequested: false,
                      names: ['value'],
                      nodeType: 'FunctionCallOptions',
                      options: [
                        {
                          id: 40301,
                          name: 'amount',
                          nodeType: 'Identifier',
                          overloadedDeclarations: [],
                          referencedDeclaration: 40273,
                          src: '17598:6:59',
                          typeDescriptions: {
                            typeIdentifier: 't_uint256',
                            typeString: 'uint256',
                          },
                        },
                      ],
                      src: '17574:31:59',
                      typeDescriptions: {
                        typeIdentifier:
                          't_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value',
                        typeString: 'function (bytes memory) payable returns (bool,bytes memory)',
                      },
                    },
                    id: 40304,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    kind: 'functionCall',
                    lValueRequested: false,
                    nameLocations: [],
                    names: [],
                    nodeType: 'FunctionCall',
                    src: '17574:35:59',
                    tryCall: false,
                    typeDescriptions: {
                      typeIdentifier: 't_tuple$_t_bool_$_t_bytes_memory_ptr_$',
                      typeString: 'tuple(bool,bytes memory)',
                    },
                  },
                  nodeType: 'VariableDeclarationStatement',
                  src: '17556:53:59',
                },
                {
                  condition: {
                    id: 40307,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    lValueRequested: false,
                    nodeType: 'UnaryOperation',
                    operator: '!',
                    prefix: true,
                    src: '17623:8:59',
                    subExpression: {
                      id: 40306,
                      name: 'success',
                      nodeType: 'Identifier',
                      overloadedDeclarations: [],
                      referencedDeclaration: 40295,
                      src: '17624:7:59',
                      typeDescriptions: {
                        typeIdentifier: 't_bool',
                        typeString: 'bool',
                      },
                    },
                    typeDescriptions: {
                      typeIdentifier: 't_bool',
                      typeString: 'bool',
                    },
                  },
                  id: 40311,
                  nodeType: 'IfStatement',
                  src: '17619:33:59',
                  trueBody: {
                    errorCall: {
                      arguments: [],
                      expression: {
                        argumentTypes: [],
                        id: 40308,
                        name: 'CallFailed',
                        nodeType: 'Identifier',
                        overloadedDeclarations: [],
                        referencedDeclaration: 39477,
                        src: '17640:10:59',
                        typeDescriptions: {
                          typeIdentifier: 't_function_error_pure$__$returns$__$',
                          typeString: 'function () pure',
                        },
                      },
                      id: 40309,
                      isConstant: false,
                      isLValue: false,
                      isPure: false,
                      kind: 'functionCall',
                      lValueRequested: false,
                      nameLocations: [],
                      names: [],
                      nodeType: 'FunctionCall',
                      src: '17640:12:59',
                      tryCall: false,
                      typeDescriptions: {
                        typeIdentifier: 't_tuple$__$',
                        typeString: 'tuple()',
                      },
                    },
                    id: 40310,
                    nodeType: 'RevertStatement',
                    src: '17633:19:59',
                  },
                },
              ],
            },
            documentation: {
              id: 40269,
              nodeType: 'StructuredDocumentation',
              src: '17156:213:59',
              text: ' @notice Withdraw a specified amount of ether from the contract balance to a given address.\n @param to     Address of recipient.\n @param amount The amount of ether to withdraw.',
            },
            functionSelector: 'f3fef3a3',
            implemented: true,
            kind: 'function',
            modifiers: [
              {
                id: 40276,
                kind: 'modifierInvocation',
                modifierName: {
                  id: 40275,
                  name: 'onlyOwner',
                  nameLocations: ['17429:9:59'],
                  nodeType: 'IdentifierPath',
                  referencedDeclaration: 33256,
                  src: '17429:9:59',
                },
                nodeType: 'ModifierInvocation',
                src: '17429:9:59',
              },
            ],
            name: 'withdraw',
            nameLocation: '17383:8:59',
            parameters: {
              id: 40274,
              nodeType: 'ParameterList',
              parameters: [
                {
                  constant: false,
                  id: 40271,
                  mutability: 'mutable',
                  name: 'to',
                  nameLocation: '17400:2:59',
                  nodeType: 'VariableDeclaration',
                  scope: 40313,
                  src: '17392:10:59',
                  stateVariable: false,
                  storageLocation: 'default',
                  typeDescriptions: {
                    typeIdentifier: 't_address',
                    typeString: 'address',
                  },
                  typeName: {
                    id: 40270,
                    name: 'address',
                    nodeType: 'ElementaryTypeName',
                    src: '17392:7:59',
                    stateMutability: 'nonpayable',
                    typeDescriptions: {
                      typeIdentifier: 't_address',
                      typeString: 'address',
                    },
                  },
                  visibility: 'internal',
                },
                {
                  constant: false,
                  id: 40273,
                  mutability: 'mutable',
                  name: 'amount',
                  nameLocation: '17412:6:59',
                  nodeType: 'VariableDeclaration',
                  scope: 40313,
                  src: '17404:14:59',
                  stateVariable: false,
                  storageLocation: 'default',
                  typeDescriptions: {
                    typeIdentifier: 't_uint256',
                    typeString: 'uint256',
                  },
                  typeName: {
                    id: 40272,
                    name: 'uint256',
                    nodeType: 'ElementaryTypeName',
                    src: '17404:7:59',
                    typeDescriptions: {
                      typeIdentifier: 't_uint256',
                      typeString: 'uint256',
                    },
                  },
                  visibility: 'internal',
                },
              ],
              src: '17391:28:59',
            },
            returnParameters: {
              id: 40277,
              nodeType: 'ParameterList',
              parameters: [],
              src: '17439:0:59',
            },
            scope: 40314,
            stateMutability: 'nonpayable',
            virtual: false,
            visibility: 'external',
          },
        ],
        abstract: false,
        baseContracts: [
          {
            baseName: {
              id: 39452,
              name: 'Ownable2Step',
              nameLocations: ['332:12:59'],
              nodeType: 'IdentifierPath',
              referencedDeclaration: 33420,
              src: '332:12:59',
            },
            id: 39453,
            nodeType: 'InheritanceSpecifier',
            src: '332:12:59',
          },
        ],
        canonicalName: 'StorageRent',
        contractDependencies: [],
        contractKind: 'contract',
        fullyImplemented: true,
        linearizedBaseContracts: [40314, 33420, 33337, 34449],
        name: 'StorageRent',
        nameLocation: '317:11:59',
        scope: 40315,
        usedErrors: [39459, 39462, 39465, 39468, 39471, 39474, 39477, 39480, 39483, 39486, 39489, 39492, 39495],
      },
    ],
    license: 'UNLICENSED',
  },
  id: 59,
};
